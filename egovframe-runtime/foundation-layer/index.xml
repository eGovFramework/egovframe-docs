<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>공통기반 on 표준프레임워크 개발가이드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/</link><description>Recent content in 공통기반 on 표준프레임워크 개발가이드</description><generator>Hugo -- gohugo.io</generator><language>ko</language><atom:link href="https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/index.xml" rel="self" type="application/rss+xml"/><item><title>Server Security Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/</guid><description>Server Security Service 개요 웹을 통해 데이터를 주고받는 업무를 진행할 경우, 보안상의 문제가 발생하기 쉽다.
Security Service는 웹을 통한 서비스 이용 시 발생할 수 있는 다양한 보안상의 취약점들을 사전에 인지하고 대응함으로써, 서비스의 안정성을 확보한다.
Security Service는 사용자 정보를 DB에서 관리하여 인증을 거쳐야만 접근할 수 있는 Authentication과 사용자 권한 정보를 계층화시켜서 화면 및 페이지, 또는 메소드에 접근할 수 있는 Authorization이 포함된다.
설명 Server Security Service는 Spring Framework의 Spring Security를 확장하여 구현하였으며, 사용자 인증정보 및 권한정보를 DB에서 관리하고, Spring Security의 UserDetails 인터페이스를 확장하여 세션정보를 담을 수 있다.</description></item><item><title>Architecture</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security-architecture/</guid><description>Architecture 개요 전자정부 개발프레임워크의 Spring Security 기본구조와 기본 환경 설정을 설명한다.
전자정부 개발프레임워크의 Server Security는 컨테이너 기동시 적용되는 XML기반 인증이 아닌 실시간 적용되는 DB기반의 JDBC 인증을 사용한다.
설명 Spring Security 아키텍처 웹어플리케이션 인증절차 리소스 요청
요청에 대해 보호되고 있는 자원인지 판단
아직 인증이 안되었으므로 HTTP 응답코드(오류) 또는 특정 페이지로 redirect
인증 메커니즘에 따라 웹 페이지 로그인 폼 또는 X509 인증서
입력 폼의 내용을 HTTP post 또는 인증 세부사항을 포함하는 HTTP 헤더를 서버로 요청</description></item><item><title>Authentication</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security-authentication/</guid><description>Authentication 개요 허락된 사용자에게만 공개되는 컨텐츠(정보 또는 기능)에 접근하기 위해 반드시 아이디와 암호를 입력하는 로그인 과정을 거치는데 이러한 과정이 인증(authentication)이다.
즉, 인증은 특정 사용자가 유효한 사용자인지를 판단하는 과정을 의미한다.
본 가이드에서는 인증을 위한 기본적인 환경 및 전자정부 표준프레임워크에서 사용된 인증 방법을 설명한다.
설명 전자정부 표준프레임워크의 인증은 XML기반의 인증이 아닌 DB기반의 JDBC인증을 사용한다.
기본적인 인증 메커니즘은 인증 주체가 인증을 시도하는 초기에 오직 한 번만 인증 메커니즘이 사용되며 그 이후로는 인증 메커니즘이 정보를 필터에 유지하여 요구되는 요청을 필터 체인상의 다음 필터로 전달하기만 한다.</description></item><item><title>Authorization</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security-authorization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security-authorization/</guid><description>Authorization 개요 웹 사이트에 존재하는 모든 사용자들은 사이트 정책에 따라 그 부류 별로 컨텐츠에 대한 접근이 제한 되는데 이것을 권한 부여(authorization)라 한다. 즉, 권한은 특정 사용자가 웹 사이트에서 제공하는 컨텐츠(정보 또는 기능)에 접근 가능한지를 판단하는 과정을 의미한다.
설명 Authorization은 XML 또는 DB에서 권한을 관리하며 계층적 권한을 지원한다.
Server Security에서는 Filter Security Interceptor에 의해 처리되며, DB로부터 권한 정보를 처리하기 위해 다음과 같이 설정된다.
&amp;lt;http ...&amp;gt; ... &amp;lt;!-- for authorization --&amp;gt; &amp;lt;custom-filter before=&amp;#34;FILTER_SECURITY_INTERCEPTOR&amp;#34; ref=&amp;#34;filterSecurityInterceptor&amp;#34;/&amp;gt; &amp;lt;/http&amp;gt; &amp;lt;beans:bean id=&amp;#34;filterSecurityInterceptor&amp;#34; class=&amp;#34;org.</description></item><item><title>설정 간소화</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security-simplifying-settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security-simplifying-settings/</guid><description>설정 간소화 개요 표준프레임워크 3.0부터 Server security에 대하여 설정을 간소화 할 수 있는 방법을 제공한다. 내부적으로 필요한 설정을 가지고 있고, XML Schema를 통해 필요한 설정만을 추가할 수 있도록 제공한다.
XML namespace 및 schema 설정 설정 간소화 기능을 사용하기 위해서는 다음과 같은 xml 선언이 필요하다. 4.1 &amp;gt; 4.2 업그레이드 시 xsd 변경(egov-security-4.1.0.xsd &amp;gt; egov-security-4.2.0.xsd)
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;beans xmlns=&amp;#34;http://www.springframework.org/schema/beans&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xmlns:egov-security=&amp;#34;http://maven.egovframe.go.kr/schema/egov-security&amp;#34; xmlns:security=&amp;#34;http://www.springframework.org/schema/security&amp;#34; xsi:schemaLocation=&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://maven.egovframe.go.kr/schema/egov-security http://maven.egovframe.go.kr/schema/egov-security/egov-security-4.2.0.xsd&amp;#34;&amp;gt; Security Config 설정 Security에 대한 기본 설정 정보를 제공한다.</description></item><item><title>Server Security 업그레이드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security-upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security-upgrade/</guid><description>Server Security 업그레이드 개요 표준프레임워크 2.7(Spring Security 2.0.4)에서 3.0(Spring Security 3.2.3)로 업그레이드 Server security의 경우 설정 변경뿐만 아니라 소스 상의 변경 작업이 필요하다.
주요 변경내용 (Spring Security 부분) dependencies 및 패키지 변경 spring-security-core (org.springframework.security.core, org.springframework.security.access, etc.) spring-security-web (org.springframework.security.web) spring-security-config (org.springframework.security.config) API 변경 SpringSecurityException 삭제 ConfigAttributeDefinition ⇒ Collection SavedRequest : class ⇒ interface (DefaultSavedRequest 대체) 기타 다중 http elements 지원 stateless 인증 지원 DebugFilter 추가 (debugging용) hasPermission 표현식 지원 (authorize JSP tag) 등등 실행환경 부분 업그레이드 절차 1.</description></item><item><title>Session 방식 접근제어 권한설정</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/session-based-access-control-permission-settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/session-based-access-control-permission-settings/</guid><description>Session 방식 접근제어 권한설정 개요 표준프레임워크 3.9부터 Session 방식으로 접근제어 권한관리를 설정 할 수 있는 방법을 제공한다. 내부적으로 필요한 설정을 가지고 있고, XML Schema를 통해 필요한 설정만을 추가할 수 있도록 제공한다. 이 기능을 사용하기 위해서는 globals.properties 파일에서 Globals.Auth = session 로 설정한다.
환경설정 pom.xml (dependency추가) Session 방식의 접근제어 권한관리를 사용하기 위해서는 표준프레임워크 실행환경 구성요소중 org.egovframe.rte.fdl.access 라이브러리가 설치되어야 한다.
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.egovframe.rte&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;org.egovframe.rte.fdl.access&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${org.egovframe.rte.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; XML namespace 및 schema 설정 접근제어를 설정하기 위해서는 다음과 같은 xml 선언이 필요하다.</description></item><item><title>Scheduling 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/scheduling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/scheduling/</guid><description>Scheduling 서비스 개요 Scheduling 서비스는 어플리케이션 서버 내에서 주기적으로 발생하거나 반복적으로 발생하는 작업을 지원하는 기능으로서 유닉스의 크론(Cron) 명령어와 유사한 기능을 제공한다.
실행환경 Scheduling 서비스는 오픈소스 소프트웨어로 Quartz 스케쥴러를 사용한다. 본 장에서는 Quartz 스케쥴러의 기본 개념을 살펴본 후, IoC 서비스를 제공하는 Spring과 Quartz 스케쥴러를 통합하여 사용하는 방법을 살펴본다.
설명 Quartz 스케쥴러 Quartz 스케쥴러 실행과 관계된 주요 요소는 Scheduler, Job, JobDetail, Trigger 가 있다.
Scheduler 는 Quartz 실행 환경을 관리하는 핵심 개체이다. Job 은 사용자가 수행할 작업을 정의하는 인터페이스로서 Trigger 개체를 이용하여 스케쥴할 수 있다.</description></item><item><title>Logging</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/</guid><description>Logging 서비스 개요 전자정부 표준프레임워크 3.0부터는 다양한 Logging Framework와 연계할 수 있도록 SLF4J를 도입하였고,
Logging 구현체는 Log4j 2를 이용하여 Logging을 수행한다.
Logging 서비스는 시스템의 개발이나 운용시 발생할 수 있는 사항에 대해서,
시스템의 외부 저장소에 기록하여 시스템의 상황을 쉽게 파악할 수 있도록 도와준다.
뿐만 아니라 테스팅 코드와 운영 코드를 동일하게 가져가면서 로깅을 선언적으로 관리할 수 있다.
과도한 Logging은 운영시 성능 오버헤드를 발생시킬 수 있으므로, 최소화할 수 있는 메커니즘이 필요하다.
많은 개발자가 Log을 출력하기 위해 일반적으로 사용하는 방식은 System.</description></item><item><title>SLF4J</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging-slf4j/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging-slf4j/</guid><description>SLF4J Getting Started SLF4J(Simple Logging Facade For Java)는 특정 Logging 서비스 구현체에 종속되지 않도록 추상화 계층을 제공하며,
Jakarta Commons Logging(JCL), Log4j, Logback 등과 함께 사용할 수 있다.
다음은 SLF4J 샘플 예제이다.
import org.slf4j.Logger; import org.slf4j.LoggerFactory; public class Slf4JLoggerTest { // SLF4J를 이용한 Logger 오브젝트 생성 private static final Logger LOGGER = LoggerFactory.getLogger(Slf4JLoggerTest.class); // Parameterized logging - String 타입 String message = &amp;#34;Hello, eGovFrame 3.0&amp;#34;; String message2 = &amp;#34;Welcome to eGovFrame 3.</description></item><item><title>Log4j2</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging-log4j2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging-log4j2/</guid><description>설명 Log4j 2 변경사항 Java 6 이상 필요 XML 환경설정 단순화 (Log4j 1.x 와 호환되지 않음) Property 파일을 통한 환경설정을 지원하지 않음 JSON을 통한 환경설정 지원 파라미터 방식으로 Log Message 출력 환경설정 변경시 서버 재기동 없이 자동 재호출 필터링 기능 향상 NoSQLAppender 등의 다양한 Appender 제공 Log4j 2 추가기능 1. Substituting Parameters 로그 메시지를 구성하는 방법으로, 기존 문자열 결합 방식과 달리 {} 안에 파라미터를 대입하여 로그 메시지를 생성하는 방법이다.
아래 코드는 출력할 로그 메시지를 완성하기 전에 Log Level을 체크하고, isDebugEnabled인 경우에만 메서드를 수행한다.</description></item><item><title>Log4j 2 환경설정 (코드 내에서 직접 설정 시)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging-log4j2-configuration_code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging-log4j2-configuration_code/</guid><description>Log4j 2 환경설정 (코드 내에서 직접 설정 시) 개요 Log4j 2 환경 설정(Appender, Layout, Log Level 등)을 코드 내에서 직접 제어할 수 있다.
아래는 별도의 외부 설정파일 없이도 로깅할 수 있는 방법을 설명한다.
설명 사용 방법 별도의 Log4j 2 설정파일 없이도 코드 내에서 Logger 객체를 획득하여 로깅이 가능하다.
LogManager.getLogger() 메서드를 통해 Logger 객체를 생성하며, Log4j 2는 디폴트로 설정된 Logger 객체를 반환한다.
디폴트 Logger 객체의 기본적인 디폴트 설정은 다음과 같다.
Log Level : ERROR Appender : ConsoleAppender Layout : PatternLayout pattern : %d{HH:mm:ss.</description></item><item><title>Log4j 2 환경설정 (설정 파일 사용 시)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging-log4j2-configuration_file/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging-log4j2-configuration_file/</guid><description>Log4j 2 환경설정 (설정 파일 사용 시) 개요 Log4j 2는 기존 Properties 파일 형식의 환경 설정을 지원하지 않으며,
XML (log4j2.xml) 혹은 JSON (log4j2.json or log4j2.jsn) 파일 형식의 환경 설정만 가능하다.
아래는 XML 파일을 이용한 환경 설정에 대해서만 다루며, JOSN 방식은 Log4j 2 매뉴얼을 참고하도록 한다.
설명 Log4j 2 XML Configuration XML 파일 위치 XML 파일(log4j2.xml)을 작성하고, WEB-INF/classes 하위에 포함될 수 있도록 위치시킨다.
Log4j 2가 초기화될 때 자동으로 위 설정 파일을 읽어들인다.</description></item><item><title>Id Generation 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/id-generation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/id-generation/</guid><description>Id Generation 서비스 개요 시스템을 개발할 때 필요한 유일한 ID를 생성하기 위해 사용하도록 서비스한다.
주요 개념 Universally Unique Identifier(UUID) UUID는 OSF(Open Software Foundation)에 의해 제정된 고유식별자(Identifier)에 대한 표준이다. UUID는 16-byte (128-bit)의 숫자로 구성된다.
UUID를 표현하는 방식에 대한 특별한 규정은 없으나, 일반적으로 아래와 같이 16진법으로 8-4-4-4-12 형식으로 표현한다.
550e8400-e29b-41d4-a716-446655440000
UUID 표준은 아래 문서에 기술되어 있다.
ISO/IEC 11578:1996 &amp;ldquo;Information technology &amp;ndash; Open Systems Interconnection &amp;ndash; Remote Procedure Call (RPC)&amp;rdquo; ITU-T Rec. X.667 | ISO/IEC 9834-8:2005 IETF Proposed Standard RFC 4122 UUID는 다음 5개의 Version이 존재한다.</description></item><item><title>Property</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property/</guid><description>Property Property는 시스템의 설치 환경에 관련된 정보나, 잦은 정보의 변경이 요구되는 경우 외부에서 그 정보를 관리하게 함으로써 시스템의 유연성을 높이기 위해서 제공하는 것으로 Property Service와 Property Source를 제공하고 있다. Property Service와 Property Source는 각각의 특성과 용도에 따라 시스템의 설정 정보를 관리한다. 이와 같은 기능을 통해 전자정부프레임워크는 시스템의 유연성과 확장성을 높여준다.
Property Service 특징: 코드 상에서 key를 통해 해당 값을 가져오는 방식으로, 외부 파일이 변경될 경우 이를 반영하여 값을 갱신할 수 있다.</description></item><item><title>Property Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property-service/</guid><description>Property Service 개요 Property Service 는 시스템의 설치 환경에 관련된 정보나, 잦은 정보의 변경이 요구되는 경우 외부에서 그 정보를 관리하게 함으로써 시스템의 유연성을 높이기 위해서 제공하는 것으로 Spring Bean 설정 파일에 관리하고자 하는 정보를 입력(Bean 설정 파일 사용) 하거나 외부 파일에 정보 입력 후에 Bean 설정 파일에서 그 파일 위치를 입력하여 이용(외부 설정 파일 사용)할 수 있다.
Bean 설정 파일 사용 간단하게 설정하고자 할 때 사용할 수 있는 방법으로 별도의 외부파일을 두지 않고 Spring Bean 설정 파일을 이용할 수 있다.</description></item><item><title>Property Source</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property-source/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property-source/</guid><description>Property Source 개요 Property Source는 property place-holder를 이용하여 xml의 bean설정에서 key값을 통해 가져올 수 있으며 코드상에서는 Environment를 이용하여 해당값을 가져올 수 있다.
기본적으로 properties파일을 통한 기능을 제공하고 있으며 추가적인 설정을 통해 DB의 테이블에서 property값을 가져오는 PropertySource를 제공하고 있다. 또한 사용자가 추가로 PropertySource를 정의할 수 있다.
Property-placeholder와 PropertySource Property-placeholder bean을 정의할 때 ${…}의 내용을 property placeholder를 이용하여 대체할 수 있었다. 해당 코드는 다음과 같다.
&amp;lt;context:property-placeholder location=&amp;#34;com/bank/config/datasource.properties&amp;#34;/&amp;gt; &amp;lt;bean id=&amp;#34;dataSource&amp;#34; class=&amp;#34;org.apache.commons.dbcp.BasicDataSource&amp;#34; destroy-method=&amp;#34;close&amp;#34;&amp;gt; &amp;lt;property name=&amp;#34;driverClass&amp;#34; value=&amp;#34;${database.</description></item><item><title>Environment</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/environment/</guid><description>Environment 개요 표준프레임워크 3.0부터는 (Spring 3.1부터) Environment interface를 제공한다.
Environment는 다음 기능의 접근을 제공한다.
Profile Property Environment는 ApplicationContext를 통해서 접근이 가능하며 다음과 같이 가져올 수 있다.
ApplicationContext ctx = new GenericApplicationContext(); Environment env = ctx.getEnvironment(); Profile 접근 Profile에 대한 자세한 설명 Profile은 등록할 bean들이 정의되어있는 논리적인 그룹을 말한다. Bean은 XML또는 Annotation을 통해 정의된 Profile값 중 활성화된 Profile로 할당된다. 이 때 현재 사용하는 Profile을 활성화하는 것이 바로 Environment의 역할이다. 또한 Profile은 default값으로 설정이 되어있어야 한다.</description></item><item><title>Cache Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache/</guid><description>Cache Service 개요 전자정부 프레임워크에서 Cache Service는 EhCache를 선정하여 가이드한다.
Spring 버전 3.1 이전에서는 EhCache에서 제공하는 CacheManager를 직접 사용한다. 3.1 이후 버전에서는 CacheManager Abstraction을 제공함으로써 Cache를 유연하게 사용할 수 있게 되었다. 아래에서는 EhCache의 설명과 Spring 3.1 이전의 EhCache 사용법에 대하여 알아본다.
설명 EhCache를 이용하기 위한 기본 설정 및 기본 사용법에 대해서 설명한다.
Bootstrap Source Cache를 사용하기 위해서 Cache Manager를 생성하는 방법을 샘플을 통해서 설명한다.
//클래스 패스를 이용하여 설정파일 읽어서 Cache Manager 생성하기.</description></item><item><title>EhCache</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache-ehcache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache-ehcache/</guid><description>EhCache 개요 전자정부 프레임워크에서 Cache Service는 EhCache를 선정하여 가이드한다.
Spring 버전 3.1 이전에서는 EhCache에서 제공하는 CacheManager를 직접 사용한다. 3.1 이후 버전에서는 CacheManager Abstraction을 제공함으로써 Cache를 유연하게 사용할 수 있게 되었다. 아래에서는 EhCache의 설명과 Spring 3.1이전의 EhCache 사용법에 대하여 알아본다.
설명 EhCache를 이용하기 위한 기본 설정 및 기본 사용법에 대해서 설명한다.
Bootstrap Source Cache를 사용하기 위해서 Cache Manager를 생성하는 방법을 샘플을 통해서 설명한다.
//클래스 패스를 이용하여 설정파일 읽어서 Cache Manager 생성하기. URL url = getClass().</description></item><item><title>Cache Abstraction</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache-abstraction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache-abstraction/</guid><description>Cache Abstraction 개요 Spring 3.1부터 Cache Service는 Cache 추상화(CacheManager Interface)와 Cache 추상화를 Java메소드에 제공할 수 있는 @Cacheable을 제공한다. Cache 추상화는 Spring의 트랜잭션기능과 유사하게 코드의 변화를 최소화하면서 Proxy를 통해 동작하게끔 한다. Cache 구현체가 아닌 Cache추상화만을 제공하며 실제 Cache Data저장소는 EhCache와 ConcurrentMap을 지원한다.
Cache Configuration Cache설정을 통하여 어떠한 Cache Data저장소를 쓸 것인지 결정할 수 있다. (EhCache/ConcurrentMap) Cache Manager CacheManager를 통해 설정과 상관없이 동일한 코드로 Cache에 접근할 수 있다. Cache Annotation 메소드의 Cache Annotation을 통해 쉽게 Cache데이터를 저장/삭제할 수 있다.</description></item><item><title>Marshalling/Unmarshallig 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/marshalling-unmarshalling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/marshalling-unmarshalling/</guid><description>Marshalling/Unmarshallig 서비스 개요 Object/XML Mapping, 줄여서 O/X mapping은 Object를 XML문서로 변환하는데 이를 XML Mashalling 또는 Marshalling 이다. 반대로 XML문서를 Object로 변환하는 것은 Unmarshalling 이다.
설명 Spring Web Service OXM Client &amp;lt;------ XML ------&amp;gt; Server WS는 Server와 Client 두 대상 간의 데이터를 주고받는 기술 중 하나이다. 정보를 요청하는쪽이 Client이다.(Client는 Server가 될 수도 있고 일반 사용자가 될 수도 있다.) 요청한 정보를 받아서 알맞게 처리 후 결과값을 리턴하는 쪽이 Server이다.
Client(OXM) &amp;lt;------ XML(WSDL) ------&amp;gt; (OXM)Server WS는 XML(WSDL)형식으로 데이터를 주고받는다.</description></item><item><title>XML Manipulation Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/xml-manipulation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/xml-manipulation/</guid><description>XML Manipulation Service 개요 XML Manipulation 서비스는 XML을 생성하고, 읽고, 쓰는 등과 같은 기능과 조작 기능을 제공하는 서비스이다. XML(Extensible Markup Language)은 W3C에서 다른 특수 목적의 마크업 언어를 만드는 용도에서 권장되는 다목적 마크업 언어이다.XML은 SGML의 단순화된 부분집합이지만, 수많은 종류의 데이터를 기술하는데 적용할 수 있다.XML은 주로 다른 시스템, 특히 인터넷에 연결된 시스템끼리 데이터를 쉽게 주고받을 수 있게 하여 HTML의 한계를 극복할 목적으로 만들어졌다. XML은 W3C에서 다른 특수 목적의 마크업 언어를 만드는 용도에서 권장되는 다목적 마크업 언어이다.</description></item><item><title>Object Pooling Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/object-pooling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/object-pooling/</guid><description>Object Pooling Service 개요 객체에 대한 Pooling 기능을 제공하는 서비스이다. 객체의 생성 비용이 크고,생성 횟수가 많으면, 평균적으로 사용되는 객체의 수가 적은 경우,성능을 향상시키기 위해서 사용한다. Object Pool은 소프트웨어 디자인 패턴으로서, 객체를 필요에 따라 생성하고 파괴하는 방식이 아닌,적절한 개수의 객체를 미리 사용 가능한 상태로 생성하여 이를 이용하는 방식이다.Client는 Pool에 객체를 요청하여 객체를 얻은 후, 업무를 수행한다. 얻어온 객체를 이용하여 업무 수행을 끝마친 후, 객체를 파괴하는 것이 아니라 Pool에게 돌려주어 다른 Client가 사용할 수 있도록 한다.</description></item><item><title/><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto/</guid><description>Encryption/Decryption과 crypto 간소화를 crypto라는 목록에 넣기 위해 생성. 좌측 네비게이션 바에는 보이지만, 클릭과 url접근은 안 됨.</description></item><item><title>Encryption/Decryption Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto-encryption-decryption/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto-encryption-decryption/</guid><description>Encryption/Decryption Service 개요 암호화는 시큐리티에 대처하는 가장 강력한 수단이다. 이때 본래의 메시지를 평문(Plan Text,Clear Text)이라고 부르고, 암호화된 메시지는 암호문(Cipher Text,Cryptogram)이라고 부른다. 암호화(Encryption,Ciphering)는 메시지의 내용이 불명확하도록 평문을 재구성하여 암호문을 만드는 것인데, 이 때 사용되는 메시지의 재구성 방법을 암호화 알고리즘(Encryption Algorithm)이라고 부른다. 암호화 알고리즘에서는 암호화의 비밀성을 높이기 위해 키(Key)를 사용하기도 한다. 복호화(Decyption,decipheing)란 암호화의 역과정으로, 불명확한 메시지로부터 본래의 메시지를 환원하는 과정이다. 일반적으로 복호화에도 암호화에 사용된 것과 동일한 알고리즘이 사용된다. 그리고 암호화 기법을 적용하는 암호화 및 복호화 과정으로 구성된 시스템을 암호계(Crypto System)라고 부른다.</description></item><item><title>Crypto 간소화 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto-simplification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto-simplification/</guid><description>Crypto 간소화 서비스 개요 표준프레임워크 3.8 부터 ARIA 블록암호 알고리즘 기반 암/복호화 설정을 간소화 할 수 있는 방법을 제공한다. 내부적으로 필요한 설정을 가지고 있고, XML Schema를 통해 필요한 설정만을 추가할 수 있도록 제공한다. 또한 globals.properties 설정 파일의 중요 정보 Url, UserName, Password 항목을 암/복호화 처리 할 수 있도록 제공한다. 그외에 정보는 properties 파일에 암호화 데이터 설정후 #{egovEnvCryptoService.decrypt(&amp;rsquo;…&amp;rsquo;)} 복호화 기능을 제공한다.
XML namespace 및 schema 설정 설정 간소화 기능을 사용하기 위해서는 다음과 같은 xml 선언이 필요하다.</description></item><item><title>FTP Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/ftp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/ftp/</guid><description>FTP Service 개요 전자정부 표준프레임워크는 FTP 서비스제공을 위해 Apache Commons Net™ [단순 클라이언트측의 기본적인 Internet Protocol의 구현의 FTP기능을 편리하게 제공]을 오픈 소스로 채택하였다.
Apache Commons Net™은 Network utility collection 이다. Apache Commons Net™은 단순 클라이언트측의 기본적인 Internet Protocol을 구현함으로서 기본적인 프로토콜 access가 목적이기 때문에 부분적으로 object-orient 규칙에 위배가 되는 사항이 있다는 것을 참고적으로 알고 있어야 한다.
FTP정의 FTP란 FTP (File Transfer Protocol) 파일 전송 프로토콜로 FTP[에프 티 피]는 인터넷상의 컴퓨터들 간에 파일을 교환하기 위한 표준 프로토콜로서 가장 간단한 방법이기도 하다.</description></item><item><title>Mail 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/mail/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/mail/</guid><description>Mail 서비스 개요 전자정부 프레임워크에서는 이메일 발송을 쉽게 처리하기 위해 Jakarta Commons Email API를 사용하고 있는데 Commons Email은 내부적으로 Java Mail API와 JavaBeans Activation API 를 제공하여 오픈 소스로 채택하였다
Apache Commons-Email은 Java Mail API를 근간으로 좀더 심플하게 메일을 보내는 방안을 제시한다.
Commons Email API는 메일 발송을 처리해주는 SimpleEmail, HtmlEmail과 같은 클래스를 제공하고 있으며, 이들 클래스를 사용하여 일반 텍스트메일, HTML 메일, 첨부 메일 등을 매우 간단(simple)하게 발송할 수 있다.
Email Sample Code는 다음과 같다.</description></item><item><title>Compress/Decompress Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/compress-decompress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/compress-decompress/</guid><description>Compress/Decompress Service 개요 전자정부 프레임워크에서는 다양한 압축방식을 개발자들에게 편리한 API를 제공하는 Jakarta Commons의 Compress를 오픈소스로 채택하였다.
Jakarta Commons의 Compress에서 지원하는 tar, zip and bzip2 파일등을 지원한다.
현재 Commons Compress API 에서는 아래의 Packages를 제공하고 있다.
org.apache.commons.compress.archivers org.apache.commons.compress.archivers.ar org.apache.commons.compress.archivers.cpio org.apache.commons.compress.archivers.jar org.apache.commons.compress.archivers.tar org.apache.commons.compress.archivers.zip org.apache.commons.compress.changes org.apache.commons.compress.compressors org.apache.commons.compress.compressors.bzip2 org.apache.commons.compress.compressors.gzip org.apache.commons.compress.utils 보다 자세한 사항은 Commons Compress API를 참고하기 바란다.
설명 압축이란 파일에 저장되어 있는 정보를 압축하여 보다 적은 기억 공간에 동일한 정보를 저장하는 기술이다.
일반적으로 정보에 포함되어 있는 중복된 내용을 삭제하거나 보다 적은 길이의 코드를 사용하여 정보를 표현하는 방법을 사용하여 저장에 필요한 공간의 크기를 줄인다.</description></item><item><title>압축 파일의 종류</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/compression-file-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/compression-file-types/</guid><description>압축 파일의 종류 압축 파일 설명 .alz 이스트소프트에서 개발한 압축 형식입니다. 분할 압축을 할 경우 확장자는 (ALZip 으로 생성) alz, a00, a01…형식으로 생성됨. .ace ACE, WinAce에서 이용하는 압축 형식입니다. 분할 압축을 할 경우 확장자는 ace, c00, c01, … 형식으로 생성됨. .arc DOS용 프로그램 pkarc.com, pkxarc.com에서 사용되는 압축 형식. .arj DOS용 프로그램 arj.exe, 윈도우용 프로그램 WinArj에서 이용하는 압축 형식. 분할 압축을 할 경우 확장자는 arj, a01, a02,… 형식으로 생기게 됨. .b64 인터넷에서 문서를 주고 받을 때 사용하는 형식으로 BASE64MIME 형식으로 인코딩된 파일임.</description></item><item><title>File Upload/Download 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/</guid><description>File Upload/Download 서비스 개요 전자정부 프레임워크에서는 다양한 파일 업로드 API를 제공하는 Commons FileUpload를 오픈 소스로 채택하였다.
Spring 에서는 Commons FileUpload를 사용하여 싱글 파일 업로드에 대하여 가이드 하고 있다. 현재 Spring에서 싱글 파일 업로드에 대해서 매우 좋은 api를 제공해주고 있으나 멀티플 파일 업로드시에 동일한 이름의 여러 개의 파일을 올리려고 할 때 오류가 발생한다.
오류 사항에 대해서는 multipart multi file upload 지원 문제를 참고.
본 매뉴얼에서는 싱글 파일 업로드 보다 멀티플 파일 업로드를 가능하도록 그 대안에 대하여 설명하고자 한다.</description></item><item><title>File Upload Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-service/</guid><description>File Upload Service 개요 업로드는 한 컴퓨터 시스템에서 다른 시스템으로 파일을 전송하는 것을 말하는데, 대개 작은 컴퓨터에서 큰 컴퓨터로 옮길 때 이런 용어를 사용한다. 네트웍 사용자의 관점에서 보면, 파일을 업로드하는 것은 그 파일을 받을 수 있도록 설정된 다른 컴퓨터에 파일을 보내는 것이다. 전자게시판 상의 다른 사용자와 이미지 파일을 공유하기를 원하는 사람들은 그 전자게시판에 파일을 업로드하면 된다.
그러면 반대편 입장에 있는 사람은 그 파일을 다운로드하게 되는데, 여기서 다운로드는 대개 큰 컴퓨터에서 작은 컴퓨터로 파일을 전송하는 것을 의미한다.</description></item><item><title>Spring mvc Multipart Multi file upload 지원 문제</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-service-multi-file-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-service-multi-file-support/</guid><description>Spring mvc Multipart Multi file upload 지원 문제 개요 Spring mvc 2.5.5 Multipart Multi file upload 지원부분에서 동일한 이름의 여러개의 파일을 올리려고 할 때 에러가 발생한다. 본 가이드에서는 이러한 문제가 발생하여 아직 Spring쪽에서 답변이 없는 상황이다. 이부분에 대하여 개발시 참고 하기바란다.
설명 업로드 갯수를 고려하지 않고 동적으로 upload 폼을 추가할 경우 오류 메시지가 나온다.
org.springframework.web.multipart.MultipartException: Multiple files for field name [files] found - not supported by MultipartResolver org.springframework.web.multipart.commons.CommonsFileUploadSupport.parseFileItems(CommonsFileUploadSupport.java:254) org.springframework.web.multipart.commons.CommonsMultipartResolver.parseRequest(CommonsMultipartResolver.java:166) org.springframework.web.multipart.commons.CommonsMultipartResolver.resolveMultipart(CommonsMultipartResolver.java:149) org.</description></item><item><title>File Download Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-download-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-download-service/</guid><description>File Download Service 개요 여기서 다운로드는 대개 큰 컴퓨터에서 작은 컴퓨터로 파일을 전송하는 것을 의미한다. 인터넷 사용자의 입장에서의 다운로드란 다른 컴퓨터에서 파일을 받는 것이다.
설명 EgovFrameWork에서는 파일 다운로드를 하기위한 DownloadController 클래스를 간단하게 구현하여 보았다.
DownloadController 클래스 예시
@Controller(&amp;#34;downloadController&amp;#34;) public class DownloadController { @Resource(name = &amp;#34;fileUploadProperties&amp;#34;) Properties fileUploadProperties; @RequestMapping(value = &amp;#34;/download/downloadFile.do&amp;#34;) public void downloadFile( @RequestParam(value = &amp;#34;requestedFile&amp;#34;) String requestedFile, HttpServletResponse response) throws Exception { String uploadPath = fileUploadProperties .getProperty(&amp;#34;file.upload.path&amp;#34;); File uFile = new File(uploadPath, requestedFile); int fSize = (int) uFile.</description></item><item><title>Tomcat 한글 설정하기</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-download-service-tomcat-encoding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-download-service-tomcat-encoding/</guid><description>Tomcat 한글 설정하기 개요 Tomcat에서 문자셋 인코딩을 하여 한글이 깨지는 문제를 해결할 수 있다.
설명 일반적으로 웹 어플리케이션이 GET과 POST 방식으로 파라미터를 넘겨 받을 때 request.setCharacterEncoding()을 통한 문자셋 인코딩이 필요하다.
Tomcat 4.x 단순히 JSP 혹은 서블릿의 최 상단에 request.setCharacterEncoding(&amp;#34;euc-kr&amp;#34;);을 하면 된다. GET과 POST 방식에 상관없이 인코딩을 해준다. Tomcat 5.x POST 방식은 request.setCharacterEncoding(&amp;#34;euc-kr&amp;#34;);로 계속 하면된다. 하지만 GET 방식은 server.xml의 &amp;lt;Connector&amp;gt; 설정 부분을 바꿔줘야만 한다. &amp;lt;Connector port=&amp;#34;8080&amp;#34; maxThreads=&amp;#34;150&amp;#34; minSpareThreads=&amp;#34;25&amp;#34; maxSpareThreads=&amp;#34;75&amp;#34; enableLookups=&amp;#34;false&amp;#34; redirectPort=&amp;#34;8443&amp;#34; acceptCount=&amp;#34;100&amp;#34; debug=&amp;#34;0&amp;#34; connectionTimeout=&amp;#34;20000&amp;#34; disableUploadTimeout=&amp;#34;true&amp;#34; URIEncoding=&amp;#34;euc-kr&amp;#34;/&amp;gt; 위에서 URIEncoding=&amp;#34;euc-kr&amp;#34; 부분이다.</description></item><item><title>File Handling</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-handling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-handling/</guid><description>File Handling 개요 File Handling 서비스를 적용해서 Excel 다운로드 하기 위한 Excel 정보를 설정한다.
Excel 서비스에 적용되어 있다.
설명 Source FileObject writtenFile = manager.resolveFile(baseDir, this.propertyPath); FileContent writtenContents = writtenFile.getContent(); InputStream is = writtenContents.getInputStream(); BufferedReader reader = new BufferedReader(new InputStreamReader(is)); StringBuffer sb = new StringBuffer(); for (String line = &amp;#34;&amp;#34;; (line = reader.readLine()) != null; sb.append(line)); is.close();</description></item><item><title>Excel Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/excel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/excel/</guid><description>Excel Service 개요 Excel 파일 포맷을 다룰 수 있는 자바 라이브러리를 제공하여, 사용자들이 데이터를 Excel 파일 포맷으로 다운받거나, 대량의 Excel 데이터를 시스템에 올릴 수 있도록 지원하기 위한 서비스이다. Excel 서비스는 Apache POI 오픈소스를 사용하여 구현하였으며 주요 Excel 접근 기능 외에 Excel 다운로드, Excel 파일 업로드 등의 기능이 있다. Excel 서비스 3.0 버전에서는 기존 버전을 refactoring 하였다. 기존의 메소드(xls, xlsx)를 지원하는 메소드들의 이름을 하나로 하여 Parameter 방식으로 구분자를 추가하였다. 또한, 기존의 iBatis 뿐만 아니라 MyBatis도 지원하는 클래스를 추가하였다.</description></item><item><title>String Util Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/string-util/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/string-util/</guid><description>String Util Service 개요 시스템을 개발할 때 필요한 문자열 데이터를 다루기 위해 다양한 기능을 사용하도록 서비스한다. 문자열을 다루는 EgovStringUtil Service와 숫자를 다루는 EgovNumericUtil Service, 날짜형식을 다루는 EgovDateUtil Service 그리고 객체 생성 등의 EgovObjectUtil Service 4가지가 있다.
설명 1. EgovStringUtil Service Pattern matching String이 특정 Pattern(정규표현식)에 부합하는지 검사한다.
Sample Source @Test public void testPatternMatch() throws Exception { // pattern match 성공 String str = &amp;#34;abc-def&amp;#34;; pattern = &amp;#34;*-*&amp;#34;; assertTrue(EgovStringUtil.isPatternMatching(str, pattern)); // pattern match 실패 str = &amp;#34;abc&amp;#34;; assertTrue(!</description></item></channel></rss>