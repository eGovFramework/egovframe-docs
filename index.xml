<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>전자정부 표준프레임워크 가이드 on 표준프레임워크 개발가이드</title><link>https://eGovFramework.github.io/egovframe-docs/</link><description>Recent content in 전자정부 표준프레임워크 가이드 on 표준프레임워크 개발가이드</description><generator>Hugo</generator><language>kr</language><atom:link href="https://eGovFramework.github.io/egovframe-docs/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://eGovFramework.github.io/egovframe-docs/how-to-write-frontmatter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/how-to-write-frontmatter/</guid><description>&lt;h1 id="markdown-frontmatter-작성방법">Markdown Frontmatter 작성방법&lt;/h1>
&lt;h2 id="프론트매터frontmatter란">프론트매터(Frontmatter)란?&lt;/h2>
&lt;p>프론트매터는 문서 상단에 아래처럼 작성된 코드 부분을 말한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">title&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">linkTitle&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">description&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">url&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">menu&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">depth&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">weight&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">parent&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">identifier&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">---&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>프론트매터는 문서의 제목, 속성 등의 메타데이터를 지정하기 위해 작성되는 코드를 말한다.
&lt;code>---&lt;/code> 사이에 작성되며, Yaml 형식이 사용된다.&lt;/p>
&lt;h2 id="프론트매터frontmatter-작성방법">프론트매터(Frontmatter) 작성방법&lt;/h2>
&lt;h3 id="형식">형식&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">title&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;wiki의 제목&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">linkTitle&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;메뉴 등 링크에서 보여지는 이름&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">description&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;본문에 대한 요약&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">url&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://egovframework.github.io/egovframe-docs 이후부터 시작되는 url 경로&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">menu&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">depth&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;wiki의 제목&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">weight&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;사이드 네비게이션에 동일한 depth(=동일한 parent를 가진 자식)에서 정렬하는 순번&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">parent&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;부모 파일의 menu에 정의된 identifier 값&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">identifier&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;현재 파일의 id(자식 파일이 있을 때 필요)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>&lt;strong>title&lt;/strong>&lt;/p></description></item><item><title/><link>https://eGovFramework.github.io/egovframe-docs/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/readme/</guid><description>&lt;h1 id="전자정부-표준프레임워크-가이드">전자정부 표준프레임워크 가이드&lt;/h1>
&lt;ul>
&lt;li>본 GitHub 저장소 생성 목적은 표준프레임워크 포털에서 제공하고 있는 DokuWiki 가이드 문서를 간단하고 직관적인 Markdown 형식의 문서로 변환하여 기여받는 것입니다.&lt;/li>
&lt;li>이 프로젝트의 목적은 쉽게 접근 가능한 Markdown 형식의 문서를 통해 사용자와 개발자들이 표준프레임워크를 더욱 편리하게 활용할 수 있도록 돕는 것입니다.&lt;/li>
&lt;li>이 프로젝트의 특징은 기여자가 문서 및 이미지를 기여하면 그 즉시 자동으로 배포되어 웹사이트를 통해 결과를 확인할 수 있는 것입니다.&lt;/li>
&lt;li>2025년 표준프레임워크 가이드 컨트리뷰션 범위는 개발환경, 실행환경, 실행환경 예제, 공통컴포넌트입니다(2024년도에는 실행환경 문서로 한정).&lt;/li>
&lt;/ul>
&lt;h2 id="가이드-문서-보기">가이드 문서 보기&lt;/h2>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://egovframework.github.io/egovframe-docs/">https://egovframework.github.io/egovframe-docs/&lt;/a>


&lt;/li>
&lt;/ul>
&lt;h2 id="프론트매터frontmatter-작성-방법">프론트매터(Frontmatter) 작성 방법&lt;/h2>
&lt;p>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/how-to-write-frontmatter/">프론트매터 작성 방법&lt;/a>


을 참고해 주시기 바랍니다.&lt;/p></description></item><item><title>Authorization</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/server-security-authorization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/server-security-authorization/</guid><description>&lt;h1 id="authorization">Authorization&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>웹 사이트에 존재하는 모든 사용자들은 사이트 정책에 따라 그 부류 별로 컨텐츠에 대한 접근이 제한 되는데 이것을 권한 부여(authorization)라 한다.
즉, 권한은 특정 사용자가 웹 사이트에서 제공하는 컨텐츠(정보 또는 기능)에 접근 가능한지를 판단하는 과정을 의미한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Authorization은 &lt;Acronym title="Extensible Markup Language">XML&lt;/Acronym> 또는 DB에서 권한을 관리하며 계층적 권한을 지원한다.&lt;/p>
&lt;p>Server Security에서는 Filter Security Interceptor에 의해 처리되며, DB로부터 권한 정보를 처리하기 위해 다음과 같이 설정된다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;http&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">&amp;lt;!-- for authorization --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;custom-filter&lt;/span> &lt;span style="color:#a6e22e">before=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FILTER_SECURITY_INTERCEPTOR&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;filterSecurityInterceptor&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/http&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans:bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;filterSecurityInterceptor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.security.web.access.intercept.FilterSecurityInterceptor&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;beans:property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;authenticationManager&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.security.authenticationManager&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;beans:property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;accessDecisionManager&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.security.access.vote.AffirmativeBased#0&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;beans:property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;securityMetadataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;databaseSecurityMetadataSource&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/beans:bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans:bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;databaseSecurityMetadataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.fdl.security.intercept.EgovReloadableFilterInvocationSecurityMetadataSource&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;beans:constructor-arg&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;requestMap&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;beans:property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;securedObjectService&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;securedObjectService&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/beans:bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- url --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans:bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;requestMap&amp;#34;&lt;/span> 	&lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.fdl.security.intercept.UrlResourcesMapFactoryBean&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">init-method=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;init&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;beans:property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;securedObjectService&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;securedObjectService&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/beans:bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans:bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;securedObjectService&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.fdl.security.securedobject.impl.SecuredObjectServiceImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;beans:property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;securedObjectDAO&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;securedObjectDAO&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;beans:property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;requestMatcherType&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;regex&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>	&lt;span style="color:#75715e">&amp;lt;!-- default : ant --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/beans:bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans:bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;securedObjectDAO&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.fdl.security.securedobject.impl.SecuredObjectDAO&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;beans:property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/beans:bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>authenticationManager : &amp;lt;authentication-manager&amp;gt; 설정의 의해 자동으로 생성되는 bean ID를 지정(“org.springframework.security.authenticationManager”)&lt;/li>
&lt;li>accessDecisionManager : 권한 부여 여부를 결정하는 Access Decision Manager로서 자동으로 생성되기 때문에 해당 bean ID를 지정하면 됨(“org.springframework.security.access.vote.AffirmativeBased#0”)&lt;/li>
&lt;li>securityMetadataSource : 권한 설정 정보에 대한 처리 담당
참고로 자동으로 등록되는 AccessDecisionManager는 다음과 같은 설정을 갖는다.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans:bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;accessDecisionManager&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.security.access.vote.AffirmativeBased&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;beans:property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;allowIfAllAbstainDecisions&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;beans:property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;decisionVoters&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;beans:list&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;beans:bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.security.access.vote.RoleVoter&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;beans:property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rolePrefix&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ROLE_&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/beans:bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;beans:bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.security.access.vote.AuthenticatedVoter&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/beans:list&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/beans:property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/beans:bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>org.springframework.security.vote.AffirmativeBased : 단 한 개의 오브젝트라도 허락하면 허가하는 방식으로 처리(기본 처리)&lt;/li>
&lt;li>org.springframework.security.vote.UnanimousBased : 모든 오브젝트가 허락해야 허가하는 방식으로 처리&lt;/li>
&lt;li>decisionVoters : 허가 오브젝트에 대한 목록을 설정함&lt;/li>
&lt;/ul>
&lt;h3 id="자원-관리">자원 관리&lt;/h3>
&lt;h4 id="url">url&lt;/h4>
&lt;p>요청되는 웹 url을 점검하여 DB에 저장된 url과 비교하여 접근권한을 지정할 수 있다.&lt;/p></description></item><item><title>Job Variable</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-job/batch-core-job_variable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-job/batch-core-job_variable/</guid><description>&lt;h1 id="job-variable">Job Variable&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>변수 선언 후 Job Listeners를 통해서 모든 Job에서 사용자 정의 변수를 사용할 수 있도록 EgovJobVariableListener를 통해서 지원한다.&lt;br>
사용자가 변수를 정의하여 여러 job에서 해당 변수를 공유하여 사용 가능한 기능으로 이루어져있다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/images/job_variable_architecture6.png" alt="job_variable_architecture6" >
&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="job-variable-설정">Job Variable 설정&lt;/h3>
&lt;p>배치실행환경에서 제공하는 EgovJobVariableListener 사용하여 사용자 정의 변수를 설정한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovJobVariableListener&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.bat.support.EgovJobVariableListener&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pros&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;props&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;prop&lt;/span> &lt;span style="color:#a6e22e">key=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;JobVariableKey1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>JobVariableValue1&lt;span style="color:#f92672">&amp;lt;/prop&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;prop&lt;/span> &lt;span style="color:#a6e22e">key=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;JobVariableKey2&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>JobVariableValue2&lt;span style="color:#f92672">&amp;lt;/prop&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;prop&lt;/span> &lt;span style="color:#a6e22e">key=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;JobVariableKey3&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>JobVariableValue3&lt;span style="color:#f92672">&amp;lt;/prop&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/props&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="job-설정">job 설정&lt;/h3>
&lt;p>job 설정시 listener를 사용하여 공유변수 서비스를 설정한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delimitedToDelimitedJob-JobVariable&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parent=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;eGovBaseJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;listeners&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;listener&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovJobVariableListener&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/listeners&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;tasklet&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskletJob&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="job에서-tasklet-선언시-step에서-job-variable-사용">job에서 tasklet 선언시 Step에서 Job Variable 사용&lt;/h3>
&lt;p>setter 방식으로 공유변수 사용시 아래와 같이 응용하여 설정한다.&lt;/p></description></item><item><title>Map 객체를 통한 입력값 처리 방법</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-annotationcommandmapargumentresolver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-annotationcommandmapargumentresolver/</guid><description>&lt;h1 id="annotationcommandmapargumentresolver">AnnotationCommandmapArgumentResolver&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Controller에서 화면(JSP) 입력값을 받기 위해서 일반적으로 Command(Form Class) 객체를 사용하지만, Map 객체를 사용하는걸 선호할 수 있다.
전자정부프레임워크 버전 3.0이전에서는 CommandMapArgumentResolver를 통해 Map객체를 사용할 수 있었다. 그러나 3.0부터는 @CommandMap과 AnnotationCommandmapArgumentResolver를 통해 Map객체를 사용할 수 있다.
org.springframework.web.method.support.HandlerMethodArgumentResolver의 구현클래스인 AnnotationCommandMapArgumentResolver은 HTTP request 객체에 있는 파라미터이름과 값을 Map 객체에 담아 Controller에서 사용도록 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="handlermethodargumentresolver">HandlerMethodArgumentResolver&lt;/h3>
&lt;p>Sping MVC의 &lt;code>@Controller&lt;/code>의 메소드의 argument로 사용할 수 있는 유형(이에 관한 정보는 이곳을 참조하라.)은 기존의 계층형 Controller보다 다양해 졌지만,
필요에 따라 기본 유형외의 custom argument를 사용해야 할때가 있을 것이다.
Sping MVC는 Controller의 argument 유형을 customizing 할 수 있는 HandlerMethodArgumentResolver라는 interface를 제공한다.
기존 Spring web 3.1이전 버전에서는 WebArgumentResolver를 구현하여 AnnotationMethodHandlerAdapter에 등록하여 ArgumentResolver를 적용하였으나,
3.1이후부터는 HandlerMethodArgumentResolver를 구현하여 RequestMappingHandlerAdapter에 등록하여 ArgumentResolver를 적용해야 한다.&lt;/p></description></item><item><title>Cache Abstraction</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache/abstraction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache/abstraction/</guid><description>&lt;h1 id="cache-abstraction">Cache Abstraction&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring 3.1부터 Cache Service는 Cache 추상화(CacheManager Interface)와 Cache 추상화를 Java메소드에 제공할 수 있는 @Cacheable을 제공한다. Cache 추상화는 Spring의 트랜잭션기능과 유사하게 코드의 변화를 최소화하면서 Proxy를 통해 동작하게끔 한다. Cache 구현체가 아닌 Cache추상화만을 제공하며 실제 Cache Data저장소는 EhCache와 ConcurrentMap을 지원한다.&lt;/p>
&lt;ul>
&lt;li>Cache Configuration
&lt;ul>
&lt;li>Cache설정을 통하여 어떠한 Cache Data저장소를 쓸 것인지 결정할 수 있다. (EhCache/ConcurrentMap)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Cache Manager
&lt;ul>
&lt;li>CacheManager를 통해 설정과 상관없이 동일한 코드로 Cache에 접근할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Cache Annotation
&lt;ul>
&lt;li>메소드의 Cache Annotation을 통해 쉽게 Cache데이터를 저장/삭제할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Cache를 설정하여 CacheManager를 통해 Cache에 접근하는 방법에 대하여 알아보고, 자바메소드를 Caching하는 @Cacheable에 대하여 알아본다.&lt;/p></description></item><item><title>Ajax 지원 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/ajax/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/ajax/</guid><description>&lt;h1 id="ajax-지원-서비스">Ajax 지원 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>일반적으로 Ajax 기능은 javascript 언어로 개발하나, server-side 구현에 익숙한 J2EE 개발자들에게는 쉽지 않은 작업이 될 수 있다.
Ajax 지원 서비스에서는 Ajax를 이용해 자주 사용되는 기능을 custom tag형태로 제공한다.
기능은 오픈소스 라이브러리인 AjaxTags를 이용한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설치">설치&lt;/h3>
&lt;p>&lt;strong>시스템 환경 및 필요 라이브러리&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>JDK 1.5&lt;/li>
&lt;li>Servlet container running Servlets 2.4+ and JSP 2.0+ (jsp-api 2.0,servlet-api 2.4)&lt;/li>
&lt;li>



 









 



&lt;a href="http://ajaxtags.sourceforge.net/">AjaxTags 라이브러리&lt;/a>


&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>설치 순서&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>



 









 



&lt;a href="http://sourceforge.net/project/showfiles.php?group_id=140499">AjaxTags Download&lt;/a>


 사이트에 가서 해당 라이브러리를 download한 후 WEB-INF/lib에 위치시킨다.&lt;/li>
&lt;li>web.xml 설정.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;servlet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-name&amp;gt;&lt;/span>sourceloader&lt;span style="color:#f92672">&amp;lt;/servlet-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-class&amp;gt;&lt;/span>net.sourceforge.ajaxtags.servlets.SourceLoader&lt;span style="color:#f92672">&amp;lt;/servlet-class&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;init-param&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;param-name&amp;gt;&lt;/span>prefix&lt;span style="color:#f92672">&amp;lt;/param-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;param-value&amp;gt;&lt;/span>/ajaxtags&lt;span style="color:#f92672">&amp;lt;/param-value&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/init-param&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/servlet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-name&amp;gt;&lt;/span>sourceloader&lt;span style="color:#f92672">&amp;lt;/servlet-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>/ajaxtags/js/*&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-name&amp;gt;&lt;/span>sourceloader&lt;span style="color:#f92672">&amp;lt;/servlet-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>/ajaxtags/img/*&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-name&amp;gt;&lt;/span>sourceloader&lt;span style="color:#f92672">&amp;lt;/servlet-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>/ajaxtags/css/*&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ajaxtags-tag-reference">AjaxTags Tag Reference&lt;/h3>
&lt;p>&lt;strong>ajax:autocomplete&lt;/strong>&lt;/p></description></item><item><title>스프링 WebFlux에서 어노테이션 기반 컨트롤러 활용 방법</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/web-reactive-annotated-controllers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/web-reactive-annotated-controllers/</guid><description>&lt;h1 id="annotated-controllers">Annotated Controllers&lt;/h1>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>스프링 WebFlux는 어노테이션 기반 프로그램밍 모델을 지원하기 때문에 @Controller, @RestController 컴포넌트로 요청을 매핑하고, 입력을 받고, 예외처리를 할수 있다. 컨트롤러는 메소드를 여러가지로 활용할 수 있어서 클래스를 상속하거나 인터페이스를 구현하지 않아도 된다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@RestController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">HelloController&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@GetMapping&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/hello&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">handle&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello WebFlux&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위 코드에서는 response body에 쓸 String을 리턴한다.&lt;/p>
&lt;h3 id="controller">@Controller&lt;/h3>
&lt;p>컨트롤러는 표준 스프링 빈으로 정의한다. @Controller 어노테이션을 달면 스프링이 클래스패스 내의 다른 @Component 클래스처럼 자동으로 스캔하고 빈으로 등록한다. 이 어노테이션을 선언하면 그 클래스가 Web 컴포넌트라는 뜻이기도 하다.
@Controller 빈을 자동으로 등록하려면 아래와 같이 컴포넌트 스캔을 위한 설정이 필요하다.&lt;/p></description></item><item><title>Annotation-based Configuration</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-annotation-based_configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-annotation-based_configuration/</guid><description>&lt;h1 id="annotation-based-configuration">Annotation-based configuration&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring Framework는 Spring의 종속성 삽입을 위해 annotation을 사용할 수 있다. Spring 2.0에서는 @Required 어노테이션으로 필수 속성을 강제할 수 있는 기능이 도입되었고 Spring 2.5에서는 이와 동일한 일반적인 접근 방식을 따라 Spring의 의존성 주입을 구동할 수 있게 되었으며, Spring 3.0부터 @Inject 및 @Named와 같이 javax.inject 패키지에 포함된 JSR-330(Java용 의존성 주입) 어노테이션에 대한 지원이 추가되었다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Spring @Autowired annotation은 자동 엮음과 같은 기능을 제공하지만, 좀 더 세밀한 제어와 넓은 사용성을 제공한다. Spring Framework는 @Resource, @PostConstruct, @PreDestroy 등의 JSR-250 annotation도 지원한다. 이들 annotation을 사용하기 위해서는 Spring Container에 특정 BeanPostProcessors를 등록해야만 한다. 항상 그렇듯이, 이들 BeanPostProcessors가 개별적인 bean 정의로 등록될 수도 있지만, &amp;lsquo;context&amp;rsquo; namespace를 사용하여 등록할 수도 있다.&lt;/p></description></item><item><title>Annotation 기반 Controller</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-annotation-based-controller/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-annotation-based-controller/</guid><description>&lt;h1 id="annotation-based-controller">Annotation-based Controller&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>스프링 프레임워크는 2.5 버젼 부터 Java 5+ 이상이면 @Controller(Annotation-based Controller)를 개발할 수 있는 환경을 제공한다.
인터페이스 Controller를 구현한 SimpleFormController, MultiActionController 같은 기존의 계층형(Hierarchy) Controller와의 주요 차이점 및 개선점은 아래와 같다.&lt;/p>
&lt;ul>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-annotation-based-controller/#%ec%96%b4%eb%85%b8%ed%85%8c%ec%9d%b4%ec%85%98%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-%ec%84%a4%ec%a0%95">어노테이션을 이용한 설정&lt;/a>



&lt;ul>
&lt;li>XML 기반으로 설정하던 정보들을 어노테이션을 사용해서 정의한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-annotation-based-controller/#%ec%9c%a0%ec%97%b0%ed%95%b4%ec%a7%84-%eb%a9%94%ec%86%8c%eb%93%9c-%ec%8b%9c%ea%b7%b8%eb%8b%88%ec%b3%90">유연해진 메소드 시그니쳐&lt;/a>



&lt;ul>
&lt;li>Controller 메소드의 파라미터와 리턴 타입을 좀 더 다양하게 필요에 따라 선택할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-annotation-based-controller/#pojo-style%ec%9d%98-controller">POJO-Style의 Controller&lt;/a>



&lt;ul>
&lt;li>Controller 개발시에 특정 인터페이스를 구현 하거나 특정 클래스를 상속해야할 필요가 없다.&lt;/li>
&lt;li>하지만 폼 처리, 다중 액션등 기존의 계층형 Controller가 제공하던 기능들을 여전히 쉽게 구현할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>계층형 Controller로 작성된 폼 처리를 @Controller로 구현하는 예도 설명한다.
예제 코드 easycompany의 Controller는 동일한 기능(또한 공통의 Service, DAO, JSP를 사용)을 계층형 Controller와 @Controller로 각각 작성했다.&lt;/p></description></item><item><title>Ant에서 생성한 테스트 결과 HTML 리포트</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/ant-test-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/ant-test-report/</guid><description>&lt;h1 id="ant에서-생성한-테스트-결과-html-리포트">Ant에서 생성한 테스트 결과 HTML 리포트&lt;/h1>
&lt;p>Ant를 통해 테스트를 실행하면 다음과 같은 항목들이 포함된 HTML 리포트가 생성됩니다.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>항목&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Tests&lt;/td>
 &lt;td>전체 TestCase 수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Failures&lt;/td>
 &lt;td>전체 실패한 TestCase 수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Errors&lt;/td>
 &lt;td>전체 에러가 발생한 TestCase 수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Success rate&lt;/td>
 &lt;td>전체 성공한 TestCase 백분율&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Time&lt;/td>
 &lt;td>TestCase가 수행되는 걸린 초단위 시간&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Time Stamp&lt;/td>
 &lt;td>TestCase를 수행한 시각&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Host&lt;/td>
 &lt;td>TestCase가 수행된 컴퓨터의 Host명&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/images/ant-report-example.jpg" alt="Ant 리포트 예시" >
&lt;/p></description></item><item><title>AOP 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/aop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/aop/</guid><description>&lt;h1 id="aop-서비스">AOP 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>AOP 서비스는 관점지향 프로그래밍(Aspect Oriented Programming: AOP) 사상을 구현하고 지원한다. 실행환경 AOP 서비스는 Spring AOP를 사용한다. 본 장에서는 AOP의 개요 및 Spring의 AOP 지원을 중심으로 살펴본다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="aop-개요">AOP 개요&lt;/h3>
&lt;p>개별 프로그래밍 언어는 프로그램 개발을 위해 고유한 관심사 분리(Separation of Concerns) 패러다임을 갖는다. 예를 들면 절차적 프로그래밍은 상태값을 갖지 않는 연속된 함수들의 실행을 프로그램으로 이해하고 모듈을 주요 분리 단위로 정의한다. 객체지향 프로그래밍은 일련의 함수 실행이 아닌 상호작용하는 객체들의 집합으로 보며 클래스를 주요 단위로 한다.&lt;br>
객체지향 프로그래밍은 많은 장점에도 불구하고, 다수의 객체들에 분산되어 중복적으로 존재하는 공통 관심사가 존재한다. 이들은 프로그램을 복잡하게 만들고, 코드의 변경을 어렵게 한다.&lt;br>
관점 지향 프로그래밍(AOP, Aspect-Oriented Programming)은 이러한 객체지향 프로그래밍의 문제점을 보완하는 방법으로 핵심 관심사를 분리하여 프로그램 모듈화를 향상시키는 프로그래밍 스타일이다. AOP는 객체를 핵심 관심사와 횡단 관심사로 분리하고, 횡단 관심사를 관점(Aspect)이라는 모듈로 정의하고 핵심 관심사와 엮어서 처리할 수 있는 방법을 제공한다.&lt;/p></description></item><item><title>XML 스키마 기반 AOP 지원</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/aop/aop-xmlschema/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/aop/aop-xmlschema/</guid><description>&lt;h1 id="xml-스키마-기반-aop-지원">XML 스키마 기반 AOP 지원&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Java 5 버전을 사용할 수 없거나, XML 기반 설정을 선호한다면, Spring 2.0 이상에서 제공하는 XML 스키마 기반의 AOP를 사용할 수 있다. Spring은 관점(Aspect) 정의를 지원하기 위해 “aop” 네임스페이스를 제공한다. @AspectJ를 이용한 AOP 지원에서 사용된 포인트컷 표현식과 충고(Advice) 유형은 XML 스키마 기반 AOP 지원에도 동일하게 제공된다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="관점aspect-정의하기">관점(Aspect) 정의하기&lt;/h3>
&lt;p>Spring 어플리케이션 컨텍스트에서 빈으로 정의된 일반 Java 개체는 관점(Aspect)으로 정의될 수 있다. 관점(Aspect)은 &amp;lt;aop:aspect&amp;gt; 요소를 사용하여 정의한다.&lt;/p></description></item><item><title>실행환경 AOP 가이드라인</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/aop/aop-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/aop/aop-guide/</guid><description>&lt;h1 id="실행환경-aop-가이드라인">실행환경 AOP 가이드라인&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 실행환경은 XML Schema에 기반한 AOP 방법을 사용하며, 예외처리와 트랜잭션 처리에 적용하였다. XML Schema에 기반한 AOP 방법은 @AspectJ Annotation 기반 방법에 비해 횡단 관심사에 대한 설정관계를 파악하기 유리하다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="예외-처리">예외 처리&lt;/h3>
&lt;p>실행환경은 DAO에서 발생한 Exception을 받아 Service단에서 처리할 수 있다. 실행환경에서 추가로 제공하는 Exception은 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>EgovBizException: 업무에서 Checked Exception인 경우에 공통으로 사용하는 Exception이다. 개발자가 특정한 오류에 대해서 throw하여 특정 메시지를 전달하고자 하는 경우에는 processException() 메소드를 이용하도록 한다.&lt;/li>
&lt;li>ExceptionTransfer: AOP 기능을 이용하여 ServiceImpl 클래스에서 Exception이 발생한 경우(after-throwing인 경우)에 trace()메소드에서 처리한다. 내부적으로 EgovBizException인지 RuntimeException(ex.DataAccessException)인지 구분하여 throw한다. ExceptionTransfer는 내부적으로 DefaultExceptionHandleManager 클래스에 의해서 정의된 패턴에 대해서 Handler에 의해서 동작한다.&lt;/li>
&lt;/ul>
&lt;h4 id="관점aspect-정의">관점(Aspect) 정의&lt;/h4>
&lt;p>예외 처리를 위한 Spring 설정 파일(resources/egovframework.spring/context-aspect.xml) 내에 관점(Aspect) 클래스를 빈으로 정의한 뒤, 해당 관점(Aspect)에 대한 포인트컷과 충고(Advice)를 정의한다.&lt;/p></description></item><item><title>연계 서비스 API</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/</guid><description>&lt;h1 id="연계-서비스-api">연계 서비스 API&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>연계 서비스 API는 연계 서비스를 사용 및 제공하기 위한 interface를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="구성">구성&lt;/h3>
&lt;p>연계 서비스 API는 다음과 같이 구성된다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/images/integration_service_api_classdiagram_2.png" alt="Integration Service Api ClassDiagram" >
&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;center>구성요소&lt;/center>&lt;/th>
 &lt;th>&lt;center>설명&lt;/center>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/#egovintegrationcontext">EgovIntegrationContext&lt;/a>


&lt;/td>
 &lt;td>연계 서비스에 대한 설정 및 EgovIntegrationService 객체를 관리한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/#egovintegrationmessage">EgovIntegrationMessage&lt;/a>


&lt;/td>
 &lt;td>연계 서비스를 통해 주고받는 표준 메시지를 정의한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/#egovintegrationmessageheader">EgovIntegrationMessageHeader&lt;/a>


&lt;/td>
 &lt;td>연계 서비스를 통해 주고받는 표준 메시지 헤더를 정의한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/#egovintegrationmessageheaderresultcode">EgovIntegrationMessageHeader::ResultCode&lt;/a>


&lt;/td>
 &lt;td>연계 서비스 결과 코드를 담고 있는 enumeration이다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/#egovintegrationservice">EgovIntegrationService&lt;/a>


&lt;/td>
 &lt;td>연계 서비스를 호출하기 위해 사용한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/#using-sendasync-with-response">EgovIntegrationResponse&lt;/a>


&lt;/td>
 &lt;td>연계 서비스를 비동기 방식으로 호출한 경우, 응답 메시지를 받기 위해 사용한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/#using-sendasync-with-callback">EgovIntegrationServiceCallback&lt;/a>


&lt;/td>
 &lt;td>연계 서비스를 비동기 방식으로 호출한 경우, 응답 메시지를 받기 위한 Callback interface이다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/#using-sendasync-with-callback">EgovIntegrationServiceCallback::CallbackId&lt;/a>


&lt;/td>
 &lt;td>연계 서비스를 Callback을 이용한 비동기 방식으로 호출한 경우, 요청 메시지와 응답 메시지를 연결하기 위한 ID를 나타내는 interface이다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/#egovintegrationserviceprovider">EgovIntegrationServiceProvider&lt;/a>


&lt;/td>
 &lt;td>연계 서비스를 제공하기 위해 사용한다.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="egovintegrationcontext">EgovIntegrationContext&lt;/h3>
&lt;p>EgovIntegrationContext는 연계 서비스에 대한 설정 및 



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/#egovintegrationservice">EgovIntegrationService&lt;/a>


 객체를 관리한다. 연계 서비스를 사용하기 위해서는 EgovIntegrationContext의 getService 메소드를 사용하여 



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/#egovintegrationservice">EgovIntegrationService&lt;/a>


 객체를 얻어와야 한다.&lt;br/>
아래는 주민등록번호와 성명을 이용하여 실명확인을 수행하는 예제이다.&lt;/p></description></item><item><title>The ApplicationContext</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-the-applicationcontext/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-the-applicationcontext/</guid><description>&lt;h1 id="the-applicationcontext">The ApplicationContext&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>org.springframework.context 패키지는 BeanFactory 인터페이스를 확장하는 ApplicationContext 인터페이스를 추가하고, 다른 인터페이스를 확장하여 보다 애플리케이션 프레임워크 지향적인 스타일로 추가 기능을 제공한다.&lt;br>
많은 사람들이 ApplicationContext를 완전히 선언적인 방식으로 사용하며, 프로그래밍 방식으로 생성하지 않고 ContextLoader와 같은 지원 클래스에 의존하여 Java EE 웹 애플리케이션의 정상적인 시작 프로세스의 일부로 ApplicationContext를 자동으로 인스턴스화한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>ApplicationContext는 BeanFactory를 확장한 것으로 BeanFactory의 기능 외에 아래와 같은 기능을 제공한다.&lt;/p>
&lt;ul>
&lt;li>MessageSource : i18n-sytle로 메시지를 access할 수 있도록 지원한다.&lt;/li>
&lt;li>Access to resources : URL, File 등과 같은 자원을 쉽게 access할 수 있도록 지원하다.&lt;/li>
&lt;li>Event propagation : ApplicationListener interface를 구현한 bean에게 Event를 전달한다.&lt;/li>
&lt;li>Loading of multiple (hierarchical) contexts : 계층 구조의 context를 지원함으로써, 어플리케이션의 웹 레이어 등과 같은 특정 레이어에만 집중적인 context를 작성할 수 있다.&lt;/li>
&lt;/ul>
&lt;h3 id="beanfactory-or-applicationcontext">BeanFactory or ApplicationContext?&lt;/h3>
&lt;p>아주 특별한 이유가 없는 한 ApplicationContext를 사용하는 것이 좋다. 다음은 BeanFactory와 ApplicationContext의 기능 비교표이다.&lt;/p></description></item><item><title>Architecture</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/server-security-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/server-security-architecture/</guid><description>&lt;h1 id="architecture">Architecture&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 개발프레임워크의 Spring Security 기본구조와 기본 환경 설정을 설명한다.&lt;br>
전자정부 개발프레임워크의 Server Security는 컨테이너 기동시 적용되는 XML기반 인증이 아닌 실시간 적용되는 DB기반의 JDBC 인증을 사용한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="spring-security-아키텍처">Spring Security 아키텍처&lt;/h3>
&lt;h4 id="웹어플리케이션-인증절차">웹어플리케이션 인증절차&lt;/h4>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer/images/server_security_%ec%9b%b9%ec%96%b4%ed%94%8c%eb%a6%ac%ec%bc%80%ec%9d%b4%ec%85%98_%ec%9d%b8%ec%a6%9d%ec%a0%88%ec%b0%a8_wbg.png" alt="image" >
&lt;/p>
&lt;ul>
&lt;li>
&lt;p>리소스 요청&lt;/p>
&lt;/li>
&lt;li>
&lt;p>요청에 대해 보호되고 있는 자원인지 판단&lt;/p>
&lt;/li>
&lt;li>
&lt;p>아직 인증이 안되었으므로 HTTP 응답코드(오류) 또는 특정 페이지로 redirect&lt;/p>
&lt;/li>
&lt;li>
&lt;p>인증 메커니즘에 따라 웹 페이지 로그인 폼 또는 X509 인증서&lt;/p>
&lt;/li>
&lt;li>
&lt;p>입력 폼의 내용을 HTTP post 또는 인증 세부사항을 포함하는 HTTP 헤더를 서버로 요청&lt;/p></description></item><item><title>@AspectJ 어노테이션을 이용한 AOP 지원</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/aop/aop-aspectj/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/aop/aop-aspectj/</guid><description>&lt;h1 id="aspectj-어노테이션을-이용한-aop-지원">@AspectJ 어노테이션을 이용한 AOP 지원&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>@AspectJ는 Java 5 어노테이션을 사용한 일반 Java 클래스로 관점(Aspect)를 정의하는 방식이다. @AspectJ 방식은 AspectJ 5 버전에서 소개되었으며, Spring은 2.0 버전부터 AspectJ 5 어노테이션을 지원한다. Spring AOP 실행환경은 AspectJ 컴파일러나 직조기(Weaver)에 대한 의존성이 없이 @AspectJ 어노테이션을 지원한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="aspectj-설정하기">@AspectJ 설정하기&lt;/h3>
&lt;p>@AspectJ를 사용하기 위해서 다음 코드를 Spring 설정에 추가한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;aop:aspectj-autoproxy/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="관점aspect-정의하기">관점(Aspect) 정의하기&lt;/h3>
&lt;p>클래스에 @Aspect 어노테이션을 추가하여 Aspect를 생성한다. @Aspect 설정이 되어 있는 경우 Spring은 자동적으로 @Aspect 어노테이션을 포함한 클래스를 검색하여 Spring AOP 설정에 반영한다.&lt;/p></description></item><item><title>Association Mapping</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-associaion_mapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-associaion_mapping/</guid><description>&lt;h1 id="association-mapping">Association Mapping&lt;/h1>
&lt;p>두 클래스 사이의 Association 유형별 매핑 방법에 대해서 살펴보고자 한다. 그리고 다양한 Collection의 매핑 방법 및 Collection의 주요속성인 inverse,cascade에 대해서 샘플코드를 중심으로 살펴본다.&lt;/p>
&lt;h2 id="one-to-one-mapping">One To One Mapping&lt;/h2>
&lt;p>테이블간 1:1 매핑이 있을 경우에 각각의 Entity 클래스를 정의하고 클래스간 관계를 OneToOne 매핑으로 처리한다.&lt;/p>
&lt;h5 id="sample-source">Sample Source&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Entity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Employee&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@OneToOne&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> TravelProfile profile;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Entity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">TravelProfile&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@OneToOne&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Employee employee;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위의 예를 보면 Employee 와 TravelProfile가 각각 OneToOne이라는 Annotation을 기재하여 매핑처리한 것을 알수 있다.&lt;/p></description></item><item><title>Authentication</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/server-security-authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/server-security-authentication/</guid><description>&lt;h1 id="authentication">Authentication&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>허락된 사용자에게만 공개되는 컨텐츠(정보 또는 기능)에 접근하기 위해 반드시 아이디와 암호를 입력하는 로그인 과정을 거치는데 이러한 과정이 인증(authentication)이다.&lt;br>
즉, 인증은 특정 사용자가 유효한 사용자인지를 판단하는 과정을 의미한다.&lt;br>
본 가이드에서는 인증을 위한 기본적인 환경 및 전자정부 표준프레임워크에서 사용된 인증 방법을 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>전자정부 표준프레임워크의 인증은 XML기반의 인증이 아닌 DB기반의 JDBC인증을 사용한다.&lt;br>
기본적인 인증 메커니즘은 인증 주체가 인증을 시도하는 초기에 오직 한 번만 인증 메커니즘이 사용되며 그 이후로는 인증 메커니즘이 정보를 필터에 유지하여 요구되는 요청을 필터 체인상의 다음 필터로 전달하기만 한다.&lt;br>
Spring Security에서 제공하는 인증을 사용하기 위해서는 AuthenticationManager와 실제 인증에 대한 정보를 제공하는 AuthenticationProvider의 설정이 필요하다.&lt;br>
AuthenticationManager는 요청을 AuthenticationProvider 체인에 전달해야 할 임무가 있다.&lt;br>
AuthenticationProvider는 기본적으로 UserDetails와 UserDetailsService인터페이스를 이용한다.&lt;br>
UserDetailsService 인터페이스 내 loadUserByUsername 메소드의 리턴된 UserDetails은 사용자명(username), 패스워드(password), 허가권한(GrantedAuthority[]) 및 사용여부(enabled)와 같은 기초적인 인증 정보들을 제공한다.&lt;br>
이에 전자정부 표준프레임워크에서는 UserDetails 인터페이스를 확장하였으며 JDBC 기반으로 사용자 테이블로부터 사용자 정보를 Map 또는 VO형태로 사용할 수 있도록 하였다.&lt;/p></description></item><item><title>IoC Container Basics</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-basics/</guid><description>&lt;h1 id="basics">Basics&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring Framework에서 객체가 생성자 인수, 팩토리 메서드에 대한 인수 또는 객체 인스턴스가 생성되거나 팩토리 메서드에서 반환된 후 객체 인스턴스에 설정된 속성을 통해서만 종속성(함께 작업하는 다른 객체)을 정의하는 프로세스를 제어의 역전(Inversion of Control, IoC)라고 한다. 의존성 주입(Dependency Injection, DI)은 모듈간의 의존성을 모듈의 외부 컨테이너 에서 주입시켜주는 기능으로 IoC의 한 종류이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Spring Framework에서 Bean은 어플리케이션을 구성하고, IoC Container에 의해 관리되어지는 객체로 간단히 말해 IoC Container에 의해 객체화되고, 조립되고, 또는 관리되는 객체를 의미한다.&lt;br>
Bean들과 Bean들간의 종속성은 Container가 사용하는 설정 메타데이터에 의해 결정된다.&lt;/p></description></item><item><title>Batch IDE</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/batch-ide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/batch-ide/</guid><description/></item><item><title>Batch Job Test Wizard</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/batch-job-test-wizard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/batch-job-test-wizard/</guid><description>&lt;h1 id="batch-job-test-wizard">Batch Job Test Wizard&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크에서는 생성된 배치 파일들을 활용하여 간단한 테스트를 할 수 있는 테스트 마법사를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>배치 테스트시 필요한 항목들을 골라 테스트 파일을 생성해주고 JUnit을 통한 테스트를 진행한다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/images/batch-flow.png" alt="배치 테스트 마법사 흐름" >
&lt;/p>
&lt;p>✔ 배치 테스트 마법사를 통해 생성된 테스트 파일은 별도로 JUnit Test를 진행할 경우에도 사용가능하다.&lt;/p>
&lt;h2 id="사용법">사용법&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>배치 테스트 마법사 시작하기&lt;/p>
&lt;ul>
&lt;li>
&lt;p>메뉴 표시줄에서 &lt;strong>File&lt;/strong> &amp;gt; &lt;strong>New&lt;/strong> &amp;gt; &lt;strong>eGovFrame Batch Job Test&lt;/strong>를 선택한다. (단 eGovFrame Perspective내에서)&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/images/how-to-use-batch-wizard-1.png" alt="배치마법사 사용법 1" >
&lt;/p></description></item><item><title>Bean Scopes</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean_scope/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean_scope/</guid><description>&lt;h1 id="bean-scope">Bean scope&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Bean 정의는 실제 Bean 객체를 생성하는 방식을 정의하는 것으로 Class와 마찬가지로 하나의 Bean 정의에 해당하는 다수의 객체가 생성될 수 있다.&lt;br>
Bean 정의를 통해 객체에 다양한 종속성 및 설정값을 주입할 수 있을 뿐 아니라, 객체의 범위(Scope)를 정의할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Spring 프레임워크는 6개의 Scope를 지원하며, 이 중 4개의 Scope는 Web-aware ApplicationContext를 사용하는 경우에만 사용할 수 있다. 또한, 사용자 정의 범위를 생성할 수도 있다.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Scope&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean_scope/#the-singleton-scope">singleton&lt;/a>


&lt;/td>
 &lt;td>하나의 Bean 정의에 대해서 Spring IoC Container 내에 단 하나의 객체만 존재한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean_scope/#the-prototype-scope">prototype&lt;/a>


&lt;/td>
 &lt;td>하나의 Bean 정의에 대해서 다수의 객체가 존재할 수 있다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean_scope/#the-request-scope">request&lt;/a>


&lt;/td>
 &lt;td>하나의 Bean 정의에 대해서 하나의 HTTP request 생명주기 안에 단 하나의 객체만 존재한다. 즉, 각각의 HTTP Request는 자신만의 객체를 가진다. web-aware Spring ApplicationContext 안에서만 유효하다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean_scope/#the-session-scope">session&lt;/a>


&lt;/td>
 &lt;td>하나의 Bean 정의에 대해서 하나의 HTTP Session 생명주기 안에 단 하나의 객체만 존재한다. web-aware Spring ApplicationContext 안에서만 유효하다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean_scope/#the-application-scope">application&lt;/a>


&lt;/td>
 &lt;td>하나의 Bean 정의에 대해서 하나의 ServletContext 생명주기 안에 단 하나의 객체만 존재한다. web-aware Spring ApplicationContext 안에서만 유효하다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean_scope/#the-websocket-scope">websocket&lt;/a>


&lt;/td>
 &lt;td>하나의 Bean 정의에 대해서 하나의 Websocket 생명주기 안에 단 하나의 객체만 존재한다. web-aware Spring ApplicationContext 안에서만 유효하다.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="the-singleton-scope">The singleton scope&lt;/h3>
&lt;p>Bean이 singleton인 경우, 단지 하나의 공유 객체만 관리된다.&lt;/p></description></item><item><title>Bean Validation (JSR-303)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/</guid><description>&lt;h1 id="bean-validation-jsr-303">Bean Validation (JSR-303)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-validation/">화면처리: validation&lt;/a>


을 통해 검증방법을 알아보았다. 이전과는 다르게 JSR-303(Bean Validation) 스펙은 자동 검증 방식을 제공한다. @javax.validation.Valid애노테이션을 사용하여 내부적으로(자동으로) 검증이 수행된다.&lt;/p>
&lt;p>또한, 최근에 표준 스펙으로 인증받은 JSR-303 빈 검증방식을 이용하여 모델 오브젝트 필드에서 애노테이션을 이용해 검증을 진행할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="valid를-이용한-자동검증">@Valid를 이용한 자동검증&lt;/h3>
&lt;p>기존의 검증 방식을 자동 검증 방식으로 변경하였으며, 방법은 컨트롤러 메소드의 &lt;code>@ModelAttribute&lt;/code> 파라미터에 &lt;code>@Valid&lt;/code> 애노테이션을 추가한다. 그러면 &lt;code>validate()&lt;/code> 메소드를 실행하는 대신 바인딩 과정에서 자동으로 검증이 진행된다.&lt;/p></description></item><item><title>UI - bootstrap</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/bootstrap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/bootstrap/</guid><description>&lt;h1 id="ui---bootstrap">UI - bootstrap&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>부트스트랩(Bootstrap)은 웹디자인을 쉽게 하기 위해 트위터에서 오픈 소스로 공개한 프런트 엔드 프레임워크로, 유연한 HTML, CSS, JavaScript 템플릿과 UI컴포넌트, 인터렉션을 제공하여 손 쉽게 웹 사이트를 구축할 수 있는 시작점이 된다.&lt;/p>
&lt;p>부트스트랩의 장점은 크게 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>부트스트랩 3 이후부터 모바일 중심의 프레임워크이다&lt;/li>
&lt;li>다양한 브라우저들을 지원한다.&lt;/li>
&lt;li>반응형 웹에 최적화 되어있다. 부트스트랩은 스마트폰, 태블릿, 데스크탑에 최적화 되어 css가 조정이 된다.&lt;/li>
&lt;li>시작이 용이하다. HTML, CSS만 알고 있어도 부트스트랩의 사용이 가능하다.&lt;/li>
&lt;/ul>
&lt;p>이러한 장점들로 인해 표준프레임워크에서는 실행환경 UI로 bootstrap을 선정하였다.&lt;/p></description></item><item><title>Build Tool</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/</guid><description>&lt;h1 id="build-tool">Build Tool&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>빌드 도구는 개발자 PC에서 빌드를 실행시켜 작동 가능한 코드를 생성하는 개인 빌드와 개발 서버에서 프로젝트의 개발자들이
작성한 코드를 통합하여 빌드를 수행하는 통합 빌드로 구성되며 전자정부 표준 프레임워크에서는 개인빌드와 통합 빌드를 위해 Maven과 오픈 소스 CI 서버인 Hudson을 빌드 도구로 제공하고 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>&lt;strong>소프트웨어 프로젝트 빌드 프로세스&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>개인 빌드
&lt;ol>
&lt;li>개발자가 소프트웨어 소스 코드를 작성한다.&lt;/li>
&lt;li>개인 빌드를 통해 실행 가능한 바이너리 코드를 생성한다.&lt;/li>
&lt;li>정상 코드 여부를 판별후 형상 관리 서버로 작성한 코드를 commit한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>통합 빌드
&lt;ol>
&lt;li>개발 서버는 형상 관리 서버로부터 최신의 소스 코드를 check out 받는다.&lt;/li>
&lt;li>주기적 자동 빌드 프로세스를 통해 코드 빌드 후 동작 가능한 소프트웨어 패키지를 생성한다.&lt;/li>
&lt;li>운영 서버로 패키징한 소프트웨어를 배포한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>운영서버의 WAS 재기동 작업을 통하여 작성한 소프트웨어를 실행시킨다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/build-tool-process.gif" alt="소프트웨어 프로젝트 빌드 프로세스" >
&lt;/p></description></item><item><title>Cache Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache/</guid><description>&lt;h1 id="cache-service">Cache Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 프레임워크에서 Cache Service는 



 









 



&lt;a href="http://ehcache.sourceforge.net/">EhCache&lt;/a>


를 선정하여 가이드한다.&lt;/p>
&lt;p>Spring 버전 3.1 이전에서는 EhCache에서 제공하는 CacheManager를 직접 사용한다. 3.1 이후 버전에서는 CacheManager Abstraction을 제공함으로써 Cache를 유연하게 사용할 수 있게 되었다. 아래에서는 EhCache의 설명과 Spring 3.1 이전의 EhCache 사용법에 대하여 알아본다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>EhCache를 이용하기 위한 기본 설정 및 기본 사용법에 대해서 설명한다.&lt;/p>
&lt;h3 id="bootstrap-source">Bootstrap Source&lt;/h3>
&lt;p>Cache를 사용하기 위해서 Cache Manager를 생성하는 방법을 샘플을 통해서 설명한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//클래스 패스를 이용하여 설정파일 읽어서 Cache Manager 생성하기.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>URL url &lt;span style="color:#f92672">=&lt;/span> getClass().&lt;span style="color:#a6e22e">getResource&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/ehcache-default.xml&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>manager &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CacheManager(url);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위에서 getResource를 통해서 읽어들이는 /ehcache-default.xml 의 파일 내용은 다음과 같다.&lt;/p></description></item><item><title>Cache Handling</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-cache_handling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-cache_handling/</guid><description>&lt;h1 id="cache-handling">Cache Handling&lt;/h1>
&lt;p>입력 인자로 전달된 객체를 정의된 테이블로 매핑시켜 데이터 액세스 처리를 수행해야 하는데 JPA에서는 이로 인해 발생 가능한 성능 이슈를 개선하기 위해 Cache를 활용한다. 현재 표준버전에서는 1 level Cache 만을 정의하고 있다. JPA 2.0에서는 2level Cache 정의 추가됨.&lt;/p>
&lt;h2 id="1-level-cache">1 Level Cache&lt;/h2>
&lt;p>Entity Manager 내부에 정의된 Cache로, 트랜잭션의 시작과 종료 사이에서 사용되며 한 트랜잭션 내에서 읽혀진 객체들을 보관하는 역할을 수행한다. JPA 구현체는 하나의 트랜잭션 내에서 동일한 객체를 한 번 이상 Loading할 경우 2번째부터는 Cache로부터 해당 객체를 추출하고 또한, 한 트랜잭션 범위 내에서 객체의 속성 변경시 변경 사항은 트랜잭션 종료시에 자동적으로 DB에 반영하도록 한다. 즉, 하나의 트랜잭션 내에서 동일한 객체에 대한 재조회가 이루어지는 경우 Cache를 이용함으로써 DB 접근 횟수를 줄여주기 때문에 어플리케이션 성능 향상에 도움이 되는 것이다.&lt;/p></description></item><item><title>Cassandra</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-cassandra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-cassandra/</guid><description>&lt;h1 id="cassandra">Cassandra&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Cassandra를 위한 Spring 데이터 프로젝트는 핵심 Spring 개념을 Cassandra 컬럼형 데이터 저장소를 사용하는 솔루션 개발에 적용하여 문서를 저장하고 쿼리하기 위한 높은 수준의 추상화 템플릿을 제공한다. Spring 프레임워크에서 제공하는 JDBC 지원과 유사하다는 것을 알 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="데이터베이스-연동">데이터베이스 연동&lt;/h3>
&lt;p>Spring Data Cassandra와 Spring WebFlux를 함께 사용하여 Cassandra 데이터베이스와의 비동기적인 상호 작용을 지원하기 위해 Spring Data Cassandra에서 제공하는 DefaultBridgedReactiveSession 클래스를 사용한다. 해당 클래스를 사용하여 Cassandra 클러스터에 대한 연결을 설정하고, 세션을 관리하며 비동기 쿼리를 실행하고 결과를 처리할 수 있다.&lt;/p></description></item><item><title>센터 컷(CenterCut)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-centercut-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-centercut-intro/</guid><description>&lt;h1 id="센터-컷centercut-소개">센터 컷(CenterCut) 소개&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크에서의 큐(Queue)를 사용하여 대용량 데이터 처리를 위해 센터 컷 방식의 배치 작업수행을 위한 가이드를 제공한다.&lt;/p>
&lt;h2 id="센터컷-가이드-구조">센터컷 가이드 구조&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Unordered List Item기본적으로 센터컷의 구조는 큐(Queue)를 이용하는 부분을 제외하고는 배치 프로그램과 유사하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Unordered List Item처음 ItemReader를 사용하여 데이터를 읽고 큐에 넣은 Center-Cut Reading Step과, 읽어온 데이터를 가공 후 QueueSender를 통해 Queue에 넣는 구조이다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/images/centercut-explain1.png" alt="centercut-explain1" >
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Center-Cut Process Step은 큐에서 들어온 데이터를 읽고 처리 모듈(Busineess Proc)를 활용하여 데이터를 처리하는 구조이다.&lt;/p></description></item><item><title>Change Management</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/</guid><description>&lt;h1 id="change-management-개요">Change Management 개요&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Change Management는 프로젝트(또는 복수의 프로젝트)에서 개발자간의 커뮤니케이션을 돕고 체계적인 이슈(버그)를 관리하는 시스템을 의미한다.&lt;/p>
&lt;h2 id="feature">Feature&lt;/h2>
&lt;p>Change Management는 이슈를 체계적으로 관리하기 위해 스페이스관리, 이슈관리, 통계, 대시보드등 다양한 기능을 제공한다.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Feature&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Easy to Install&lt;/td>
 &lt;td>별도의 Customizing이 필요 없이 제공된 war의 디플로이를 통한 간단한 설치메커니즘을 제공한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Eclipse Integration&lt;/td>
 &lt;td>이클립스의 형상연계 Plug-in과의 연계를 통해 커밋 시 이슈와 연계할 수 있고, 이슈를 조회할 수 있다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>E-Mail Integration&lt;/td>
 &lt;td>사용자등록, 이슈등록 및 상태 수정시에 할당된 담당자에게 해당 내용을 E-Mail로 전송할 수 있다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Cross Referencing of Issues&lt;/td>
 &lt;td>등록된 이슈간에 상호 참조를 할 수 있으며, 이를 통해 연관된 이슈와의 통합이 가능하다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Custom Fields / Status&lt;/td>
 &lt;td>스페이스의 효율적인 관리를 위해 스페이스의 필드와 이슈의 상태를 정의할 수 있다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Detailed History View&lt;/td>
 &lt;td>등록된 이슈의 등록자, 담당자, 상태, 과거 변경내역을 조회할 수 있다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Statistics&lt;/td>
 &lt;td>등록된 스페이스와 사용자별 통계를 통해 전체 이슈와 사용자의 진행상황을 한눈에 파악할 수 있다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Search&lt;/td>
 &lt;td>다양한 검색조건(삭제된 이슈검색 포함)을 제공하여 빠른 시간에 원하는 이슈를 검색할 수 있다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Dashboard&lt;/td>
 &lt;td>해당 사용자별로 자신에게 등록된 스페이스, 등록한 이슈, 할당된 이슈등을 한눈에 파악할 수 있다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Administration Management&lt;/td>
 &lt;td>사용자관리, 스페이스 관리, 설정관리, 통계, 이슈관리등 강력한 관리기능을 제공한다.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="process">Process&lt;/h2>
&lt;p>Change Management는 관리자기능인 스페이스관리(필드, 상태)와 사용자관리등을 통해 이슈 관리 환경을 구성하고,
일반사용자는 설정된 환경에서 이슈를 관리하는 프로세스로 구성된다.&lt;/p></description></item><item><title>Cloud Data Stream</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/integration-layer/cloud-data-stream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/integration-layer/cloud-data-stream/</guid><description/></item><item><title>Code Genetation</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/code-generation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/code-generation/</guid><description/></item><item><title>Code Inspection</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/code-inspection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/code-inspection/</guid><description/></item><item><title>Code Base Exception</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-code_base_exception/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-code_base_exception/</guid><description>&lt;h1 id="code-base-exception">Code Base Exception&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 처리시 Code 기반으로 에러를 처리 할 수 있도록 EgovBatchException를 통해서 지원한다.
데이터베이스 에러코드관리 테이블을 등록과 에러코드 데이터를 등록이 선행 되야지만 해당 서비스를 사용가능하다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="code-base-exception-데이터베이스-설정">Code Base Exception 데이터베이스 설정&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>C REATE TABLE BATCH_EXCEPTION_MESSAGE &lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	EX_ID BIGINT NOT NULL PRIMARY KEY,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	EX_KEY VARCHAR&lt;span style="color:#f92672">(&lt;/span>255&lt;span style="color:#f92672">)&lt;/span> NOT NULL,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	EX_MESSAGE VARCHAR&lt;span style="color:#f92672">(&lt;/span>2500&lt;span style="color:#f92672">)&lt;/span> NOT NULL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I NSERT INTO BATCH_EXCEPTION_MESSAGE VALUES&lt;span style="color:#f92672">(&lt;/span>1,&lt;span style="color:#e6db74">&amp;#39;EGOVBATCH000001&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;배치실행 중 업무 관련 에러가 발생 하였습니다.&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I NSERT INTO BATCH_EXCEPTION_MESSAGE VALUES&lt;span style="color:#f92672">(&lt;/span>2,&lt;span style="color:#e6db74">&amp;#39;EGOVBATCH000002&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;배치실행 중 알수 없는 오류가 발생 하였습니다.&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>방화벽 정책상 [C REATE] 문자를 space 처리 하였습니다. space 문자를 제거 하시면 됩니다.&lt;/li>
&lt;li>방화벽 정책상 [I NSERT] 문자를 space 처리 하였습니다. space 문자를 제거 하시면 됩니다.&lt;/li>
&lt;li>방화벽 정책상 [I NTO] 문자를 space 처리 하였습니다. space 문자를 제거 하시면 됩니다.&lt;/li>
&lt;/ul>
&lt;h3 id="code-base-exception-사용">Code Base Exception 사용&lt;/h3>
&lt;p>에러처리 생성자 생성자 파리미터 데이터베이스소스, 에러코드를 사용하여 에러처리를 할 수 있습니다.&lt;/p></description></item><item><title>Classpath Scanning for Managed Components</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-classpath_scanning_for_managed_components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-classpath_scanning_for_managed_components/</guid><description>&lt;h1 id="classpath-scanning-for-managed-components">Classpath scanning for managed components&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>본 장의 앞선 대부분의 예제들은 Spring Container 안에서 BeanDefinition을 생성하기 위한 설정 메타데이터를 명기하기 위해서 XML을 사용해왔다. 이전 section 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-annotation-based_configuration/">Annotaion-based configuration&lt;/a>


은 source-level annotation을 사용하여 많은 양의 설정 메타데이터를 제공할 수 있음을 보였다. 이들 예제에서도 어쨌든, “base” bean 정의가 XML 파일 안에 명시적으로 정의되었다. 이번 section은 classpath를 검색하고, &lt;em>&lt;strong>filter&lt;/strong>&lt;/em>를 통해 검사함으로써,
&lt;em>&lt;strong>대상 컴퍼넌트(candidate component)&lt;/strong>&lt;/em> 를 검출하는 방법을 소개한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="component-and-further-stereotype-annotations">@Component and further stereotype annotations&lt;/h3>
&lt;p>Spring 2.0부터 Data Access Object(DAO) 등과 같은 repository를 표시하기 위해서 @Repository annotation이 소개되었다. Spring 2.5는 추가적으로 @Component, @Service, @Controller annotation을 제공한다. @Component는 Spring이 관리하는 컴포넌트를 위한 포괄적인 stereotype을 나타낸다. 그리고 @Repository, @Service, @Controller는 좀 더 특별한 사용을 위한 @Component의 일종이다. (각각 persistence, service, presentation layer의 component를 의미한다.)&lt;/p></description></item><item><title>CompositeItem 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-composite_item/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-composite_item/</guid><description>&lt;h1 id="composititem-예제">CompositItem 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>서로 다른 유형으로 업무 처리하는 예제로 스프링 배치에서는 CompositeItemProcessor와 CompositeItemWriter를 제공한다. CompositeItemWriter를 사용하여 서로 다른 타입의 writer로 업무를 처리하는 기능을 예제로 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>CompositeItem 예제의 Job 설정파일인 compositeItemWriterSampleJob.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>CompositeItemWriter는 Item을 delegetes으로 정의된 writer에게 각각 전달하여 처리하도록 한다. 아래의 예제에서는 tradeDao, fileItemWriter1, fileItemWriter2 총 3개의 writer로 설정되어 있다.&lt;/p>
&lt;p>✔CompositeItemWriter 사용시에는 step에 delegetes으로 정의된 writer들은 streams로 설정하여야 한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;compositeItemWriterJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;compositeItemWriterStep1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileItemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">processor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;compositeWriter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;streams&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;stream&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileItemReader&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;stream&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileItemWriter1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;stream&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileItemWriter2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;/streams&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/chunk&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;compositeWriter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.support.CompositeItemWriter&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delegates&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;list&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.common.domain.trade.TradeWriter&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dao&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tradeDao&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;ref&lt;/span> &lt;span style="color:#a6e22e">bean=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileItemWriter1&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;ref&lt;/span> &lt;span style="color:#a6e22e">bean=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileItemWriter2&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/list&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tradeDao&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.common.domain.trade.JdbcTradeDao&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;incrementer&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">parent=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;incrementerParent&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;incrementerName&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;TRADE_SEQ&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileItemWriter1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.FlatFileItemWriter&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fw1&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;resource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;file:target/test-outputs/CustomerReport1.txt&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lineAggregator&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.transform.PassThroughLineAggregator&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileItemWriter2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.FlatFileItemWriter&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fw2&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;resource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;file:target/test-outputs/CustomerReport2.txt&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lineAggregator&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.transform.PassThroughLineAggregator&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="junittest-구성-및-수행">JunitTest 구성 및 수행&lt;/h3>
&lt;h4 id="junittest-구성">JunitTest 구성&lt;/h4>
&lt;p>&lt;b>CompositeItem 설정과 관련 클래스들로 Junit Test를 수행한다. 이 때 배치가 수행되고, 관련된 내용을 확인할 수 있다.&lt;/b>&lt;/p></description></item><item><title>Compress/Decompress Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/compress-decompress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/compress-decompress/</guid><description>&lt;h1 id="compressdecompress-service">Compress/Decompress Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>&lt;strong>전자정부 프레임워크&lt;/strong>에서는 다양한 압축방식을 개발자들에게 편리한 API를 제공하는 Jakarta Commons의 Compress를 오픈소스로 채택하였다.&lt;/p>
&lt;p>Jakarta Commons의 Compress에서 지원하는 tar, zip and bzip2 파일등을 지원한다.&lt;/p>
&lt;p>현재 Commons Compress API 에서는 아래의 Packages를 제공하고 있다.&lt;/p>
&lt;ul>
&lt;li>org.apache.commons.compress.archivers&lt;/li>
&lt;li>org.apache.commons.compress.archivers.ar&lt;/li>
&lt;li>org.apache.commons.compress.archivers.cpio&lt;/li>
&lt;li>org.apache.commons.compress.archivers.jar&lt;/li>
&lt;li>org.apache.commons.compress.archivers.tar&lt;/li>
&lt;li>org.apache.commons.compress.archivers.zip&lt;/li>
&lt;li>org.apache.commons.compress.changes&lt;/li>
&lt;li>org.apache.commons.compress.compressors&lt;/li>
&lt;li>org.apache.commons.compress.compressors.bzip2&lt;/li>
&lt;li>org.apache.commons.compress.compressors.gzip&lt;/li>
&lt;li>org.apache.commons.compress.utils&lt;/li>
&lt;/ul>
&lt;p>보다 자세한 사항은 



 









 



&lt;a href="http://commons.apache.org/compress/apidocs/index.html">Commons Compress API&lt;/a>


를 참고하기 바란다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>&lt;strong>압축&lt;/strong>이란 파일에 저장되어 있는 정보를 압축하여 보다 적은 기억 공간에 동일한 정보를 저장하는 기술이다.&lt;/p>
&lt;pre tabindex="0">&lt;code>일반적으로 정보에 포함되어 있는 중복된 내용을 삭제하거나 보다 적은 길이의 코드를 사용하여 정보를 표현하는 방법을 사용하여 저장에 필요한 공간의 크기를 줄인다. 
이런 과정을 압축이라고 하며, 압축된 정보를 사용하기 위해서 다시 원래의 상태로 복원하는 과정을 압축해제라고 한다.
압축 방법에는 손실이 없는 압축 방법과 손실이 있는 압축 방법이 있다.
먼저 프로그램과 데이터 등과 같은 정보는 반드시 손실이 없는 압축 방법을 사용하여야 한다.
손실이 없는 압축 방법이라고 하는 것은 압축된 정보를 다시 복원한 경우에 압축되기 이전의 상태와 동일한 내용과 크기를 가지게 되는 압축 방법을 말한다.
하지만 이미지나 음성 등과 같은 경우에는 손실이 있는 압축 방법을 사용할 수 있다.
이미지나 음성에는 방대한 양의 정보가 존재하고 이들 정보 중에 일부가 사라진다 하더라도 사람이 눈이나 귀로 그 차이를 구별할 수 없기 때문이다.
손실이 있는 압축 방법이라고 하는 것은 압축된 정보를 다시 복원하더라도 압축되기 이전의 상태 혹은 크기와 동일하지 않은 내용을 가질 수 있는 압축 방법을 뜻한다.
&lt;/code>&lt;/pre>&lt;p>간단히 여기서는 자주 사용하는 압축파일의 종류는 아래의 참조 링크를 참고한다.&lt;/p></description></item><item><title>Concurrency</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-concurrency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-concurrency/</guid><description>&lt;h1 id="concurrency">Concurrency&lt;/h1>
&lt;p>동시에 동일한 데이터에 접근할 때에 데이터에 대한 접근을 제어하기 위해 Optimistic Locking을 지원한다. 한편 Hibernate의 Native API를 통해서는 지원 가능한 Pessimistic Locking 은 JPA2.0 버전에 정의될 예정이다.&lt;/p>
&lt;h2 id="optimistic-locking">Optimistic Locking&lt;/h2>
&lt;h3 id="without-locking-source">Without Locking Source&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">testUpdateUserWithoutOptimisticLocking&lt;/span>() &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 1. 테스트를 위한 신규 데이터를 입력&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> newTransaction();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> addDepartmentUserAtOnce();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> closeTransaction();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 2. 동일한 식별자를 이용하여 User 정보를 두번 조회&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> newTransaction();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User fstUser &lt;span style="color:#f92672">=&lt;/span> (User) em.&lt;span style="color:#a6e22e">find&lt;/span>(User.&lt;span style="color:#a6e22e">class&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;User1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User scdUser &lt;span style="color:#f92672">=&lt;/span> (User) em.&lt;span style="color:#a6e22e">find&lt;/span>(User.&lt;span style="color:#a6e22e">class&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;User1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> closeTransaction();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 3. Detached 상태에서의 변경처리&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fstUser.&lt;span style="color:#a6e22e">setUserName&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;First : Kim&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 4. 별도의 트랜잭션으로 변경처리&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> newTransaction();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scdUser.&lt;span style="color:#a6e22e">setUserName&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Second : Kim&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> closeTransaction();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 5. 3에서 작업한 내용이 반영되어 변경.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> newTransaction();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> em.&lt;span style="color:#a6e22e">merge&lt;/span>(fstUser);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> closeTransaction();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위에서 제시한 로직에 대해 자세히 살펴보자.&lt;/p></description></item><item><title>Configuration Management</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/configuration-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/configuration-management/</guid><description>&lt;h1 id="형상관리configuration-management">형상관리(Configuration Management)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>형상관리 도구는 시스템 형상 요소(개발 소스, 산출물 문서 등)의 기능적 특성이나 물리적 특성을 문서화하고 그들 특성의 변경을 관리하며, 변경의 과정이나 실현 상황을 기록·보고하여 지정된 요건이 충족되었다는 사실을 검증하는 것이나 또는 그 과정을 위한 기능을 제공한다.&lt;/p>
&lt;h2 id="주요-기술-및-개념-설명">주요 기술 및 개념 설명&lt;/h2>
&lt;p>&lt;strong>형상이란?&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>구조도, 프로그램 코드, 코드를 담은 디스크, 설계 사양서, 지침서 등 소프트웨어 개발에 필요한 모든 것들을 의미한다.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>형상관리 프로세스란?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>식별 : 소프트웨어가 변경될 만한 부분을 미리 정의한다.&lt;/li>
&lt;li>버전관리 : 변경전과 변경 후를 정확히 기록한다.&lt;/li>
&lt;li>변경관리 : 변경으로 인한 성능 및 품질을 평가한다.&lt;/li>
&lt;li>형상감사 : 제대로 변경됐는지 확인한다.&lt;/li>
&lt;li>보고 : 변경 사항을 문서화한다.&lt;/li>
&lt;/ol>
&lt;h2 id="소스-버전관리-도구">소스 버전관리 도구&lt;/h2>
&lt;p>소스 버전관리 도구(소스관리도구)는 관리 대상이 되는 형상 요소와 형상관리 절차를 소스(소스 코드, 이미지, 바이너리 파일 등)와 버전관리로 국한시켜 이에 대한 변경을 소스 버전관리 절차에 따라 관리하고, 효율적으로 처리 하기 위한 통제 환경을 의미한다.&lt;/p></description></item><item><title>MyBatis Configuration XML File</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-configuration_xml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-configuration_xml/</guid><description>&lt;h1 id="mybatis-configuration-xml-file">MyBatis Configuration XML File&lt;/h1>
&lt;p>MyBatis XML 설정파일은 다양한 셋팅과 프로퍼티를 가진다 해당 파일의 작성과 상세한 옵션 설정에 대해 알아본다.&lt;/p>
&lt;h2 id="configuration-xml">Configuration XML&lt;/h2>
&lt;p>MyBatis XML 설정파일의 일반적인 구조 및 구성은 properties, settings, typeAliases, typeHandlers, objectFactory, plugins, environments, databaseIdProvider, mappers 등의 내용으로 구성이 되어 있으며 주요 내용은 아래와 같다.&lt;/p>
&lt;h4 id="sample-configuration">Sample Configuration&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE configuration PUBLIC &amp;#34;-//mybatis.org//DTD Config 3.0//EN&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;#34;http://mybatis.org/dtd/mybatis-3-config.dtd&amp;#34;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;properties&lt;/span> &lt;span style="color:#a6e22e">resource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org/mybatis/example/config.properties&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dev_user&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;F2Fa3!33TYyg&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;settings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;setting&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;cacheEnabled&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;setting&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lazyLoadingEnabled&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;setting&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;multipleResultSetsEnabled&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/settings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;typeHandlers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;typeHandler&lt;/span> &lt;span style="color:#a6e22e">handler=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.dataaccess.typehandler.CalendarMapperTypeHandler&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/typeHandlers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;typeAliases&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;typeAlias&lt;/span> &lt;span style="color:#a6e22e">alias=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;deptVO&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.dataaccess.vo.DeptVO&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;typeAlias&lt;/span> &lt;span style="color:#a6e22e">alias=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;empVO&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.dataaccess.vo.EmpVO&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	. 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/typeAliases&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>properties : 표준 java properties (key=value 형태)파일에 대한 연결을 지원하며 설정 파일내에서 ${key} 와 같은 형태로 properties 형태로 외부화해놓은 실제 값(여기서는 DB 접속 관련 driver, url, id/pw)을 참조할 수 있다. resource 속성으로 classpath, url 속성으로 유효한 URL 상에 있는 자원을 지정 가능하다.&lt;/p></description></item><item><title>Controller</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-controller/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-controller/</guid><description>&lt;h1 id="controller">Controller&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>DispatcherServlet은 HandlerMapping를 이용해서 해당 요청을 처리할 Controller를 결정한다.
이 Controller는 요청에 대해서 처리를 하고 데이터를 Model 객체에 반영한다.
Spring MVC는 다양한 종류의 Controller를 제공하는데, 데이터 바인딩이나 폼 처리 또는 멀티 액션등의 편의 기능을 제공한다.
이 Controller들은 org.springframework.web.servlet.mvc.Controller 인터페이스를 구현한 클래스들이다.(@Controller는 예외다. 여기서는 @Controller에 대한 설명은 제외한다.)
eclipse에서 인터페이스 Controller를 Hierarchy View에서 열어보면 아래와 같은 구조를 보여준다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/images/web-servlet-controller-preview.png" alt="Controller preview" >
&lt;/p>
&lt;p>이 중 주요 Controller의 용도 및 특징을 표로 나타내면 아래와 같다.&lt;/p></description></item><item><title>Crypto</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto/</guid><description>&lt;p>Encryption/Decryption과 crypto 간소화를 crypto라는 목록에 넣기 위해 생성.&lt;/p></description></item><item><title>Crypto 간소화 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto/crypto-simplification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto/crypto-simplification/</guid><description>&lt;h1 id="crypto-간소화-서비스">Crypto 간소화 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>표준프레임워크 3.8 부터 ARIA 블록암호 알고리즘 기반 암/복호화 설정을 간소화 할 수 있는 방법을 제공한다.
내부적으로 필요한 설정을 가지고 있고, &lt;acronym title="Extensible Markup Language">XML&lt;/acronym> Schema를 통해 필요한 설정만을 추가할 수 있도록 제공한다.
또한 globals.properties 설정 파일의 중요 정보 Url, UserName, Password 항목을 암/복호화 처리 할 수 있도록 제공한다.
그외에 정보는 properties 파일에 암호화 데이터 설정후 #{egovEnvCryptoService.decrypt(&amp;rsquo;…&amp;rsquo;)} 복호화 기능을 제공한다.&lt;/p>
&lt;h2 id="xml-namespace-및-schema-설정">XML namespace 및 schema 설정&lt;/h2>
&lt;p>설정 간소화 기능을 사용하기 위해서는 다음과 같은 xml 선언이 필요하다.&lt;/p></description></item><item><title>Customizing the nature of a Bean</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-customizing_the_nature_of_a_bean/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-customizing_the_nature_of_a_bean/</guid><description>&lt;h1 id="customizing-the-nature-of-a-bean">Customizing the nature of a bean&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>컨테이너의 빈 라이프사이클 관리와 상호 작용하기 위해 Spring InitializingBean 및 DisposableBean 인터페이스를 구현할 수 있는데, 컨테이너는 전자의 경우 afterPropertiesSet()을 호출하고 후자의 경우 destroy()를 호출하여 빈이 초기화 및 소멸될 때 특정 작업을 수행하도록 한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="lifecycle-callbacks">Lifecycle callbacks&lt;/h3>
&lt;p>Spring Framework는 Container 내부의 bean의 행동을 변화시길 수 있는 다양한 callback interface를 제공한다.&lt;/p>
&lt;h4 id="객체화-callbacksinitialization-callbacks">객체화 callbacks(Initialization callbacks)&lt;/h4>
&lt;p>org.springframework.beans.factory.InitializingBean interface를 구현하면 bean에 필요한 모든 property를 설정한 후, 초기화 작업을 수행한다. InitializingBean interface는 다음 메소드를 명시하고 있다.&lt;/p></description></item><item><title>Data Access 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/</guid><description>&lt;h1 id="data-access-서비스">Data Access 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Data Access 서비스는 다양한 데이터베이스 솔루션 및 데이터베이스 접근 기술에 일관된 방식으로 대응하기 위한 서비스로서,데이터를 조회하거나 입력, 수정, 삭제하는 기능을 수행하는 메커니즘을 단순화한다. 또한 데이터베이스 솔루션이나 접근 기술이 변경될 경우에도 데이터를 다루는 시스템 영역의 변경을 최소화할 수 있도록 데이터베이스와의 접점을 추상화하며, 추상화된 데이터 접근 방식을 템플릿(Template)으로 제공함으로써, 개발자들의 업무 효율을 향상시킨다.&lt;/p>
&lt;h3 id="ibatis-프레임워크">iBATIS 프레임워크&lt;/h3>
&lt;p>전자정부 프레임워크에서는 JDBC 를 사용한 Data Access 를 추상화하여 간편하고 쉽게 사용할 수 있는 Data Mapper framework 인 iBATIS 를 Data Access 기능의 기반 오픈 소스로 채택하였다. iBATIS 를 사용하면 관계형 데이터베이스에 억세스하기 위해 필요한 일련의 자바 코드 사용을 현저히 줄일 수 있으며 간단한 XML 기술을 사용하여 SQL 문을 JavaBeans (또는 Map) 에 간편하게 맵핑할 수 있다.&lt;/p></description></item><item><title>iBATIS에서의 Data Type 매핑</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-data_type/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-data_type/</guid><description>&lt;h1 id="data-type">Data Type&lt;/h1>
&lt;p>어플리케이션을 작성할 때 Data Type 에 대한 올바른 사용과 관련 처리는 매우 중요하다. 특히 데이터베이스를 이용하여 데이터를 저장하고 조회할 때 Java 어플리케이션에서의 Type 과 DBMS 에서 지원하는 관련 매핑 jdbc Type 의 정확한 사용이 필요하며, 여기에서는 iBATIS 환경에서 javaType 과 특정 DBMS 의 jdbcType 의 적절한 매핑 사용예를 중심으로 일반적인 Data Type 의 사용 가이드를 참고할 수 있도록 한다.&lt;/p>
&lt;h2 id="기본-data-type-사용-방법">기본 Data Type 사용 방법&lt;/h2>
&lt;p>iBATIS SQL Mapper 프레임워크는 Java 어플리케이션 영역의 표준 JavaBeans 객체(또는 Map 등)의 각 Attribute 에 대한 Java Type 과 JDBC 드라이버에서 지원하는 각 DBMS의 테이블 칼럼에 대한 Data Type 의 매핑을 기반으로 parameter / result 객체에 대한 바인딩/매핑 을 처리한다. 각 javaType 에 대한 매칭되는 jdbcType 은 일반적인 Ansi SQL 을 사용한다고 하였을 때 아래에서 대략 확인할 수 있을 것이다. 특정 DBMS 벤더에 따라 추가적으로 지원/미지원 하는 jdbcType 이 다를 수 있고, 또한 같은 jdbcType 을 사용한다 하더라도 타입에 따른 사용 가능한 경계값(boundary max/min value)은 다를 수 있다.&lt;/p></description></item><item><title>DataSource 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/data-source/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/data-source/</guid><description>&lt;h1 id="datasource-서비스">DataSource 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>데이터베이스에 대한 연결을 제공하는 서비스이다. 다양한 방식의 데이터베이스 연결을 제공하고,이에 대한 추상화계층을 제공함으로써, 업무 로직과 데이터베이스 연결 방식 간의 종속성을 배제한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="connection-provider-별-datasource-implementions">Connection Provider 별 DataSource implementions&lt;/h3>
&lt;p>Connection Provider별 Connection 객체를 얻기 위한 로직을 구현한 DataSource 구현체를 사용한다.&lt;/p>
&lt;h4 id="jdbcdatasource">JDBCDataSource&lt;/h4>
&lt;p>JDBC driver를 이용하여 Database Connection을 생성한다.&lt;/p>
&lt;h5 id="configuration">Configuration&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;driverClassName&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${driver}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${dburl}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${username}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${password}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>PROPERTIES&lt;/th>
 &lt;th>설 명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>driverClassName&lt;/td>
 &lt;td>JDBC driver class name설정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>url&lt;/td>
 &lt;td>Database에 접근하기 위한 JDBC URL&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>username&lt;/td>
 &lt;td>Database 접근하기 위한 사용자명&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>password&lt;/td>
 &lt;td>Database 접근하기 위한 암호&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h5 id="sample-source">Sample Source&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Resource&lt;/span>(name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DataSource dataSource;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Resource&lt;/span>(name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;jdbcProperties&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Properties jdbcProperties;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">boolean&lt;/span> isHsql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">testJdbcDataSource&lt;/span>() &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertNotNull(dataSource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals(&lt;span style="color:#e6db74">&amp;#34;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;#34;&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dataSource.&lt;span style="color:#a6e22e">getClass&lt;/span>().&lt;span style="color:#a6e22e">getName&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Connection con &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Statement stmt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ResultSet rs &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> con &lt;span style="color:#f92672">=&lt;/span> dataSource.&lt;span style="color:#a6e22e">getConnection&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertNotNull(con);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stmt &lt;span style="color:#f92672">=&lt;/span> con.&lt;span style="color:#a6e22e">createStatement&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rs &lt;span style="color:#f92672">=&lt;/span> stmt.&lt;span style="color:#a6e22e">executeQuery&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;select &amp;#39;x&amp;#39; as x from dual&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (rs.&lt;span style="color:#a6e22e">next&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals(&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>, rs.&lt;span style="color:#a6e22e">getString&lt;/span>(1));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ........
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="dbcpdatasource">DBCPDataSource&lt;/h4>
&lt;p>JDBC driver를 이용한 Database Connection 구현체이다.



 









 



&lt;a href="http://commons.apache.org/dbcp/">Commons DBCP&lt;/a>


라 불리는 Jakarta의 Database Connection Pool이다.&lt;/p></description></item><item><title>DB Support</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/unit-test/db-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/unit-test/db-support/</guid><description>&lt;h1 id="db-support">DB Support&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>데이터베이스 관련 단위 테스트를 수행하기 위한 Test Case 를 작성하고 실행하는 방법을 안내한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>DAO (Data Access Object) 클래스를 개발하는 경우 이에 대한 단위 테스트 케이스를 작성하기 위해 고려해야 할 사항은 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>데이터베이스 연결&lt;/li>
&lt;li>테이블 생성 및 초기 데이터 입력&lt;/li>
&lt;li>DAO 클래스 실행 시 필요한 테스트 데이터 관리&lt;/li>
&lt;li>DAO 테스트 후 트랜잭션 Rollback 혹은 Commit 처리&lt;/li>
&lt;/ul>
&lt;p>이를 위해, 데이터베이스가 아직 준비 되지 않은 경우에는 개발자 로컬에 hsqldb, derby, mysql 과 같은 dbms를 임시로 설치하기도 한다.
데이터베이스가 준비 되었다 하더라도 테이블 생성 스크립트를 작성하고 직접 dbms 와 연결하여 commit 후의 데이터를 확인해야 한다.
또한, 프로그램이 수정 보완 되는 과정에서 여러 번 중복 테스트를 하기 위해서는 다시 dbms 에 접속하여 rollback 을 하는 등의 작업을 수행하기도 한다.&lt;/p></description></item><item><title>DBIO Editor</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/dbio-editor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/dbio-editor/</guid><description/></item><item><title>DB 파티셔닝 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi_process/batch-example-db_partition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi_process/batch-example-db_partition/</guid><description>&lt;h1 id="db-파티셔닝-예제">DB 파티셔닝 예제&lt;/h1>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;strong>DB 파티셔닝 예제의 Job 설정 파일인 partitionJdbcJob.xml을 확인한다.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>partitioner : gridSize 수 만큼 Master Step을 파티셔닝하는 EgovColumnRangePartitioner&lt;/li>
&lt;li>grid-size : 생성할 Context 수&lt;/li>
&lt;li>fileNameListener : 입력 리소스명과 같은 이름의 출력리소스명을 설정하고, 입력 리소스가 없다면 설정된 기본값을 이용해 출력위치 및 출력파일명을 지정한다.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;partitionJdbcJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;partition&lt;/span> &lt;span style="color:#a6e22e">step=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">partitioner=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;partitioner&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;handler&lt;/span> &lt;span style="color:#a6e22e">grid-size=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">task-executor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskExecutor&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/partition&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;partitioner&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.example.support.EgovColumnRangePartitioner&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;table&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;CUSTOMER&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;column&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ID&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemWriter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;listeners&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;listener&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileNameListener&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/listeners&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileNameListener&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.example.listener.EgovOutputFileListener&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">scope=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;path&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;file:./target/test-outputs/partition/db/&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="클래스-설정">클래스 설정&lt;/h4>
&lt;h5 id="partitioner">Partitioner&lt;/h5>
&lt;p>EgovColumnRangePartitioner는 gridSize 만큼 테이블 영역을 나누고 영역 수 만큼 Context를 생성하여, 각 영역의 시작열(min)과 마지막열 (max)을 구해 각 Context에 셋팅하는 역할을 한다.&lt;br>
(결론적으로, gridSize 만큼 Context가 생성되어 여러 Slave Step 들을 사용할 수 있게 됨)&lt;/p></description></item><item><title>Debug</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/debug/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/debug/</guid><description/></item><item><title>선언적 Transaction 관리</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/transaction/declarative/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/transaction/declarative/</guid><description>&lt;h1 id="declarative-transaction-management">Declarative Transaction Management&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>코드에서 직접적으로 Transaction 처리하지 않고, 선언적으로 Transaction을 관리할 수 있는데 Annotation을 이용한 Transaction 관리, XML 정의를 이용한 Transaction 관리를 지원한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="annotation-transaction-management">Annotation Transaction Management&lt;/h3>
&lt;p>Annotation 설정을 이용해서 Transaction을 관리할 수 있는데 아래에서 예를 들어서 설정 방법과 사용법을 설명한다.&lt;/p>
&lt;h4 id="configuration">Configuration&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;tx:annotation-driven&lt;/span> &lt;span style="color:#a6e22e">transaction-manager=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;transactionManager&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>설정 XML에 위의 &amp;lt;tx:annotation-driven..&amp;gt;을 기재하면 설정된다. transactionManager는 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/transaction/">TransactionManager 설정&lt;/a>


 참조&lt;/p>
&lt;h4 id="sample-source">Sample Source&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Transactional&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">removeRole&lt;/span>(Role role) &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">roleDAO&lt;/span>.&lt;span style="color:#a6e22e">removeRole&lt;/span>(role);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위의 예를 보면 @Transactional을 트랜잭션 처리하고자 하는 메소드위에 기재하여 트랜잭션 관리를 할 수 있다. @Transactional에 속성을 정의하여 쓸 수 있는데 속성 목록은 아래와 같다.&lt;/p></description></item><item><title>Delimited 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-file_delimitied/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-file_delimitied/</guid><description>&lt;h1 id="delimited-예제">Delimited 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>플랫 파일의 데이터를 구분자(delimiter)로 구분하여 처리하는 기능을 예제로 제공한다. 스프링 배치에서는 플랫 파일을 처리하기 위해 FlatFileItemReader와 FlatFileItemWriter를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>Delimited 예제의 Job 설정파일인 delimitedIoJob.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>FlatFileItemReader는 아래와 같은 설정들을 포함한다.&lt;/p>
&lt;ul>
&lt;li>resource : 처리해야 할 파일&lt;/li>
&lt;li>lineMapper : 파일의 한 Line씩 처리하는 역할. lineTokenizer와 fieldSetMapper로 구성
&lt;ul>
&lt;li>lineTokenizer : DelimitedLineTokenizer을 통해 각 Line을 읽어 구분자로 분리하여 fieldSet객체로 만들어 줌&lt;/li>
&lt;li>fieldSetMapper : FieldSet을 다시 객체로 매핑시켜줌&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.FlatFileItemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">scope=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lineMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.mapping.DefaultLineMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lineTokenizer&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.transform.DelimitedLineTokenizer&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delimiter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;,&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;names&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name,credit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fieldSetMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;targetType&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.common.domain.trade.CustomerCredit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;resource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#{jobParameters[inputFile]}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>추가로 FlatFileItemWriter설정에 대해서 설명하면 아래와 같다.&lt;/p></description></item><item><title>Dependencies</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-dependencies/</guid><description>&lt;h1 id="dependencies">Dependencies&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>일반적인 엔터프라이즈 애플리케이션은 단일 객체(또는 Spring 용어로 빈)로만 이루어지지 않고 간단한 애플리케이션도 최종 사용자에게 일관된 사용자 경험을 제공하기 위해 여러 객체가 함께 작동한다. 이러한 객체들은 독립적으로 존재하며, Spring 프레임워크를 사용하여 각각의 빈으로 정의된다. 여기서는 독립적으로 정의된 여러 빈들이 협업하여 목표를 달성하는 방법에 대해 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="종속성-삽입injecting-dependencies">종속성 삽입(Injecting dependencies)&lt;/h3>
&lt;p>종속성 삽입(Dependency Injection(DI))의 기본적인 원칙은 객체는 단지 생성자나 set 메소드를 통해서만 종속성(필요로 하는 객체)를 정의한다는 것이다.&lt;br>
그러면 Container는 Bean 객체를 생성할 때, Bean이 정의한 종속성을 추가하게 되는데 이는 Bean이 스스로 필요한 객체를 생성하거나 찾는 등의 제어를 가지는 것과는 반대의 개념으로 Inversion of Control(IoC)라고 부른다.&lt;br>
종속성 삽입에는 두 가지 방법이 있다. 



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-dependencies/#constructor-injection">Constructor Injection&lt;/a>


과 



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-dependencies/#setter-injection">Setter Injection&lt;/a>


이다.&lt;/p></description></item><item><title>스프링 WebFlux의 DispatcherHandler와 요청 처리 흐름</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/web-reactive-dispatcherhandler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/web-reactive-dispatcherhandler/</guid><description>&lt;h1 id="dispatcherhandler">DispatcherHandler&lt;/h1>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>스프링 WebFlux도 스프링 MVC와 유사한 프론트 컨트롤러 패턴을 사용한다. 중앙 WebHandler가 받은 요청을 다른 컴포넌트에 위임하는데 DispatcherHandler가 바로 이 중앙 WebHandler다. 이 모델 덕분에 다양한 워크플로우를 지원할 수 있다.
DispatcherHandler는 스프링 설정에 따라 그에 맞는 컴포넌트로 위임한다. DispatcherHandler도 스프링 빈이며 ApplicationContextAware 인터페이스를 구현했기 때문에 실행중인 컨텍스트에 접근할 수 있다. DispatcherHandler 빈을 WebHandler 이름으로 정의하면 WebHttpHandlerBuilder가 감지하고 WebHandler API에서 설명했던 체인에 추가한다.&lt;/p>
&lt;p>WebFlux 애플리케이션에서 사용하는 일반적인 스프링 설정은 다음과 같다.&lt;/p></description></item><item><title>DispatcherServlet</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-dispatcherservlet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-dispatcherservlet/</guid><description>&lt;h1 id="dispatcherservlet">DispatcherServlet&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring MVC Framework의 유일한 Front Controller인 DispatcherServlet은 Spring MVC의 핵심 요소이다.
DispatcherServlet은 Controller로 향하는 모든 웹요청의 진입점이며, 웹요청을 처리하며, 결과 데이터를 Client에게 응답 한다.
DispatcherServlet은 Spring MVC의 웹요청 Life Cycle을 주관한다 할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="dispatcherservlet에서의-웹요청-흐름">DispatcherServlet에서의 웹요청 흐름&lt;/h3>
&lt;p>Client의 웹요청시에 DispatcherServlet에서 이루어지는 처리 흐름은 아래와 같다.
좀더 자세한 처리 흐름을 알고 싶다면 디버깅모드로 과정을 추적해 보는 것을 권장한다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/images/web-servlet-dispatcherservlet-flow.png" alt="DispatcherServlet flow" >
&lt;/p>
&lt;ol>
&lt;li>doService 메소드에서부터 웹요청의 처리가 시작된다. DispatcherServlet에서 사용되는 몇몇 정보를 request 객체에 담는 작업을 한 후 doDispatch 메소드를 호출한다.&lt;/li>
&lt;li>아래 3번~13번 작업이 doDispatch 메소드안에 있다. Controller, View 등의 컴포넌트들을 이용한 실제적인 웹요청처리가 이루어 진다.&lt;/li>
&lt;li>getHandler 메소드는 RequestMapping 객체를 이용해서 요청에 해당하는 Controller를 얻게 된다.&lt;/li>
&lt;li>요청에 해당하는 Handler를 찾았다면 Handler를 HandlerExecutionChain 객체에 담아 리턴하는데, 이때 HandlerExecutionChain는 요청에 해당하는 interceptor들이 있다면 함께 담아 리턴한다.&lt;/li>
&lt;li>실행될 interceptor들이 있다면 interceptor의 preHandle 메소드를 차례로 실행한다.&lt;/li>
&lt;li>Controller의 인스턴스는 HandlerExecutionChain의 getHandler 메소드를 이용해서 얻는다.&lt;/li>
&lt;li>HandlerMapping과 마찬가지로 여러개의 HanlderAdaptor를 설정할 수 있는데, getHandlerAdaptor 메소드는 Controller에 적절한 HanlderAdaptor 하나를 리턴한다.&lt;/li>
&lt;li>선택된 HanlderAdaptor의 handle 메소드가 실행되는데, 실제 실행은 파라미터로 넘겨 받은 Controller를 실행한다.&lt;/li>
&lt;li>계층형 Controller인 경우는 handleRequest 메소드가 실행된다. @Controller인 경우는 HanlderAdaptor(AnnotationMethodHandlerAdapter)가 HandlerMethodInvoker를 이용해 실행할 Controller의 메소드를 invoke()한다.&lt;/li>
&lt;li>interceptor의 postHandle 메소드가 실행된다.&lt;/li>
&lt;li>resolveViewName 메소드는 논리적 뷰 이름을 가지고 해당 View 객체를 반환한다.&lt;/li>
&lt;li>Model 객체의 데이터를 보여주기 위해 해당 View 객체의 render 메소드가 수행된다.&lt;/li>
&lt;/ol>
&lt;h3 id="webxml에-dispatcherservlet-설정하기">web.xml에 DispatcherServlet 설정하기&lt;/h3>
&lt;p>Spring MVC Framework을 사용하기 위해서는 web.xml에 DispatcherServlet을 설정하고, DispatcherServlet이 WebApplicationContext를 생성할수 있도록 빈(Bean) 정보가 있는 파일들도 설정해주어야 한다.&lt;/p></description></item><item><title>컨테이너 가상화(Docker) 빌드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/docker/</guid><description>&lt;h1 id="컨테이너-가상화docker를-활용한-전자정부-표준프레임워크-기반-프로그램의-도커-이미지-제작">컨테이너 가상화(Docker)를 활용한 전자정부 표준프레임워크 기반 프로그램의 도커 이미지 제작&lt;/h1>
&lt;h2 id="1-개요">1. 개요&lt;/h2>
&lt;p>본 가이드는 컨테이너 가상화 기술인 도커(Docker)를 활용하여 전자정부 표준프레임워크의 기반 응용프로그램(Web Application)의 도커 이미지 제작 가이드를 제공한다.&lt;/p>
&lt;p>본 가이드의 사용자는 기본 도커(Docker)에 대한 기본적인 지식 있는다는 것을 가정하였다.&lt;/p>
&lt;ul>
&lt;li>도커 관련 기본 내용은 도커사이트에서 



 









 



&lt;a href="https://www.docker.com/">https://www.docker.com&lt;/a>


 확인 가능하다.&lt;/li>
&lt;/ul>
&lt;h3 id="특징">특징&lt;/h3>
&lt;p>표준프레임워크 개발환경에 도커 이미지 제작을 통하여 아래와 같은 특징으로 적용 효과를 제시한다.&lt;/p>
&lt;ul>
&lt;li>호스트 OS 와 서비스 운영 환경 분리&lt;/li>
&lt;li>다양한 환경의 플랫폼 실행 가능&lt;/li>
&lt;li>컨테이너 호환성 및 경량화&lt;/li>
&lt;li>클라우스보다 진보된 Container 서비스&lt;/li>
&lt;li>마이크로 서비스 기반의 Container로 자원 효율성 향상&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/01-docker-deploy-archi2.png" alt="Docker 배포 아키텍처" >
&lt;/p></description></item><item><title>Docker Tooling</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/docker/docker-tooling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/docker/docker-tooling/</guid><description>&lt;h2 id="개요">개요&lt;/h2>
&lt;p>본 가이드는 이클립스 플러그인 Docker Tooling 사용 가이드를 제공한다.&lt;/p>
&lt;p>사용자는 기본 도커(Docker)에 대한 기본적인 지식 있는다는 것을 가정하였다.&lt;/p>
&lt;ul>
&lt;li>도커 관련 기본 내용은 도커사이트에서 



 









 



&lt;a href="https://www.docker.com/">https://www.docker.com&lt;/a>


 확인 가능하다.&lt;/li>
&lt;/ul>
&lt;h2 id="들어가기-전에">들어가기 전에&lt;/h2>
&lt;p>본 가이드의 환경은 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>WIndows 11 home&lt;/li>
&lt;li>표준프레임워크 개발자용 개발환경 4.2.0&lt;/li>
&lt;li>Windows Docker Desktop v4.26.0 (Docker Engine 24.0.7) - Eclipse Docker Tooling 5.9.0&lt;/li>
&lt;/ul>
&lt;p>✔ 표준프레임워크 개발자용 개발환경에는 Docker tooling이 이미 설치되어있어 별도의 설치가 필요 없다.&lt;/p>
&lt;h2 id="설치">설치&lt;/h2>
&lt;h3 id="1-docker-tooling-플러그인-설치">1. Docker Tooling 플러그인 설치&lt;/h3>
&lt;p>Eclipse에서 Help &amp;gt; Eclipse Marketplace 클릭&lt;/p></description></item><item><title>iBATIS Dynamic SQL 사용</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-dynamic-sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-dynamic-sql/</guid><description>&lt;h1 id="dynamic-sql">Dynamic SQL&lt;/h1>
&lt;p>일반적으로 JDBC API 를 사용한 코딩에서 한번 정의한 쿼리문을 최대한 재사용하고자 하나 단순 파라메터 변수의 값만 변경하는 것으로 해결하기 어렵고 다양한 조건에 따라 조금씩 다른 쿼리의 실행이 필요한 경우 많은 if~else 조건 분기의 연결이 필요한 문제가 있다. 여기에서는 SQL 문의 동적인 변경에 대한 상대적으로 유연한 방법을 제공하는 iBATIS 의 Dynamic 요소에 대해 알아본다.&lt;/p>
&lt;h2 id="기본-dynamic-요소-사용-방법">기본 Dynamic 요소 사용 방법&lt;/h2>
&lt;p>아래의 샘플 Dynamic 요소 사용예를 참고하라.&lt;/p>
&lt;h3 id="sample-dynamic-sql-mapping-xml">Sample Dynamic SQL mapping xml&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>	..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;typeAlias&lt;/span> &lt;span style="color:#a6e22e">alias=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobHistVO&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.dataaccess.vo.JobHistVO&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;select&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;selectJobHistListUsingDynamicElement&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parameterClass=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobHistVO&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">resultClass=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobHistVO&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">&amp;lt;![CDATA[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			select EMP_NO as empNo,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 START_DATE as startDate,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 END_DATE as endDate,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 JOB as job,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 SAL as sal,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 COMM as comm,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 DEPT_NO as deptNo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			from JOBHIST
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">		]]&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;dynamic&lt;/span> &lt;span style="color:#a6e22e">prepend=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;where&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;isNotNull&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;empNo&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">prepend=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;and&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				EMP_NO = #empNo#
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/isNotNull&amp;gt;&lt;/span>		
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/dynamic&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			order by EMP_NO, START_DATE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위 sql 매핑 파일에서 파라메터 객체의 empNo 속성의 값 유무에 따라 where EMP_NO = #empNo# 조건절이 동적으로 추가/제거 될 수 있는 예이다. 위에서 dynamic 의 prepend 속성으로 “where” 를 지정하고 있지만 하위 요소의 조건이 하나라도 만족하지 않으면 sql 문에 추가되지 않는다. 또한 위의 예에서는 하위 요소로 isNotNull 태그에 prepend=“and” 가 지정되어 있지만 처음 true 가 되는 조건의 prepend 는 parent 인 dynamic 의 prepend 인 “where” 로 덮어써져 최종적으로는 where EMP_NO = #empNo# 가 됨에 유의한다.&lt;/p></description></item><item><title>Mapper Dynamic SQL</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-mybatis-dynamic-sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-mybatis-dynamic-sql/</guid><description>&lt;h1 id="dynamic-sql">Dynamic SQL&lt;/h1>
&lt;p>일반적으로 JDBC API를 사용한 코딩에서 다양한 조건에 따라 다양한 형태의 쿼리의 실행이 필요한 경우가 존재하며 이에 MyBatis는 강력한 동적 SQL 언어를 제공한다.&lt;/p>
&lt;p>MyBatis는 SQL 문의 동적인 변경에 대해 iBatis보다 상대적으로 유연하다.&lt;br>
iBatis도 다양한 Dynamic 요소를 제공하였으나 이해해야 하는 요소들이 많았다.&lt;/p>
&lt;p>MyBatis에서 제공하는 동적 SQL 요소들은 JSTL이나 XML 기반의 텍스트 프로세서와 유사한 형태로 제공되며 OGNL 기반의 표현식을 제공함으로써 보다 유연하고 편리하게 Dynamic 요소를 사용할 수 있다.&lt;/p>
&lt;h2 id="기본-dynamic-요소-사용-방법">기본 Dynamic 요소 사용 방법&lt;/h2>
&lt;h3 id="sample-dynamic-sql-mapper-xml">Sample Dynamic SQL mapper xml&lt;/h3>
&lt;p>MyBatis에서 제공하는 Dynamic 요소의 기본적인 형태에 대해 알아보도록 한다.&lt;br>
아래 Sql 매퍼 파일은 파라미터 객체의 empNo 속성의 값 유무에 따라 &lt;code>where EMP_NO = #{empNo}&lt;/code> 조건절을 동적으로 추가/제거할 수 있는 예이다.&lt;/p></description></item><item><title>easycompany 예제 실행하기</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/presentation-layer/easycompany-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/presentation-layer/easycompany-example/</guid><description>&lt;h1 id="easycompany-예제-실행하기">easycompany 예제 실행하기&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>EasyCompany 예제는 MVC와 Ajax Support, Security의 예제 코드로서, JDK 1.8, Eclipse 4.8.0, Tomcat 8.0, HSQLDB 2.3.2 환경에서 실행된다. 사원 리스트 페이지 확인은 SVN에서 프로젝트를 다운받아 DBMS(runHsqlDB.cmd)와 Tomcat을 실행 후 http://localhost:8080/easycompany 에 접속해 id/pwd: 1/1로 로그인하면 가능하다.&lt;/p>
&lt;h2 id="개발환경">개발환경&lt;/h2>
&lt;ul>
&lt;li>JDK : JDK 1.8&lt;/li>
&lt;li>Eclipse : 4.8.0&lt;/li>
&lt;li>Web Container : Tomcat 8.0&lt;/li>
&lt;li>DBMS : HSQLDB 2.3.2&lt;/li>
&lt;/ul>
&lt;h2 id="설치">설치&lt;/h2>
&lt;ol>
&lt;li>SVN에서 예제 코드 easycompany 프로젝트를 다운 받습니다.&lt;br>
이클립스에서 해당 프로젝트를 보면 아래와 같은 구조를 가지고 있습니다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/presentation-layer/images/projectexplore.jpg" alt="projectexplore" >
&lt;/p></description></item><item><title>Editor</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/</guid><description/></item><item><title>배치 템플릿을 이용한 EgovCommandLineRunner 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-core-egov_commandline_runner_template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-core-egov_commandline_runner_template/</guid><description>&lt;h1 id="배치-템플릿을-이용한-egovcommandlinerunner-예제">배치 템플릿을 이용한 EgovCommandLineRunner 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>CommandLine 배치 템플릿 프로젝트를 이용하여 EgovCommandLineRunner의 사용법을 보여주는 예제이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="commandline-배치-템플릿-프로젝트-생성">CommandLine 배치 템플릿 프로젝트 생성&lt;/h4>
&lt;p>&lt;strong>아래를 참고하여 File(SAM) / DB 타입의 CommandLine 배치 템플릿 프로젝트 를 생성한다.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>



 









 



&lt;a href="https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:dev2:bdev:imp:batch_template_wizard:sam_commandline_template_mgmt">File(SAM)타입&lt;/a>


&lt;/li>
&lt;li>



 









 
 
 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/batch-layer/batch-core-egov_commandline_runner_templatehttps://www.egovframe.go.kr/wiki/doku.php?id=egovframework:dev2:bdev:imp:batch_template_wizard:db_commandline_template_mgmt">DB타입&lt;/a>


&lt;/li>
&lt;/ol>
&lt;h4 id="commandline-배치-템플릿-전체-설정">CommandLine 배치 템플릿 전체 설정&lt;/h4>
&lt;p>&lt;strong>CommandLine 배치 템플릿 설정 파일인 context-commandline.xml을 확인한다.&lt;/strong>&lt;/p>
&lt;p>✔ CommandLine 배치 템플릿 실행에 필요한 xml 정보가 기술되어 있다.&lt;br>
✔ Job 관련 xml의 경우 특정 폴더 밑에 Job당 하나의 xml 파일로 나누어져 있다.&lt;/p></description></item><item><title>egovframework-dev-tst 프로젝트 소스 코드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/egovframework-dev-tst-source/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/egovframework-dev-tst-source/</guid><description>&lt;h2 id="egovframework-dev-tst-프로젝트-소스-코드">egovframework-dev-tst 프로젝트 소스 코드&lt;/h2>
&lt;p>egovframework-dev-tst 프로젝트는 JUnit Test XML 파일을 파싱하고, 템플릿 엑셀 파일을 읽어 들여, 해당값을 매핑한 후 엑셀 형식 리포트로 생성하는 주요 작업을 구성하는 라이브러리이다. 여기에서는 소스 코드에 대한 설명을 하도록 하고, 자세한 내용은 API 문서나 소스를 직접 참조하기 바란다.&lt;/p>
&lt;h3 id="junit-test-xml-파일-예">JUnit Test XML 파일 예&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;testsuite&lt;/span> &lt;span style="color:#a6e22e">errors=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">skipped=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">tests=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;6&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">time=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3.359&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">failures=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.dev.tst.report.junit.JUnitExcelReportGeneratorTest&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Sun Microsystems Inc.&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;java.vendor&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;C:\Documents and Settings\juroh\.m2\repository&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;localRepository&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> . . . . 중략 . . . .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;testcase&lt;/span> &lt;span style="color:#a6e22e">classname=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.dev.tst.report.junit.JUnitExcelReportGeneratorTest&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">time=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.594&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;testNonXmlReportFileListException&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;testcase&lt;/span> &lt;span style="color:#a6e22e">classname=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.dev.tst.report.junit.JUnitExcelReportGeneratorTest&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">time=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;testNotExistXmlReportFileListException&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;testcase&lt;/span> &lt;span style="color:#a6e22e">classname=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.dev.tst.report.junit.JUnitExcelReportGeneratorTest&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">time=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;testNonOutputDirException&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;testcase&lt;/span> &lt;span style="color:#a6e22e">classname=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.dev.tst.report.junit.JUnitExcelReportGeneratorTest&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">time=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;testNotExistOutputDirException&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;testcase&lt;/span> &lt;span style="color:#a6e22e">classname=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.dev.tst.report.junit.JUnitExcelReportGeneratorTest&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">time=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0.016&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;testGenerateExcelDefault&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;skipped/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/testcase&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;testcase&lt;/span> &lt;span style="color:#a6e22e">classname=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.dev.tst.report.junit.JUnitExcelReportGeneratorTest&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">time=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2.609&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;testGenerateExcelFile&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/testsuite&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="report-vo-클래스">Report VO 클래스&lt;/h3>
&lt;ul>
&lt;li>&lt;code>ReportTestCase&lt;/code>는 위 XML에서 &lt;code>&amp;lt;testcase&amp;gt;&lt;/code> 태그 정보를 하나씩 담는다.&lt;/li>
&lt;li>&lt;code>ReportTestSuite&lt;/code>는 위 XML에서 &lt;code>&amp;lt;testsuite&amp;gt;&lt;/code> 태그의 요약 정보를 담는다.&lt;/li>
&lt;/ul>
&lt;h3 id="testsuitexmlparser">TestSuiteXmlParser&lt;/h3>
&lt;p>JUnit Test XML 파일을 파싱하는 &lt;code>&amp;lt;strong&amp;gt;TestSuiteXmlParser&amp;lt;/strong&amp;gt;&lt;/code> 클래스에 대해 알아보자.&lt;/p></description></item><item><title>egovframework-dev-tst-ant 프로젝트 소스 코드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/egovframework-dev-tst-ant-source/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/egovframework-dev-tst-ant-source/</guid><description>&lt;h2 id="egovframework-dev-tst-ant-프로젝트-소스-코드">egovframework-dev-tst-ant 프로젝트 소스 코드&lt;/h2>
&lt;p>egovframework-dev-tst-ant에는 Custom Ant Task 클래스를 포함한다.&lt;/p>
&lt;h3 id="buildxml">build.xml&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;project&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">...&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;path&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egov.lib&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;path&lt;/span> &lt;span style="color:#a6e22e">refid=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;master-classpath&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;path&lt;/span> &lt;span style="color:#a6e22e">location=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${antlib.dir}/egovtest/egovframework-dev-tst-ant.jar&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/path&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;taskdef&lt;/span> &lt;span style="color:#a6e22e">resource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovtest.properties&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">classpathref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egov.lib&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovtest junit tasks:&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- JUnit Excel Report --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;target&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovtest&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">depends=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tests&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;egov-junitreport&lt;/span> &lt;span style="color:#a6e22e">todir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testxls.dir}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;fileset&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testreports.dir}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">includes=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;**/TEST-*.xml&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/egov-junitreport&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/target&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;target&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovtest-full&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">depends=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tests&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;egov-junitreport&lt;/span> &lt;span style="color:#a6e22e">todir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testxls.dir}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">outputname=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovtest-junit-full.xls&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">templatepath=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${basedir}/build/template-kr.xls&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">summary=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0,B,6&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">packages=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0,B,11&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">lists=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1,A,5&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;fileset&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testreports.dir}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">includes=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;**/TEST-*.xml&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/egov-junitreport&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/target&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;target&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;build-report-junit-excel&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">depends=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clean, egovtest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clean, egovtest&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;target&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;build-report-junit-excel-full&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">depends=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clean, egovtest-full&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;clean, egovtest-full&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/project&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="egovjunitexcelreporttask">EgovJUnitExcelReportTask&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EgovJUnitExcelReportTask&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Task {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/** Excel 파일이 작성될 디렉토리 위치 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String todir;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/** Excel 파일이 작성될 디렉토리 위치 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File outputDirectory;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/** Excel 리포트 파일명 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String outputname;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/** Excel 리포트의 템플릿 리포트 파일의 Full Path */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String templatepath;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/** Excel 리포트의 템플릿 리포트 파일의 Full Path */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File templateFile;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/** Template Excel 파일의 Summary Header 위치 정보 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String summary;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/** Template Excel 파일의 Package Header 위치 정보 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String packages;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/** Template Excel 파일의 TestCase Lists Header 위치 정보 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String lists;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setTodir&lt;/span>(String todir) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">todir&lt;/span> &lt;span style="color:#f92672">=&lt;/span> todir;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setOutputname&lt;/span>(String outputname) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">outputname&lt;/span> &lt;span style="color:#f92672">=&lt;/span> outputname;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setTemplatepath&lt;/span>(String templatepath) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (templatepath &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> templatepath.&lt;span style="color:#a6e22e">length&lt;/span>() &lt;span style="color:#f92672">&amp;gt;&lt;/span> 0) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">templatepath&lt;/span> &lt;span style="color:#f92672">=&lt;/span> templatepath;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setSummary&lt;/span>(String summary) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">summary&lt;/span> &lt;span style="color:#f92672">=&lt;/span> summary;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setPackages&lt;/span>(String packages) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">packages&lt;/span> &lt;span style="color:#f92672">=&lt;/span> packages;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> . . .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List filesets &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArrayList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">addFileset&lt;/span>(FileSet fileset) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filesets.&lt;span style="color:#a6e22e">add&lt;/span>(fileset);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>배치 템플릿을 이용한 EgovSchedulerRunner 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-core-egov_scheduler_runner_template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-core-egov_scheduler_runner_template/</guid><description>&lt;h1 id="배치-템플릿을-이용한-egovschedulerrunner-예제">배치 템플릿을 이용한 EgovSchedulerRunner 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Scheduler 기반의 배치 템플릿 프로젝트를 이용하여 EgovSchedulerRunner의 사용법을 보여주는 예제이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="scheduler-배치-템플릿-프로젝트-생성">Scheduler 배치 템플릿 프로젝트 생성&lt;/h4>
&lt;p>&lt;strong>아래를 참고하여 File(SAM) / DB 타입의 Scheduler 배치 템플릿 프로젝트 를 생성한다.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>



 









 



&lt;a href="https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:dev2:bdev:imp:batch_template_wizard:sam_scheduler_template_mgmt">File(SAM)타입&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:dev2:bdev:imp:batch_template_wizard:db_scheduler_template_mgmt">DB타입&lt;/a>


&lt;/li>
&lt;/ol>
&lt;h4 id="scheduler-배치-템플릿-전체-설정">Scheduler 배치 템플릿 전체 설정&lt;/h4>
&lt;p>&lt;strong>Scheduler 배치 템플릿 설정 파일인 context-scheduler.xml을 확인한다.&lt;/strong>&lt;/p>
&lt;p>✔ Scheduler 배치 템플릿 실행에 필요한 xml 정보와 Scheduler의 Trigger 정보가 기술되어 있다.&lt;br>
✔ Trigger에 jobDetail(JobDetailBean)과 cronExpression를 설정한다. 기본적으로 매 10초 주기로 jobDetail을 실행하도록 설정되어 있다.&lt;br>
✔ 다른 Trigger의 사용방법을 알기 위해서는 



 









 



&lt;a href="../foundation-layer/scheduling-service.md">Scheduling 서비스&lt;/a>


 를 참고한다.&lt;/p></description></item><item><title>EhCache</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache/ehCache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/cache/ehCache/</guid><description>&lt;h1 id="ehcache">EhCache&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 프레임워크에서 Cache Service는 



 









 



&lt;a href="http://ehcache.sourceforge.net/">EhCache&lt;/a>


를 선정하여 가이드한다.&lt;/p>
&lt;p>Spring 버전 3.1 이전에서는 EhCache에서 제공하는 CacheManager를 직접 사용한다. 3.1 이후 버전에서는 CacheManager Abstraction을 제공함으로써 Cache를 유연하게 사용할 수 있게 되었다. 아래에서는 EhCache의 설명과 Spring 3.1이전의 EhCache 사용법에 대하여 알아본다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>EhCache를 이용하기 위한 기본 설정 및 기본 사용법에 대해서 설명한다.&lt;/p>
&lt;h3 id="bootstrap-source">Bootstrap Source&lt;/h3>
&lt;p>Cache를 사용하기 위해서 Cache Manager를 생성하는 방법을 샘플을 통해서 설명한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//클래스 패스를 이용하여 설정파일 읽어서 Cache Manager 생성하기.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>URL url &lt;span style="color:#f92672">=&lt;/span> getClass().&lt;span style="color:#a6e22e">getResource&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/ehcache-default.xml&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>manager &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CacheManager(url);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위에서 getResource를 통해서 읽어들이는 /ehcache-default.xml 의 파일 내용은 다음과 같다.&lt;/p></description></item><item><title>EMMA 실행을 위한 build.xml 설정 샘플</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/build-example-for-run-emma/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/build-example-for-run-emma/</guid><description>&lt;h2 id="emma-실행을-위한-buildxml-설정-샘플">EMMA 실행을 위한 build.xml 설정 샘플&lt;/h2>
&lt;p>다음은 EMMA를 이용하여 Test Coverage를 수행하기 위한 build.xml 설정 샘플이다.
EMMA를 수행하기 위해서는 Test 수행을 위한 설정(junit)을 반드시 같이 써야 한다.&lt;/p>
&lt;p>✔ 자세한 내용은 



 


 








 



&lt;a href="http://emma.sourceforge.net/userguide_single/userguide.html#introANT">EMMA 사이트&lt;/a>


와 함께 



 









 



&lt;a href="http://wiki.metawerx.net/wiki/UsingEMMAWithANTForJUnitTestCoverageReporting">Using EMMA With ANT For JUnit Test Coverage Reporting&lt;/a>


을 참조하기 바란다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;artifactsDir&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${basedir}/build/report&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 1. EMMA Task 라이브러리 설정 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;emma.enabled&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;path&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;emma.lib&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;define the basic classpath for emma instrumentation&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;fileset&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${antlib.dir}/emma&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;include&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;*.jar&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/fileset&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/path&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;taskdef&lt;/span> &lt;span style="color:#a6e22e">resource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;emma_ant.properties&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">classpathref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;emma.lib&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;this loads &amp;lt;emma&amp;gt; and &amp;lt;emmajava&amp;gt; custom tasks:&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 2. EMMA Instrument --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;target&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;emma-jars&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">depends=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;build&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Uses Emma to instrument the jar files&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;emma&lt;/span> &lt;span style="color:#a6e22e">enabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${emma.enabled}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;instr&lt;/span> &lt;span style="color:#a6e22e">mode=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fullcopy&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">outdir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${basedir}/build/temp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">merge=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;yes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">filter=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.dev.tst.*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">metadatafile=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${artifactsDir}/test-coverage/coverage.em&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;instrpath&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;fileset&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;build/&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">includes=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${ant.project.name}.jar&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/instrpath&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/instr&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/emma&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/target&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;target&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test.with.emma&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">depends=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;emma-jars&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;delete&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testbuild.dir}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;mkdir&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testbuild.dir}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;javac&lt;/span> &lt;span style="color:#a6e22e">srcdir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testsrc.dir}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">destdir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testbuild.dir}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">debug=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">encoding=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">deprecation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;classpath&lt;/span> &lt;span style="color:#a6e22e">path=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${build.dir}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;classpath&lt;/span> &lt;span style="color:#a6e22e">refid=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;master-classpath&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;classpath&lt;/span> &lt;span style="color:#a6e22e">refid=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test-classpath&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/javac&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;copy&lt;/span> &lt;span style="color:#a6e22e">todir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testbuild.dir}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">preservelastmodified=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;fileset&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${build.dir}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">includes=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;**/*&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;fileset&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testresource.dir}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">includes=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;**/*&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/copy&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;mkdir&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${artifactsDir}/test-results/xml&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;junit&lt;/span> &lt;span style="color:#a6e22e">fork=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;yes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printsummary=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;yes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">haltonfailure=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;no&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">failureproperty=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test.failed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">errorproperty=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test.failed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${basedir}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;classpath&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;path&lt;/span> &lt;span style="color:#a6e22e">refid=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;master-classpath&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;path&lt;/span> &lt;span style="color:#a6e22e">refid=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test-classpath&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;path&lt;/span> &lt;span style="color:#a6e22e">refid=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;emma.lib&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;fileset&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${basedir}/build/temp/lib&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">includes=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${ant.project.name}.jar&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;pathelement&lt;/span> &lt;span style="color:#a6e22e">location=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testbuild.dir}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/classpath&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;formatter&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;xml&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;batchtest&lt;/span> &lt;span style="color:#a6e22e">fork=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;yes&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">todir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${artifactsDir}/test-results/xml&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;fileset&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${testbuild.dir}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;include&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;**/*Test.class&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/fileset&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/batchtest&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/junit&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/target&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 3. EMMA Test Coverage Reporting --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- Test Code Coverage Report --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;target&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;emmareport&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">depends=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test.with.emma&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;move&lt;/span> &lt;span style="color:#a6e22e">file=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${basedir}/coverage.ec&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">todir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${artifactsDir}/test-coverage&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;emma&lt;/span> &lt;span style="color:#a6e22e">description=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;now we can generate the emma report&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">enabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${emma.enabled}&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;report&lt;/span> &lt;span style="color:#a6e22e">sourcepath=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${src.dir}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sort=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;+name,+method,+class&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">metrics=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;method:70,line:80,class:100&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">depth=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;method&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">columns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name,class,method,block,line&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">encoding=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;infileset&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${artifactsDir}/test-coverage&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">includes=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;*.em, *.ec&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- XML Report --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;xml&lt;/span> &lt;span style="color:#a6e22e">outfile=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${artifactsDir}/test-coverage/coverage.xml&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- Text Report --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;txt&lt;/span> &lt;span style="color:#a6e22e">outfile=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${artifactsDir}/test-coverage/coverage.txt&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- HTML Report --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;html&lt;/span> &lt;span style="color:#a6e22e">outfile=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${artifactsDir}/test-coverage/coverage.html&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/report&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/emma&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/target&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>EMMA 실행을 위한 pom.xml 설정 샘플</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/pom-example-for-run-emma/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/pom-example-for-run-emma/</guid><description>&lt;h2 id="emma-실행을-위한-pomxml-설정-샘플">EMMA 실행을 위한 pom.xml 설정 샘플&lt;/h2>
&lt;p>다음은 EMMA를 이용하여 Test Coverage를 수행하기 위한 pom.xml 설정 샘플이다.
EMMA를 수행하기 위해서는 Test 수행을 위한 설정(maven-surefire-plugin)을 반드시 같이 써야 한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;build&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugins&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- test --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.maven.plugins&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>maven-surefire-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;skipTests&amp;gt;&lt;/span>false&lt;span style="color:#f92672">&amp;lt;/skipTests&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;forkMode&amp;gt;&lt;/span>always&lt;span style="color:#f92672">&amp;lt;/forkMode&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;reportFormat&amp;gt;&lt;/span>xml&lt;span style="color:#f92672">&amp;lt;/reportFormat&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- EMMA --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.codehaus.mojo&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>emma-maven-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.0-alpha-1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugins&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/build&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;reporting&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugins&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- EMMA Coverage Reporting --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.codehaus.mojo&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>emma-maven-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;inherited&amp;gt;&lt;/span>true&lt;span style="color:#f92672">&amp;lt;/inherited&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugins&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/reporting&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>EMMA에서 생성한 HTML 리포트 샘플</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/emma-test-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/emma-test-report/</guid><description>&lt;h3 id="emma에서-생성한-html-리포트-샘플">EMMA에서 생성한 HTML 리포트 샘플&lt;/h3>
&lt;p>EMMA 리포트에서는 다음의 정보를 제공한다.&lt;/p>
&lt;h4 id="통계치-그룹">통계치 그룹&lt;/h4>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>OVERALL COVERAGE SUMMARY&lt;/th>
 &lt;th>전체 클래스에 대한 통계치&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>OVERALL STATS SUMMARY&lt;/td>
 &lt;td>전반적인 요약 통계치&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>COVERAGE BREAKDOWN BY PACKAGE&lt;/td>
 &lt;td>패키지별 커버리지 통계치&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>COVERAGE BREAKDOWN BY SOURCE FILE&lt;/td>
 &lt;td>소스 파일별 커버리지 통계치&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>COVERAGE BREAKDOWN BY CLASS AND METHOD&lt;/td>
 &lt;td>클래스와 메소드별 커버리지 통계치 &lt;br> 여기에서 소스코드와의 연결 정보를 보여준다.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h4 id="통계치-항목">통계치 항목&lt;/h4>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>name&lt;/th>
 &lt;th>이름&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>class, %&lt;/td>
 &lt;td>클래스별 커버리지 백분율&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>method, %&lt;/td>
 &lt;td>메소드별 커버리지 백분율&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>block, %&lt;/td>
 &lt;td>basic block(커버리지 기본단위) 별 커버리지 백분율&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>line, %&lt;/td>
 &lt;td>코드 라인별 커버리지 백분율&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h4 id="리포트-샘플-화면">리포트 샘플 화면&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>EMMA 사이트에서 제공하는 샘플 리포트 : 



 









 



&lt;a href="http://emma.sourceforge.net/coverage_sample_a/index.html">http://emma.sourceforge.net/coverage_sample_a/index.html&lt;/a>


&lt;/p></description></item><item><title>Entities</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-entities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-entities/</guid><description>&lt;h1 id="entities">Entities&lt;/h1>
&lt;p>ORM 서비스를 구성하는 가장 기초적인 클래스로 어플리케이션에서 다루고자 하는 테이블에 대응하여 구성할 수 있으며 테이블이 포함하는 컬럼에 대응한 속성들을 가지고 있다.&lt;/p>
&lt;h2 id="기본-필요-요건">기본 필요 요건&lt;/h2>
&lt;p>Entity를 구성하기 위한 아래와 같은 요건이 있다.(JPA요건)&lt;/p>
&lt;h3 id="필수-entity-annotation-선언-필요--혹은-xml-설정파일에-정의-">[필수] Entity annotation 선언 필요 ( 혹은 XML 설정파일에 정의 )&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Entity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">User&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="필수-argument-없는-생성자-필요">[필수] Argument 없는 생성자 필요&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">User&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="필수-최상위레벨-클래스로-생성되어야-하고-enuminterface로-정의될-수-없음">[필수] 최상위레벨 클래스로 생성되어야 하고 enum,interface로 정의될 수 없음&lt;/h3>
&lt;h3 id="필수-final-클래스로-선언될-수-없음">[필수] final 클래스로 선언될 수 없음&lt;/h3>
&lt;h3 id="필수-primary-key-있어야-함--id라는-annotation-표기">[필수] Primary Key 있어야 함 : @Id라는 Annotation 표기&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> String userId;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="권장-serializable-인터페이스-구현">[권장] Serializable 인터페이스 구현&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">User&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Serializable {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> serialVersionUID &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>8077677670915867738L;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="권장-속성-정보-접근을-위한-getter-setter-정의">[권장] 속성 정보 접근을 위한 getter, setter 정의&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> String userName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getUserName&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> userName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setUserName&lt;/span>(String userName) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">userName&lt;/span> &lt;span style="color:#f92672">=&lt;/span> userName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="주요-annotations">주요 Annotations&lt;/h2>
&lt;p>Entity를 구성하는 주요한 Annotation은 다음과 같다.&lt;/p></description></item><item><title>Entity Operation</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-entity_operation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-entity_operation/</guid><description>&lt;h1 id="entity-operation">Entity Operation&lt;/h1>
&lt;p>ORM서비스를 이용하여 특정 DB에 데이터를 입력, 수정, 조회, 삭제, 배치입력하는 방법에 대해 알아보도록 한다.&lt;/p>
&lt;h2 id="입력">입력&lt;/h2>
&lt;p>EntityManager의 persist()메소드를 호출하여 DB에 단건의 데이터를 추가할 수 있다. persist() 메소드 호출시 대상이 되는 Entity를 입력 인자로 전달해야 한다.&lt;/p>
&lt;h3 id="sample-source">Sample Source&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> Department &lt;span style="color:#a6e22e">addDepartment&lt;/span>() &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 1. insert a new Department information&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Department department &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Department();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String DepartmentId &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;DEPT-0001&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> department.&lt;span style="color:#a6e22e">setDeptId&lt;/span>(DepartmentId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> department.&lt;span style="color:#a6e22e">setDeptName&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SaleDept&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> department.&lt;span style="color:#a6e22e">setDesc&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;판매부서&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> em.&lt;span style="color:#a6e22e">persist&lt;/span>(department);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> department;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위의 예를 보면 EntityManager의 persist() 메소드에 department라는 Entity를 입력인자로 전달하여 처리하였다.&lt;/p></description></item><item><title>Environment</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/environment/</guid><description>&lt;h1 id="environment">Environment&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>표준프레임워크 3.0부터는 (Spring 3.1부터) Environment interface를 제공한다.&lt;/p>
&lt;p>Environment는 다음 기능의 접근을 제공한다.&lt;/p>
&lt;ul>
&lt;li>Profile&lt;/li>
&lt;li>Property&lt;/li>
&lt;/ul>
&lt;p>Environment는 ApplicationContext를 통해서 접근이 가능하며 다음과 같이 가져올 수 있다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>ApplicationContext ctx &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> GenericApplicationContext();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Environment env &lt;span style="color:#f92672">=&lt;/span> ctx.&lt;span style="color:#a6e22e">getEnvironment&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="profile-접근">Profile 접근&lt;/h3>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean-definition-profiles/">Profile에 대한 자세한 설명&lt;/a>


&lt;/li>
&lt;/ul>
&lt;p>Profile은 등록할 bean들이 정의되어있는 논리적인 그룹을 말한다. Bean은 XML또는 Annotation을 통해 정의된 Profile값 중 활성화된 Profile로 할당된다.
이 때 현재 사용하는 Profile을 활성화하는 것이 바로 Environment의 역할이다. 또한 Profile은 default값으로 설정이 되어있어야 한다.&lt;/p></description></item><item><title>Environment Abstraction</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-enviroment_abstraction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-enviroment_abstraction/</guid><description>&lt;h1 id="environment-abstraction">Environment Abstraction&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Environment Abstraction은 환경에 대한 추상화로 Spring에서 제공하는 Environment 인터페이스를 이용한다.&lt;br>
Environment 인터페이스는 애플리케이션 환경의 두 가지 주요 측면을 모델링하는 컨테이너에 통합된 추상화로, profiles 나 properties처럼 프로그램의 환경 변수나 Application의 프로필을 관리할 때 사용하게 된다.&lt;/p>
&lt;p>Profile은 지정된 프로파일이 활성화된 경우에만 컨테이너에 등록되는 명명된 빈 정의의 논리적 그룹이다.&lt;br>
Bean은 XML 또는 주석으로 정의된 프로필에 할당될 수 있다. 프로필과 관련된 환경 개체의 역할은 현재 활성화된 Profile(있는 경우)과 기본적으로 활성화되어야 하는 Profile(있는 경우)을 결정하는 것이다.&lt;/p></description></item><item><title>이벤트알림 템플릿(Template) 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-event_notice_template_mgmt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-event_notice_template_mgmt/</guid><description>&lt;h1 id="이벤트알림-템플릿template-예제">이벤트알림 템플릿(Template) 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크의 배치 수행중 특정시점에 이벤트가 발생하는 경우 EventNoticeTrigger를 활용하여 SMS, Email 등을 통해 사용자가 설정한 관련정보를 발신하는 과정을 보여주는 예제이다. EgovEventNoticeTriggerFunctionalTests 예제는 일반 파일을 처리하는 과정에서 특정시점(Step 수행 시)에 배치수행과 관련한 내용을 Email로 보내주는 과정을 보여주는 과정을 보여준다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>이벤트알림 템플릿(Template) 예제의 Job 설정 파일인 eventNoticeTriggerJob.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>Job 의 구성을 보면 기본적인 &lt;tasklet> 설정 외에 &lt;listener> 를 통해 EgovEventNoticeCallListener를 호출하도록 설정되어 있고, 관련 클래스인 EgovEventNoticeCallProcessor와 EgovEmailEventNoticeTrigger는 빈으로 등록되어 있다.&lt;/p></description></item><item><title>이벤트알림 템플릿 관리</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-event_notice_template_mgmt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-event_notice_template_mgmt/</guid><description>&lt;h1 id="이벤트알림-템플릿-관리">이벤트알림 템플릿 관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크의 배치 수행중 특정시점에 이벤트가 발생하는 경우 EventNoticeTrigger 인터페이스를 활용하여 SMS, Email 등을 통해 정보를 전달할 수 있는 추상화된 외부알림 access 관리기능이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="eventnoticetrigger">EventNoticeTrigger&lt;/h3>
&lt;p>EventNoticeTrigger 는 이벤트 알림 기능을 사용하도록 추상화된 인터페이스이다.&lt;/p>
&lt;p>메소드는 트리거를 호출하는 invoke 메소드를 파라메터 타입별로 구성하였고, 모든 메소드의 리턴타입은 void 이다.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>메소드&lt;/th>
 &lt;th>파라메터&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>invoke()&lt;/td>
 &lt;td>없음&lt;/td>
 &lt;td>파라메터 없이 이벤트호출 ‌로직 구현&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>invoke(StepExecution)&lt;/td>
 &lt;td>StepExecution&lt;/td>
 &lt;td>파라메터인 StepExecution 정보를 활용하는 로직 구현&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>invoke(JobExecution)&lt;/td>
 &lt;td>JobExecution&lt;/td>
 &lt;td>파라메터인 JobExecution 정보를 활용하는 로직 구현&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>invoke(Exception)&lt;/td>
 &lt;td>Exception&lt;/td>
 &lt;td>파라메터인 Execption 정보를 활용하는 로직 구현&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="egoveventnoticetrigger">EgovEventNoticeTrigger&lt;/h3>
&lt;p>EgovEventNoticeTrigger 클래스는 EventNoticeTrigger 인터페이스를 상속받은 형태로, 파라메터 타입별로 이벤트 알림 기능(Email전송, SMS전송)을 호출하기 위한 invoke 메소드를 갖고 있다. 모든 메소드의 리턴타입은 void로 로직수행 후 반환해야 하는 값이 없고, 이는 배치 고유의 수행과정과 별도로 동작하는 부분이다.&lt;/p></description></item><item><title>동기/비동기 처리 예제</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-example-sync_async_v3.7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-example-sync_async_v3.7/</guid><description>&lt;h1 id="동기비동기-처리-예제">동기/비동기 처리 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>일괄(배치)처리 작업 수행 시, 작업처리가 종료될 때까지 대기하는 동기방식 처리와 작업처리의 종료를 Callback매커니즘을 이용하여 전달받는 비동기처리에 대한 예제를 보여준다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="launcher-설정">Launcher 설정&lt;/h4>
&lt;h5 id="동기비동기-처리-예제의-launcher-설정파일인-skipsample-job-launcher-contextxml-을-확인한다">동기/비동기 처리 예제의 Launcher 설정파일인 skipSample-job-launcher-context.xml 을 확인한다.&lt;/h5>
&lt;p>Job 수행시, 동기와 비동기 방식으로 데이터를 처리할 수 있으며, 이 예제에서는 동기 처리가 기본값으로 설정되어 있다. 설정위치는 Launcher 설정파일의 jobLauncher 빈에서 taskExecutor 프로퍼티이며, 참조하는 값으로 다음 두 가지를 설정할 수 있다.&lt;/p>
&lt;ul>
&lt;li>sync : 동기처리시 사용할 클래스 설정&lt;/li>
&lt;li>async : 비동기처리시 사용할 클래스 설정&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobLauncher&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.core.launch.support.SimpleJobLauncher&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobRepository&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobRepository&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskExecutor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sync&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span> &lt;span style="color:#75715e">&amp;lt;!-- 비동기시 ref=&amp;#34;async&amp;#34; --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 동기 처리시 sync --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sync&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.core.task.SyncTaskExecutor&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 비동기 처리시 async --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;async&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.core.task.SimpleAsyncTaskExecutor&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;h5 id="동기비동기-처리-예제의-job-설정-파일인-delegatingjobxml을-확인한다">동기/비동기 처리 예제의 Job 설정 파일인 delegatingJob.xml을 확인한다.&lt;/h5>
&lt;p>동기/비동기 처리 예제를 위해 특별히 Job을 설정하는 내용은 없다. 이 예제에서 제공하는 Job의 상세 내용은 



 









 
 
 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/batch-example-sync_async_v3.7batch-example-job-reuse.md">기존 업무 재사용 예제&lt;/a>


의 Job 설정과 같으므로 이를 참고한다.&lt;/p></description></item><item><title>Excel Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/excel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/excel/</guid><description>&lt;h1 id="excel-service">Excel Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Excel 파일 포맷을 다룰 수 있는 자바 라이브러리를 제공하여, 사용자들이 데이터를 Excel 파일 포맷으로 다운받거나, 대량의 Excel 데이터를 시스템에 올릴 수 있도록 지원하기 위한 서비스이다.
Excel 서비스는 &lt;strong>Apache POI&lt;/strong> 오픈소스를 사용하여 구현하였으며 &lt;strong>주요 Excel 접근&lt;/strong> 기능 외에 &lt;strong>Excel 다운로드&lt;/strong>, &lt;strong>Excel 파일 업로드&lt;/strong> 등의 기능이 있다.
Excel 서비스 3.0 버전에서는 기존 버전을 refactoring 하였다.
기존의 메소드(xls, xlsx)를 지원하는 메소드들의 이름을 하나로 하여 Parameter 방식으로 구분자를 추가하였다.
또한, 기존의 iBatis 뿐만 아니라 MyBatis도 지원하는 클래스를 추가하였다.&lt;/p></description></item><item><title>Exception Handling 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/exception-handling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/exception-handling/</guid><description>&lt;h1 id="exception-handling-서비스">Exception Handling 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크 기반의 시스템 개발 시 Exception 처리, 정확히는 Exception별 특정 로직(후처리 로직이라고 부르기도 함)이 흐를 수 있도록 하여 Exception에 따른 적절한 대응이 가능하도록 하고자 하는데 목적이 있다.&lt;br/>
AOP의 도움을 받아 비즈니스 POJO와 분리되어 After throwing advice로 정의하였다.&lt;br/>
AOP 관련 내용은 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/aop/">AOP 모듈&lt;/a>


을 참조하길 바란다.&lt;/p>
&lt;p>Exception에 대해 이야기 하겠다.&lt;br/>
Exception 발생 시 Exception 발생 클래스 정보와 Exception 종류가 중요하다.&lt;br/>
Exception 발생 클래스 정보와 Exception 종류는 모두 후처리 로직의 대상일지 아닐지를 결정하는 데 사용된다.&lt;/p></description></item><item><title>Action 실행</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/swf-elements-executing-actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/swf-elements-executing-actions/</guid><description>&lt;h1 id="action-실행">Action 실행&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>action-state는 flow 내에서 action 실행을 제어하기 위한 요소이다.&lt;br>
decision-state를 이용하여 if-else와 같은 흐름 제어를 할 수 있다. 좀 더 자세히 알아보도록 하자.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="액션-상태-정의하기">액션 상태 정의하기&lt;/h3>
&lt;p>특정 액션을 호출한 다음에, 그 결과에 따라서 다른 상태로 전이하고 싶은 경우에는 action-state 구성 요소를 사용하자.&lt;br>
직관적으로 봤을 때 아래 코드는 interview.moreAnswersNeeded()의 결과값에 의해 transition이 실행될 것을 예상할 수 있다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;action-state&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;moreAnswersNeeded&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;evaluate&lt;/span> &lt;span style="color:#a6e22e">expression=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;interview.moreAnswersNeeded()&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;transition&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;yes&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">to=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;answerQuestions&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;transition&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;no&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">to=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;finish&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/action-state&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>좀더 완전한 예를 살펴보자.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;flow&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/webflow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/webflow
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;on-start&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;evaluate&lt;/span> &lt;span style="color:#a6e22e">expression=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;interviewFactory.createInterview()&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">result=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;flowScope.interview&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/on-start&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;view-state&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;answerQuestions&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">model=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;questionSet&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;on-entry&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;evaluate&lt;/span> &lt;span style="color:#a6e22e">expression=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;interview.getNextQuestionSet()&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#a6e22e">result=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;viewScope.questionSet&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/on-entry&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;transition&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;submitAnswers&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">to=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;moreAnswersNeeded&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;evaluate&lt;/span> &lt;span style="color:#a6e22e">expression=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;interview.recordAnswers(questionSet)&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/transition&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/view-state&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;action-state&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;moreAnswersNeeded&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;evaluate&lt;/span> &lt;span style="color:#a6e22e">expression=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;interview.moreAnswersNeeded()&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;transition&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;yes&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">to=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;answerQuestions&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;transition&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;no&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">to=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;finish&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/action-state&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;end-state&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;finish&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/flow&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="의사결정-상태decision-states-정의">의사결정 상태(decision states) 정의&lt;/h3>
&lt;p>action-state를 대신해서 편리하게 if/else 문법을 사용해서 이동하고자 하는 의사결정을 해주는 decision-state를 사용한다.&lt;br>
이전 예제를 의사결정 상태로 구현한 예를 보자.&lt;/p></description></item><item><title>Web Flow에서 Expression Language (EL) 사용</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/swf-elements-expression-language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/swf-elements-expression-language/</guid><description>&lt;h1 id="expression-language">Expression Language&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Web Flow는 데이터 모델 및 action 실행을 위해 EL을 이용한다. 우리는 EL에 대해 알아보면서 flow 정의를 해보도록 하겠다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="지원하는-el-구현체">지원하는 EL 구현체&lt;/h3>
&lt;h4 id="unified-el">Unified EL&lt;/h4>
&lt;p>기본으로는 Unified EL을 사용한다. jboss-el이 기본 구현체로 되어 있다.&lt;/p>
&lt;pre tabindex="0">&lt;code>참고 : web 컨테이너에서는 대게 el-api 를 지원해준다. 톰캣 6의 경우처럼 말이다.
&lt;/code>&lt;/pre>&lt;h4 id="ognl">OGNL&lt;/h4>
&lt;p>OGNL은 SWF2에서 제공하는 또 다른 EL이다. 클래스패스에만 추가하면 자동으로 찾아서 사용한다.&lt;/p>
&lt;h4 id="el-호환성">EL 호환성&lt;/h4>
&lt;p>Unified EL과 OGNL은 비슷한 문법을 가지고 있다. 가능하면 Unified EL만 사용하자.&lt;/p></description></item><item><title>Container Extension Points</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container_extension_points/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container_extension_points/</guid><description>&lt;h1 id="container-extension-points">Container extension points&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring Framework의 IoC 컴포넌트는 확장을 고려하여 설계되었다. 일반적으로 어플리케이션 개발자가 다양한 BeanFactory 또는 ApplicationContext 구현 클래스를 상속받을 필요는 없다.&lt;br>
Spring IoC Container는 특별한 통합 interface의 구현체를 삽입하여 확장할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="beanpostprocessors를-사용한-확장customizing-beans-using-beanpostprocessors">BeanPostProcessors를 사용한 확장(Customizing beans using BeanPostProcessors)&lt;/h3>
&lt;p>BeanPostProcessors interface는 다수의 callback 메소드를 정의하고 있는데, 어플리케이션 개발자는 이들 메소드를 구현함으로써 자신만의 객체화 로직(instantiation logic), 종속성 해결 로직(dependency-resolution logic) 등을 제공할 수 있다.&lt;br>
org.springframework.beans.factory.config.BeanPostProcessor interface는 두개의 callback 메소드로 구성되어 있다. 특정 class가 Container에 post-processor로 등록되면, post-processor는 Container에서 생성되는 각각의 bean 객체에 대해서, Container 객체화 메소드 전에 callback을 받는다.&lt;br>
중요한 것은 BeanFactory는 post-processor를 다루는 방식에 있어서 ApplicationContext와는 조금 다르다. ApplicationContext는 BeanPostProcessor interface를 구현한 bean을 &lt;em>&lt;strong>자동적으로 인식하고&lt;/strong>&lt;/em> post-processor로 등록한다. 하지만 BeanFactory 구현을 사용하면 post-processor는 다음과 같이 명시적으로 등록되어야 한다.&lt;/p></description></item><item><title>Fetch Strategy</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-fetch_strategy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-fetch_strategy/</guid><description>&lt;h1 id="fetch-strategy">Fetch Strategy&lt;/h1>
&lt;p>ORM 서비스는 기본적으로 Entity간의 연관관계를 정의하고 정의된 연관관계를 가지고 관련 Entity를 추출하여 사용한다. 관련 Entity를 추출하는데 기본적으로 Lazy Loading이란 기법을 통해서 객체가 실제로 필요하기 전까지 SQL을 실행하지 않고 Proxy 객체로 리턴하도록 하고 한다. 그러나 이러한 Lazy Loading으로 처리하게 되면 Lazy Loading을 하지 않는 것에 대비하여 필요시점에 쿼리를 여러번 수행해야 하는 문제가 발생한다. 이런 문제를 해결하기 위한 여러가지 Fetch 전략이 존재하는데 &lt;strong>Batch를 이용하여 데이터 조회, Sub-Query를 이용하여 데이터 조회, Join Fetch를 이용하여 데이터 한꺼번에 조회하는 방법&lt;/strong>이 있다. 하지만 이 서비스는 JPA표준이 아닌 구현체인 Hibernate에 정의된 사항이다.&lt;/p></description></item><item><title>File Download Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/file-download-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/file-download-service/</guid><description>&lt;h1 id="file-download-service">File Download Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>여기서 다운로드는 대개 큰 컴퓨터에서 작은 컴퓨터로 파일을 전송하는 것을 의미한다. 인터넷 사용자의 입장에서의 다운로드란 다른 컴퓨터에서 파일을 받는 것이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>EgovFrameWork에서는 파일 다운로드를 하기위한 DownloadController 클래스를 간단하게 구현하여 보았다.&lt;/p>
&lt;p>&lt;strong>DownloadController&lt;/strong> 클래스 예시&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Controller&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;downloadController&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">DownloadController&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">@Resource&lt;/span>(name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;fileUploadProperties&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Properties fileUploadProperties;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">@RequestMapping&lt;/span>(value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/download/downloadFile.do&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">downloadFile&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">@RequestParam&lt;/span>(value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;requestedFile&amp;#34;&lt;/span>) String requestedFile,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			HttpServletResponse response) &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		String uploadPath &lt;span style="color:#f92672">=&lt;/span> fileUploadProperties
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				.&lt;span style="color:#a6e22e">getProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;file.upload.path&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		File uFile &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> File(uploadPath, requestedFile);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> fSize &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span>) uFile.&lt;span style="color:#a6e22e">length&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span> (fSize &lt;span style="color:#f92672">&amp;gt;&lt;/span> 0) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			BufferedInputStream in &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BufferedInputStream(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#66d9ef">new&lt;/span> FileInputStream(uFile));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">// String mimetype = servletContext.getMimeType(requestedFile);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			String mimetype &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;text/html&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			response.&lt;span style="color:#a6e22e">setBufferSize&lt;/span>(fSize);d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			response.&lt;span style="color:#a6e22e">setContentType&lt;/span>(mimetype);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			response.&lt;span style="color:#a6e22e">setHeader&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Content-Disposition&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;attachment; filename=\&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">+&lt;/span> requestedFile &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			response.&lt;span style="color:#a6e22e">setContentLength&lt;/span>(fSize);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			FileCopyUtils.&lt;span style="color:#a6e22e">copy&lt;/span>(in, response.&lt;span style="color:#a6e22e">getOutputStream&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			in.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			response.&lt;span style="color:#a6e22e">getOutputStream&lt;/span>().&lt;span style="color:#a6e22e">flush&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			response.&lt;span style="color:#a6e22e">getOutputStream&lt;/span>().&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">//setContentType을 프로젝트 환경에 맞추어 변경&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			response.&lt;span style="color:#a6e22e">setContentType&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;application/x-msdownload&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			PrintWriter printwriter &lt;span style="color:#f92672">=&lt;/span> response.&lt;span style="color:#a6e22e">getWriter&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			printwriter.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;lt;html&amp;gt;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			printwriter.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;h2&amp;gt;Could not get file name:&amp;lt;br&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">+&lt;/span> requestedFile &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;/h2&amp;gt;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			printwriter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;center&amp;gt;&amp;lt;h3&amp;gt;&amp;lt;a href=&amp;#39;javascript: history.go(-1)&amp;#39;&amp;gt;Back&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;&amp;lt;/center&amp;gt;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			printwriter.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;amp;copy; webAccess&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			printwriter.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;lt;/html&amp;gt;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			printwriter.&lt;span style="color:#a6e22e">flush&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			printwriter.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>jsp 페이지로 간단하게 구현된 예시&lt;/p></description></item><item><title>File Handling</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-handling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-handling/</guid><description>&lt;h1 id="file-handling">File Handling&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>File Handling 서비스를 적용해서 Excel 다운로드 하기 위한 Excel 정보를 설정한다.&lt;/p>
&lt;p>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer/excel/">Excel&lt;/a>


 서비스에 적용되어 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="source">Source&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>FileObject writtenFile &lt;span style="color:#f92672">=&lt;/span> manager.&lt;span style="color:#a6e22e">resolveFile&lt;/span>(baseDir, &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">propertyPath&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FileContent writtenContents &lt;span style="color:#f92672">=&lt;/span> writtenFile.&lt;span style="color:#a6e22e">getContent&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>InputStream is &lt;span style="color:#f92672">=&lt;/span> writtenContents.&lt;span style="color:#a6e22e">getInputStream&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>BufferedReader reader &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BufferedReader(&lt;span style="color:#66d9ef">new&lt;/span> InputStreamReader(is));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>StringBuffer sb &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> StringBuffer();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (String line &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>; (line &lt;span style="color:#f92672">=&lt;/span> reader.&lt;span style="color:#a6e22e">readLine&lt;/span>()) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>; sb.&lt;span style="color:#a6e22e">append&lt;/span>(line));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>is.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>File Upload Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/file-upload-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/file-upload-service/</guid><description>&lt;h1 id="file-upload-service">File Upload Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>업로드는 한 컴퓨터 시스템에서 다른 시스템으로 파일을 전송하는 것을 말하는데, 대개 작은 컴퓨터에서 큰 컴퓨터로 옮길 때 이런 용어를 사용한다. 네트웍 사용자의 관점에서 보면, 파일을 업로드하는 것은 그 파일을 받을 수 있도록 설정된 다른 컴퓨터에 파일을 보내는 것이다. 전자게시판 상의 다른 사용자와 이미지 파일을 공유하기를 원하는 사람들은 그 전자게시판에 파일을 업로드하면 된다.&lt;/p>
&lt;p>그러면 반대편 입장에 있는 사람은 그 파일을 다운로드하게 되는데, 여기서 다운로드는 대개 큰 컴퓨터에서 작은 컴퓨터로 파일을 전송하는 것을 의미한다. 인터넷 사용자의 입장에서의 다운로드란 다른 컴퓨터에서 파일을 받는 것이다.&lt;/p></description></item><item><title>File Upload/Download 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/</guid><description>&lt;h1 id="file-uploaddownload-서비스">File Upload/Download 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>&lt;strong>전자정부 프레임워크&lt;/strong>에서는 다양한 파일 업로드 API를 제공하는 Commons FileUpload를 오픈 소스로 채택하였다.&lt;/p>
&lt;p>Spring 에서는 



 









 



&lt;a href="http://commons.apache.org/fileupload/">Commons FileUpload&lt;/a>


를 사용하여 싱글 파일 업로드에 대하여 가이드 하고 있다.
현재 Spring에서 싱글 파일 업로드에 대해서 매우 좋은 api를 제공해주고 있으나 &lt;strong>멀티플 파일 업로드&lt;/strong>시에 동일한 이름의 여러 개의 파일을 올리려고 할 때 오류가 발생한다.&lt;/p>
&lt;p>오류 사항에 대해서는 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/file-upload/file-upload-service-multi-file-support/">multipart multi file upload&lt;/a>


 지원 문제를 참고.&lt;/p>
&lt;p>본 매뉴얼에서는 싱글 파일 업로드 보다 &lt;strong>멀티플 파일 업로드&lt;/strong>를 가능하도록 그 대안에 대하여 설명하고자 한다.&lt;/p></description></item><item><title>N:N 파일 Partition 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi_process/batch-example-file_partition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi_process/batch-example-file_partition/</guid><description>&lt;h1 id="nn-파일-partition-예제">N:N 파일 Partition 예제&lt;/h1>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;strong>File 파티셔닝 예제의 Job 설정 파일인 partitionFileJob.xml을 확인한다.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>ppartitioner : 입력리소스 수 만큼 Master Step을 파티셔닝하는 MultiResourcePartitioner&lt;/li>
&lt;li>grid-size : 생성할 Context 수&lt;/li>
&lt;li>fileNameListener : 입력 리소스명과 같은 이름의 출력리소스명을 설정하고, 입력 리소스가 없다면 설정된 기본값을 이용해 출력위치 및 출력파일명을 지정한다.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;partitionJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">restartable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;partition&lt;/span> &lt;span style="color:#a6e22e">step=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">partitioner=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;partitioner&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;handler&lt;/span> &lt;span style="color:#a6e22e">grid-size=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">task-executor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskExecutor&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/partition&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;partitioner&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.core.partition.support.MultiResourcePartitioner&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;resources&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;classpath:egovframework/data/input/delimited*.csv&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;tasklet&lt;/span> &lt;span style="color:#a6e22e">transaction-manager=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;transactionManager&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemWriter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;listeners&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;listener&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileNameListener&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/listeners&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileNameListener&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.example.listener.EgovOutputFileListener&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">scope=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;path&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;file:./target/test-outputs/partition/file/&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="클래스-설정">클래스 설정&lt;/h4>
&lt;h5 id="multiresourcepartitioner">MultiResourcePartitioner&lt;/h5>
&lt;p>스프링에서 제공하는 MultiResourcePartitioner 를 사용하며 입력리소스의 수(입력파일 수)만큼 Context를 생성하고 출력위치를 셋팅하는 역할을 한다.(Context 생성으로 여러 Slave Step들을 사용할 수 있게 됨)&lt;/p></description></item><item><title>FixedLength 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-file_fixedlength/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-file_fixedlength/</guid><description>&lt;h1 id="fixedlength-예제">FixedLength 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>플랫 파일의 데이터를 고정된 길이만큼 처리하는 기능을 예제로 제공한다. 스프링 배치에서는 플랫 파일을 처리하기 위해 FlatFileItemReader와 FlatFileItemWriter를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>FixedLength 예제의 Job 설정파일인 fixedLengthIoJob.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>FlatFileItemReader는 아래와 같은 설정들을 포함한다.&lt;/p>
&lt;ul>
&lt;li>resource : 처리해야 할 파일&lt;/li>
&lt;li>lineMapper : 파일의 한 Line씩 처리하는 역할. lineTokenizer와 fieldSetMapper로 구성
&lt;ul>
&lt;li>lineTokenizer : FixedLengthTokenizer을 통해 각 Line을 읽어 고정된 위치로 분리하여 fieldSet객체로 만들어 줌&lt;/li>
&lt;li>fieldSetMapper : FieldSet을 다시 객체로 매핑시켜줌&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.FlatFileItemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">scope=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;resource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#{jobParameters[inputFile]}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lineMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.mapping.DefaultLineMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lineTokenizer&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.transform.FixedLengthTokenizer&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;names&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name,credit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;columns&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1-9,10-11&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fieldSetMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;targetType&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.common.domain.trade.CustomerCredit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>추가로 FlatFileItemWriter설정에 대해서 설명하면 아래와 같다.&lt;/p></description></item><item><title>Flow가 관리하는 영속성(Flow Managed Persistence)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-configuration-flow-managed-persistence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-configuration-flow-managed-persistence/</guid><description>&lt;h1 id="flow가-관리하는-영속성flow-managed-persistence">Flow가 관리하는 영속성(Flow Managed Persistence)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>대부분의 애플리케이션은 여러 방법으로 데이터에 접근한다. 여러 사용자가 공유하는 데이터를 동시에 수정한다.
따라서 트랜잭션 데이터 접근 속성이 필요하다. 관계형 데이터 집합을 도메인 객체로 변환하여 애플리케이션 처리를 도와준다.
Web Flow는 “Flow가 관리하는 영속성”(flow managed persistence)을 제공하여 Flow가 객체 영속성 문맥을 만들고, commit 하고, 닫을 수 있도록 한다.
Web Flow는 하이버네이트와 JPA 객체 영속화 기술과 연동한다.&lt;/p>
&lt;p>Flow-관리 영속성과 별도로 PesistenceContext 관리를 애플리케이션의 서비스 계층에서 완전히 캡슐화하는 패턴이 있다.
이런 경우 Web 계층은 영속화에 관여하지 않는다. 그 대신 서비스 계층으로 념주겨거나 반환받은 detached object를 가지고 동작한다.
이번 장은 Flow-관리 영속성에 초점을 맞추고 이 기능을 언제 어떻게 사용하는지 살펴보겠다.&lt;/p></description></item><item><title>Flow 상속</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/swf-elements-flow-inheritance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/swf-elements-flow-inheritance/</guid><description>&lt;h1 id="flow-상속">Flow 상속&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Flow 상속은 한 Flow가 다른 Flow 설정을 상속할 수 있게 되어 있다. 상속은 Flow와 State 레벨에서 모두 발생할 수 있다.
가장 흔한 유즈케이스는 상위 Flow로 global transition과 예외 핸들러를 정의하고 하위 Flow로 그 설정을 상속받는 것이다.
상위 Flow를 찾으려면 다른 Flow들처럼 flow-registry에 추가해야 된다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="flow-상속은-자바-상속과-비슷한가">Flow 상속은 자바 상속과 비슷한가?&lt;/h3>
&lt;p>상위에 정의한 요소를 하위에서 접근할 수 있다는 측면에서는 자바 상속과 Flow 상속이 비슷하다.
하지만 몇 가지 차이점을 가지고 있다.&lt;/p></description></item><item><title>Flow 정의</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/swf-elements-flow-definition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/swf-elements-flow-definition/</guid><description>&lt;h1 id="flow-정의">Flow 정의&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;h3 id="flow">Flow&lt;/h3>
&lt;p>Flow란 상이한 상황(context)에서 실행될 수 있는 재사용이 가능한 여러 단계들의 흐름을 캡슐화한 것을 의미한다.
모든 Flow는 아래와 같은 Root로 시작한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;flow&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/webflow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/webflow
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/flow&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="flow의-구성">Flow의 구성&lt;/h3>
&lt;p>SWF에서 Flow는 “Sate(state)“로 부르는 일련의 단계들로 구성된다. Flow로 진입하게 되는 Sate는 일반적으로 사용자에게 보여지는 뷰가 된다.
이 뷰에서는 Sate를 제어하게 되는 이벤트가 발생한다. 이들 이벤트는 결과적으로 다른 뷰로 이동하게 되는 Transition(transition)을 일으키게 된다.
모든 state는 &amp;lt;flow/&amp;gt; 안에 정의하게 된다. 맨 처음 정의되는 state가 Flow의 시작점이 된다.&lt;/p></description></item><item><title>FTP Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/ftp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/ftp/</guid><description>&lt;h1 id="ftp-service">FTP Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>&lt;strong>전자정부 표준프레임워크&lt;/strong>는 &lt;acronym title="File Transfer Protocol">FTP&lt;/acronym> 서비스제공을 위해 Apache Commons Net™ [단순 클라이언트측의 기본적인 Internet Protocol의 구현의 FTP기능을 편리하게 제공]을 오픈 소스로 채택하였다.&lt;/p>
&lt;p>Apache Commons Net™은 Network utility collection 이다.
Apache Commons Net™은 단순 클라이언트측의 기본적인 Internet Protocol을 구현함으로서 기본적인 프로토콜 access가 목적이기 때문에 부분적으로 object-orient 규칙에 위배가 되는 사항이 있다는 것을 참고적으로 알고 있어야 한다.&lt;/p>
&lt;h3 id="ftp정의">FTP정의&lt;/h3>
&lt;p>FTP란 FTP (File Transfer Protocol) 파일 전송 프로토콜로 FTP[에프 티 피]는 인터넷상의 컴퓨터들 간에 파일을 교환하기 위한 표준 프로토콜로서 가장 간단한 방법이기도 하다.
화면에 표시할 수 있는 웹 페이지와 관련 파일들을 전송하는 HTTP, 전자우편을 전송하는 SMTP 등과 같이, FTP 역시 인터넷의 TCP/IP 응용 프로토콜 중의 하나이다.
FTP는 웹 페이지 파일들을 인터넷상에서 모든 사람이 볼 수 있도록 하기 위해 저작자의 컴퓨터로부터 서버로 옮기는 과정에서 사용된다.
또한, 다른 서버들로부터 자신의 컴퓨터로 프로그램이나 파일들을 다운로드 하는 데에도 많이 사용된다.
사용자 입장에서는 간단한 명령을 이용하여 FTP를 쓰거나, 또는 그래픽 사용자 인터페이스를 제공하는 상용 프로그램을 쓸 수도 있다.
보통은 웹 브라우저도 웹 페이지로부터 선택한 프로그램을 다운로드 하는데 FTP를 사용한다.
FTP를 사용하여 서버에 있는 파일을 지우거나 이름을 바꾸거나 옮기거나 복사하는 등 갱신작업을 할 수도 있다.
FTP 서버에는 로그온을 해야하지만, 익명의 FTP를 사용하여 모든 사람들에게 공개된 파일들을 쉽게 접근할 수 있도록 하고 있다.
FTP는 보통 TCP/IP에 함께 제공되는 일련의 프로그램 속에 포함되어 있다.&lt;/p></description></item><item><title>스프링 WebFlux 함수형 프로그래밍 모델(WebFlux.fn)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/web-reactive-functional-endpoints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/web-reactive-functional-endpoints/</guid><description>&lt;h1 id="functional-endpoints">Functional Endpoints&lt;/h1>
&lt;p>스프링 WebFlux는 경량화 된 함수형 프로그래밍 모델을 지원한다. WebFlux.fn이라고 하는 이 모델은 함수로 요청을 라우팅하고 핸들링하기 때문에 불변성(immutability)을 보장한다.
함수형 모델과 어노테이션 모델 중 하나를 선택하면 되는데 둘 다 리액티브 코어를 기반으로 한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>WebFlux.fn에선 HandlerFunction이 HTTP 요청을 처리한다. HandlerFunction은 ServerRequest를 받아 비동기 ServerResponse(예를 들어 Mono&lt;ServerResponse>)를 리턴하는 함수다. 요청, 응답 객체 모두 불변하기 때문에 JDK 8 방식으로 HTTP 요청, 응답에 접근할 수 있다. HandlerFunction 역할은 어노테이션 프로그래밍 모델로 치면 @RequestMapping 메소드와 동일하다.&lt;/p></description></item><item><title>Generic</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-generic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-generic/</guid><description>&lt;h1 id="generic">Generic&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring4 Generic은 Autowired 및 Qualifired를 보완하여 Generic을 지원합니다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>기존 Autowire 및 Qualifier의 기능에 대하여 확장하여 Spring4에서 추가로 지원하는 Generic 타입의 Autowire기능에 대하여 알아본다.&lt;/p>
&lt;h3 id="autowire-및-qualifier">Autowire 및 Qualifier&lt;/h3>
&lt;h4 id="autowiring-예제">Autowiring 예제&lt;/h4>
&lt;p>다음은 Customer 클래스에 Person property로 Autowire하는 예제이다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> com.egovframe.common;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.beans.factory.annotation.Autowired;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.beans.factory.annotation.Qualifier;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Customer&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Person person;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="autowire의-문제점">Autowire의 문제점&lt;/h4>
&lt;p>다음과 같은경우 Person에 Autowire로 주입될수 없다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> 	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class =&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;customer&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.egovframe.common.Customer&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;personA&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.egovframe.common.Person&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;GentlemanA&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;personB&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.egovframe.common.Person&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;GentlemanB&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/beans&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>같은 타입이 2개이므로 다음과 같은 오류를 발생시킨다.&lt;/p></description></item><item><title>개발환경 Getting Started</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/install-guide/dev-getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/install-guide/dev-getting-started/</guid><description>&lt;h1 id="개발환경-getting-started">개발환경 Getting Started&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>본 가이드는 전자정부 표준프레임워크 기반의 단순한 응용프로그램(HelloWorld)를 직접 실습해 봄으로써 빠른 시간 내에 전자정부 프레임워크의 기본 기능을 파악하기 위하여 제공한다. 본 가이드의 사용자는 java 및 spring framework에 대한 기본적인 지식이 있다는 것을 가정하였다.&lt;/p>
&lt;p>아래의 3가지 단계에 따라 순서대로 따라하기 방식으로 진행된다.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>개발환경 설치&lt;/strong>: 실습을 위한 개발환경을 구축한다.&lt;/li>
&lt;li>&lt;strong>프로젝트 생성&lt;/strong>: 제공한 샘플 프로젝트를 이용하여 HelloWorld 응용 어플리케이션을 생성하고 실행해 본다.&lt;/li>
&lt;li>&lt;strong>자세히 들여다 보기&lt;/strong>: 생성/실행한 프로젝트의 내부 소스코드를 학습하여 전자정부 표준 프레임워크 기반의 응용 어플리케이션 구현의 원리를 이해한다.&lt;/li>
&lt;/ol>
&lt;p>전자정부 표준 프레임워크 기반의 Hello World 응용 프로그램 개발 및 실행을 위한 구현도구의 환경정보는 다음과 같다.&lt;/p></description></item><item><title>개인빌드(Gradle)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/gradle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/gradle/</guid><description>&lt;h1 id="개인-빌드-gradle">개인 빌드 (Gradle)&lt;/h1>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Gradle은 Groovy를 기반으로 한 오픈소스 빌드 도구이다. Ant의 자유도와 Maven의 관례를 통한 접근성을 바탕으로 이전 빌드툴의 단점을 보완하여 개선된 서비스를 제공한다.&lt;/p>
&lt;h2 id="특징">특징&lt;/h2>
&lt;ul>
&lt;li>Ant처럼 매우 유연한 범용 빌드 도구.&lt;/li>
&lt;li>Maven과 같은 구조화 된 build프레임워크 (구조의 전환이 가능).&lt;/li>
&lt;li>Maven, Ivy등의 기존 저장소 인프라 또는 pom.xml 파일과 ivy.xml 파일에 대한 migration의 편이성 제공&lt;/li>
&lt;li>멀티 프로젝트 빌드 지원.&lt;/li>
&lt;li>의존성 관리의 다양한 방법 제공&lt;/li>
&lt;li>Build script를 xml이 아닌 Groovy 기반의 DSL(Domain Specific Language)을 사용&lt;/li>
&lt;li>기존 Build를 구성하기 위한 풍부한 도메인 모델 제공.&lt;/li>
&lt;li>Gradle 설치 없이 Gradle Wrapper를 이용하여 빌드 지원&lt;/li>
&lt;/ul>
&lt;h3 id="장점">장점&lt;/h3>
&lt;p>Ant, Maven과 같은 기존의 빌드툴은 xml형식을 이용하여 정적인 설정정보를 구성했다.
Gradle은 Groovy라는 언어를 이용하여 코드로서 설정정보를 구성하기 때문에 구조적인 장점이 있다.&lt;/p></description></item><item><title>HandlerMapping</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-handlermapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-handlermapping/</guid><description>&lt;h1 id="handlermapping">HandlerMapping&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>DispatcherServlet에 Client로부터 Http Request가 들어 오면 HandlerMapping은 요청처리를 담당할 Controller를 mapping한다.
Spring MVC는 interface인 HandlerMapping의 구현 클래스도 가지고 있는데, 용도에 따라 여러 개의 HandlerMapping을 사용하는 것도 가능하다.
빈 정의 파일에 HandlerMapping에 대한 정의가 없다면 Spring MVC는 기본(default) HandlerMapping을 사용한다.&lt;/p>
&lt;p>기본 HandlerMapping은 BeanNameUrlHandlerMapping이며, jdk1.5 이상의 실행환경일 때, Spring 3.1이후 버전이면(egov 3.0부터) RequestMappingHandlerMapping가 기본 HandlerMapping이며,
Spring 3.1이전 버전이면(egov 3.0이전 버전) DefaultAnnotationHandlerMapping가 기본 HandlerMapping이다.
(DefaultAnnotationHAndlerMapping은 3.1부터 deprecated되고 RequestMappingHandlerMapping으로 대체됨)&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>BeanNameUrlHandlerMapping, SimpleUrlHandlerMapping 등 주요 HandlerMapping 구현 클래스는 상위 추상 클래스인 AbstractHandlerMapping과 AbstractUrlHandlerMapping을 확장하기 때문에 이 추상클래스들의 프로퍼티를 사용한다.
주요 프로퍼티는 아래와 같다.&lt;/p></description></item><item><title>Spring Web Flow의 Hello World 예제</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-getting-started-hello-world/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-getting-started-hello-world/</guid><description>&lt;h1 id="hello-world">Hello, World&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>처음으로 접하므로 여기서는 Hello World를 찍어 보면서 실행하는 것을 살펴보도록 하겠다.&lt;br/>
Hello World는 두 가지 버전으로 입력되는 값이 없이 단지 Hello, Web Flow 화면을 호출하는 것과 입력값을 가지고 분기 처리 등 서비스 메소드를 실행 후 결과를 화면으로 보여주는 버젼으로 나누어 설명하겠다. 실행하여 보고자 하는 화면 결과는 아래와 같다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/business-logic-layer/images/helloflow.jpg" alt="helloflow" >
&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Spring Web Flow는 사용자와 Service를 제공하는 서버 간의 대화하듯한 화면의 이동을 정의하는 것이다.&lt;br/>
SWF(Spring Web Flow)는 사용자와 화면 간의 대화 형태로 웹 대화형 시나리오를 중심으로 접근한다.&lt;/p></description></item><item><title>History Management</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-history_management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-history_management/</guid><description>&lt;h1 id="history-management">History Management&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치작업 처리 중의 정보는 JobRepository의 JobInstance, JobParams, JobExecution, StepExecution, key-value 쌍으로 값을 보관할 수 있는 공간인 ExecutionContext에 저장 및 갱신되어 history를 관리한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>JobInstance, JobParams, JobExecution, StepExecution, ExecutionContext 의 각각의 속성에 대해서 정리하였다.&lt;/p>
&lt;h3 id="batch_job_instance">BATCH_JOB_INSTANCE&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>JobInstance 속성&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>jobInstanceId&lt;/td>
 &lt;td>JobInstance를 식별하는 ID&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>version&lt;/td>
 &lt;td>JobInstance 의 수정 횟수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>jobName&lt;/td>
 &lt;td>Job의 이름&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>jobKey&lt;/td>
 &lt;td>JobInstance를 구분 짓는 JobParameters의 serialization&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="batch_job_execution">BATCH_JOB_EXECUTION&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>JobExecution 속성&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>status&lt;/td>
 &lt;td>BatchStatus는 실행 상태를 나타내는 객체이다, 실행하는 동안에는 BatchStatus,STARTED, 실행이 실패한 경우 BatchStatus.FAILED, 실행이 성공적으로 종료됐을 경우 BatchStatus.COMPLETED가 된다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>startTime&lt;/td>
 &lt;td>Execution이 시작되는 현재 시스템 시간을 java.Util.Data로 저장&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>endTime&lt;/td>
 &lt;td>Execution의 성공/실패 여부와 관계없이 종료되는 현재 시스템 시간을 java.Util.Data로 저장&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>exitStatus&lt;/td>
 &lt;td>ExitStatus는 실행의 결과를 나타낸다. 호출자에게 반환될 exit code를 포함한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>createTime&lt;/td>
 &lt;td>JobExecution이 최초 생성 된 현재 시스템 시간을 java.Util.Data로 저장&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>lastUpdated&lt;/td>
 &lt;td>JobExecution이 마지막으로 생성 된 현재 시스템 시간을 java.Util.Data로 저장&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>executionContext&lt;/td>
 &lt;td>execution간 지속돼야 할 모든 데이터를 포함하는 &amp;lsquo;프로퍼티 백&amp;rsquo;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>failureExceptions&lt;/td>
 &lt;td>Job이 실행되는 동안 발생한 익셉션 리스트&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="batch_job_params">BATCH_JOB_PARAMS&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>JobParams 속성&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>jobInstanceId&lt;/td>
 &lt;td>BATCH_JOB_INSTANCE 테이블의 jobInstanceId를 외래키로 지정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>typeCd&lt;/td>
 &lt;td>파라마터의 형식을 String으로 저장,null일 될 수 없음&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>keyName&lt;/td>
 &lt;td>파라미터의 키&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>stringVal&lt;/td>
 &lt;td>String타입의 파마미터 값&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>dateVal&lt;/td>
 &lt;td>Date타입의 파마미터 값&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>longVal&lt;/td>
 &lt;td>Long타입의 파마미터 값&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>doubleVal&lt;/td>
 &lt;td>Double타입의 파마미터의 값&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="batch_step_execution">BATCH_STEP_EXECUTION&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>StepExecution 속성&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>status&lt;/td>
 &lt;td>BatchStatus는 실행 상태를 나타내는 객체이다, 실행하는 동안에는 BatchStatus,STARTED, 실행이 실패한 경우 BatchStatus.FAILED, 실행이 성공적으로 종료됐을 경우 BatchStatus.COMPLETED가 된다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>startTime&lt;/td>
 &lt;td>Execution이 시작되는 현재 시스템 시간을 java.Util.Data로 저장&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>endTime&lt;/td>
 &lt;td>Execution의 성공/실패 여부와 관계없이 종료되는 현재 시스템 시간을 java.Util.Data로 저장&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>exitStatus&lt;/td>
 &lt;td>ExitStatus는 실행의 결과를 나타낸다. 호출자에게 반환될 exit code를 포함한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>executionContext&lt;/td>
 &lt;td>execution간 지속돼야 할 모든 데이터를 포함하는 &amp;lsquo;프로퍼티 백&amp;rsquo;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>readCount&lt;/td>
 &lt;td>성공적으로 읽은 item 갯수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>writeCount&lt;/td>
 &lt;td>성공적으로 쓰인 item 갯수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>commitCount&lt;/td>
 &lt;td>해당 execution에서 커밋된 트랜젝션 횟수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>rollbackCount&lt;/td>
 &lt;td>롤백된 Step에 의해서 제어된 비즈니스 트랜젝션의 갯수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>readSkipCount&lt;/td>
 &lt;td>읽기 과정에서 실패 후, 스킵된 item 갯수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>processSkipCount&lt;/td>
 &lt;td>프로세스 과정에서 실패 후, 스킵된 item 갯수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>filterCount&lt;/td>
 &lt;td>ItemProcessor에 의해 필터링 된 item 갯수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>writeSkipCount&lt;/td>
 &lt;td>쓰기 과정에서 실패 후, 스킵된 item 갯수&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="batch_job_execution_context">BATCH_JOB_EXECUTION_CONTEXT&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>JobExecutionContext 속성&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>jobExecutionId&lt;/td>
 &lt;td>BATCH_JOB_EXECUTION 테이블의 jobExecutionId를 외래키로 지정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>shortContext&lt;/td>
 &lt;td>SERIALIZED_CONTEXT의 문자열 버전&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>serializedContext&lt;/td>
 &lt;td>전체 Context&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="batch_step_execution_context">BATCH_STEP_EXECUTION_CONTEXT&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>StepExecutionContext 속성&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>stepExecutionId&lt;/td>
 &lt;td>BATCH_STEP_EXECUTION 테이블의 stepExecutionId를 외래키로 지정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>shortContext&lt;/td>
 &lt;td>SERIALIZED_CONTEXT의 문자열 버전&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>serializedContext&lt;/td>
 &lt;td>전체 Context&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="참고자료">참고자료&lt;/h2>
&lt;ul>
&lt;li>Meta-Data Schema :



 









 



&lt;a href="http://static.springsource.org/spring-batch/reference/html/metaDataSchema.html">http://static.springsource.org/spring-batch/reference/html/metaDataSchema.html&lt;/a>


&lt;/li>
&lt;/ul></description></item><item><title>Ibatis 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-db_ibatis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-db_ibatis/</guid><description>&lt;h1 id="ibatis-예제">Ibatis 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>iBatis를 사용하여 Database의 데이터를 읽고 쓰는 기능에 대한 예제를 제공한다. 스프링 배치에서는 IbatisPagingItemReader와 IbatisBatchItemWriter를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;strong>Ibatis 예제의 Job 설정파일인 ibatisIoJob.xml을 확인한다.&lt;/strong>&lt;/p>
&lt;p>Ibatis 를 연동을 위해 Spring의 SqlMapClientFactoryBean을 통해 sql-map-config 설정 파일과 Ibatis 에 제공될 dataSource 설정한다. IbatisPagingItemReader와 IbatisBatchItemWriter는 sqlMapClient의 value값으로 정의된 설정파일을 통해 각각 queryId와 statementId의 value값으로 정의된 ID와 동일한 쿼리를 수행한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader&amp;#34;&lt;/span>&lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.database.IbatisPagingItemReader&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;queryId&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;getAllCustomerCredits&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sqlMapClient&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sqlMapClient&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemWriter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.database.IbatisBatchItemWriter&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;statementId&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;updateCredit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sqlMapClient&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sqlMapClient&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sqlMapClient&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.orm.ibatis.SqlMapClientFactoryBean&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;configLocation&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ibatis-config.xml&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ibatis-설정">Ibatis 설정&lt;/h4>
&lt;p>&lt;strong>Ibatis사용을 위한 기본 설정을 확인한다.&lt;/strong>&lt;/p></description></item><item><title>iBATIS Configuration</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-ibatis_configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-ibatis_configuration/</guid><description>&lt;h1 id="ibatis-configuration">iBATIS Configuration&lt;/h1>
&lt;p>iBATIS 의 메인 설정 파일인 SQL Map XML Configuration 파일(이하 sql-map-config.xml 설정 파일) 작성과 상세한 옵션 설정에 대해 알아본다.&lt;/p>
&lt;h2 id="sql-map-configxml">sql-map-config.xml&lt;/h2>
&lt;p>SqlMapClient 설정관련 상세 내역을 제어할 수 있는 메인 설정 파일로 주로 transaction 관리 관련 설정 및 다양한 옵션 설정, Sql Mapping 파일들에 대한 path 설정 등을 포함한다.&lt;/p>
&lt;h4 id="sample-configuration">Sample Configuration&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE sqlMapConfig PUBLIC &amp;#34;-//ibatis.apache.org//DTD SQL Map Config 2.0//EN&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;#34;http://ibatis.apache.org/dtd/sql-map-config-2.dtd&amp;#34;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;sqlMapConfig&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;properties&lt;/span> &lt;span style="color:#a6e22e">resource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;META-INF/spring/jdbc.properties&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;settings&lt;/span> &lt;span style="color:#a6e22e">cacheModelsEnabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">enhancementEnabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">lazyLoadingEnabled=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">maxRequests=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;128&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">maxSessions=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">maxTransactions=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">useStatementNamespaces=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">defaultStatementTimeout=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;typeHandler&lt;/span> &lt;span style="color:#a6e22e">javaType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;java.util.Calendar&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">jdbcType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;TIMESTAMP&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">callback=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.dataaccess.typehandler.CalendarTypeHandler&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;transactionManager&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;JDBC&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;dataSource&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;DBCP&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;driverClassName&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${driver}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${dburl}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${username}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${password}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">&amp;lt;!-- OPTIONAL PROPERTIES BELOW --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;maxActive&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;maxIdle&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;maxWait&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;60000&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">&amp;lt;!-- validation query --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">&amp;lt;!--&amp;lt;property name=&amp;#34;validationQuery&amp;#34; value=&amp;#34;select * from DUAL&amp;#34; /&amp;gt;--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;logAbandoned&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;removeAbandoned&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;removeAbandonedTimeout&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50000&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Driver.DriverSpecificProperty&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;SomeValue&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/dataSource&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/transactionManager&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;sqlMap&lt;/span> &lt;span style="color:#a6e22e">resource=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;META-INF/sqlmap/mappings/testcase-basic.xml&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;sqlMap&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">..&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/sqlMapConfig&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>properties : 표준 java properties (key=value 형태)파일에 대한 연결을 지원하며 설정 파일내에서 ${key} 와 같은 형태로 properties 형태로 외부화 해놓은 실제의 값(여기서는 DB 접속 관련 driver, url, id/pw)을 참조할 수 있다. resource 속성으로 classpath, url 속성으로 유효한 URL 상에 있는 자원을 지정 가능하다.&lt;/li>
&lt;li>settings : 이 설정 파일을 통해 생성된 SqlMapClient instance 에 대하여 다양한 옵션 설정을 통해 최적화할 수 있도록 지원한다. 모든 속성은 선택사항(optional) 이다.&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>속성&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;th>Example, Default&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>maxRequests&lt;/td>
 &lt;td>같은 시간대에 SQL 문을 실행한 수 있는 thread 의 최대 갯수 지정.&lt;/td>
 &lt;td>maxRequests=“256”, 512&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>maxSessions&lt;/td>
 &lt;td>주어진 시간에 활성화될 수 있는 session(또는 client) 수 지정.&lt;/td>
 &lt;td>maxSessions=“64”, 128&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>maxTransactions&lt;/td>
 &lt;td>같은 시간대에 SqlMapClient.startTransaction() 에 들어갈 수 있는 최대 갯수 지정.&lt;/td>
 &lt;td>maxTransactions=“16”, 32&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>cacheModelsEnabled&lt;/td>
 &lt;td>SqlMapClient 에 대한 모든 cacheModel 에 대한 사용 여부를 global 하게 지정.&lt;/td>
 &lt;td>cacheModelsEnabled=“true”, true (enabled)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>lazyLoadingEnabled&lt;/td>
 &lt;td>SqlMapClient 에 대한 모든 lazy loading 에 대한 사용 여부를 global 하게 지정.&lt;/td>
 &lt;td>lazyLoadingEnabled=“true”, true (enabled)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>enhancementEnabled&lt;/td>
 &lt;td>runtime bytecode enhancement 기술 사용 여부 지정.&lt;/td>
 &lt;td>enhancementEnabled=“true”, false (disabled)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>useStatementNamespaces&lt;/td>
 &lt;td>mapped statements 에 대한 참조 시 namespace 조합 사용 여부 지정. true 인 경우 queryForObject(“sqlMapName.statementName”); 과 같이 사용함.&lt;/td>
 &lt;td>useStatementNamespaces=“false”, false (disabled)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>defaultStatementTimeout&lt;/td>
 &lt;td>모든 JDBC 쿼리에 대한 timeout 시간(초) 지정, 각 statement 의 설정으로 override 가능함. 모든 driver가 이 설정을 지원하는 것은 아님에 유의할 것.&lt;/td>
 &lt;td>지정하지 않는 경우 timeout 없음(cf. 각 statement 설정에 따라)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>classInfoCacheEnabled&lt;/td>
 &lt;td>introspected(java 의 reflection API에 의해 내부 참조된) class의 캐쉬를 유지할지에 대한 설정&lt;/td>
 &lt;td>classInfoCacheEnabled=“true”, true (enabled)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>statementCachingEnabled&lt;/td>
 &lt;td>prepared statement 의 local cache 를 유지할지에 대한 설정&lt;/td>
 &lt;td>statementCachingEnabled=“true”, true (enabled)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>typeHandler : javaType ↔ jdbcType 간의 변환(prepared statement 의 파라메터 세팅/resultSet 의 값 얻기)을 처리하는 typeHandler 구현체를 등록할 수 있다.&lt;/li>
&lt;li>transactionManager : 트랜잭션 관리 서비스를 설정할 수 있다. type 속성으로 어떤 트랜잭션 관리자를 사용할지 지시할 수 있는데, JDBC, JTA, EXTERNAL 의 세가지 트랜잭션 관리자가 프레임워크에 포함되어 있다. 위에서는 일반적인 Connection commit()/rollback() 메서드를 통해 트랜잭션을 관리하는 JDBC 타입으로 설정하였다.&lt;/li>
&lt;li>dataSource : transactionManager 설정의 일부 영역으로 DataSource 에 대한 설정이다. type 속성으로 어떤 DataSourceFactory 를 사용할지 지시할 수 있는데, SIMPLE, DBCP, JNDI 의 세가지 설정이 가능하다. 위에서는 Apache Commons DBCP(Database Connection Pool) 를 사용하는 DBCP 타입으로 설정하였다. iBATIS 는 DBCP 속성에 대한 설정을 직접 명시할 수 있도록 지원하고 있다. iBATIS 2 버전 이후로는 단일 dataSource 만 지원한다.&lt;/li>
&lt;li>sqlMap : 명시적으로 각 SQL Map XML 파일을 포함하도록 설정한다. classpath (resource 속성으로 지정) 나 url(url 속성으로 지정) 상의 자원을 stream 형태로 로딩하게 된다. 위에서는 classpath 상에 존재하는 sql 매핑 파일을 지정하였다.&lt;/li>
&lt;/ul>
&lt;p>이 외에도 typeAlias(global 한 type 별명-풀패키지명에 비해 간략히), resultObjectFactory (SQL 문의 실행에 의한 결과 객체의 생성을 iBATIS 의 ResultObjectFactory 인터페이스를 구현한 factory 클래스를 통해 처리할 수 있도록 지원) 에 대한 설정이 가능하다. DTD 상 sqlMap 설정은 하나 이상이 필요하고 다른 설정은 선택사항 이다.&lt;/p></description></item><item><title>Id Generation 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/id-generated/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/id-generated/</guid><description>&lt;h1 id="id-generation-서비스">Id Generation 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>시스템을 개발할 때 필요한 유일한 ID를 생성하기 위해 사용하도록 서비스한다.&lt;/p>
&lt;h2 id="주요-개념">주요 개념&lt;/h2>
&lt;h3 id="universally-unique-identifieruuid">Universally Unique Identifier(UUID)&lt;/h3>
&lt;p>UUID는 OSF(Open Software Foundation)에 의해 제정된 고유식별자(Identifier)에 대한 표준이다. UUID는 16-byte (128-bit)의 숫자로 구성된다.&lt;/p>
&lt;p>UUID를 표현하는 방식에 대한 특별한 규정은 없으나, 일반적으로 아래와 같이 16진법으로 8-4-4-4-12 형식으로 표현한다.&lt;/p>
&lt;p>&lt;code>550e8400-e29b-41d4-a716-446655440000&lt;/code>&lt;/p>
&lt;p>UUID 표준은 아래 문서에 기술되어 있다.&lt;/p>
&lt;ul>
&lt;li>



 









 



&lt;a href="http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=2229">ISO/IEC 11578:1996 &amp;ldquo;Information technology &amp;ndash; Open Systems Interconnection &amp;ndash; Remote Procedure Call (RPC)&amp;rdquo;&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="http://www.itu.int/ITU-T/studygroups/com17/oid.html">ITU-T Rec. X.667 | ISO/IEC 9834-8:2005&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="http://tools.ietf.org/html/rfc4122">IETF Proposed Standard RFC 4122&lt;/a>


&lt;/li>
&lt;/ul>
&lt;p>UUID는 다음 5개의 Version이 존재한다.&lt;/p></description></item><item><title>Bean Definition Inheritance</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean_definition_inheritance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean_definition_inheritance/</guid><description>&lt;h1 id="bean-definition-inheritance">Bean definition inheritance&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Bean 정의는 많은 양의 설정 정보를 포함하고 있다. 자식 bean 정의는 부모 bean 정의로부터 설정 정보를 상속받은 bean 정의를 의미한다. 자식 bean 정의는 필요에 따라 부모 bean 정의로부터 상속받은 설정 정보를 덮어쓰거나 추가할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>XML 기반 설정에서는 자식 bean 정의에 &amp;lsquo;parent&amp;rsquo; attribute를 사용하여 상속관계를 정의할 수 있다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;inheritedTestBean&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">abstract=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.beans.TestBean&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;parent&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;inheritsWithDifferentClass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.beans.DerivedTestBean&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">parent=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;inheritedTestBean&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">init-method=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;initialize&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;override&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- the age property value of 1 will be inherited from parent --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>자식 bean 정의는 bean class가 명기되어 있지 않을 경우, 부모 bean 정의의 값을 사용한다. 만약 자식 bean 정의에 bean class가 명기되어 있는 경우, 자식 bean 정의의 bean class는 부모 bean 정의의 모든 property 값을 받아들일 수 있어야 한다.&lt;/p></description></item><item><title>Inline Parameters</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-inline_paramters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-inline_paramters/</guid><description>&lt;h1 id="inline-parameters">Inline Parameters&lt;/h1>
&lt;p>이전에 살펴본 prepared statement 에 대한 바인드 변수 매핑 처리를 위한 parameterMap 요소(SQL 문 외부에 정의한 입력 객체 property name 및 javaType, jdbcType 을 비롯한 옵션을 설정 매핑 요소) 와 동일한 기능을 처리하는 간편한 방법을 Inline Parameters 방법으로 제공한다. 보통 parameterClass 로 명시된 입력 객체에 대해 바인드 변수 영역을 간단한 #property# 노테이션으로 나타내는 Inline Parameter 방법은 기존 parameterMap 에서의 ? 와 이의 순서를 맞춘 외부 parameterMap 선언으로 처리하는 방법에 비해 많이 사용되고 일반적으로 추천하는 방법이다. 이는 Dynamic 요소와 함께 사용될 수 있고 별도의 외부 매핑 정의 없이 바인드 변수 처리가 필요한 위치에 해당 property 를 직접 사용 가능하며, 필요한 경우 jdbcType 이나 nullValue 를 간단한 추가 노테이션(ex. #empName:VARCHAR:blank# ) 와 같이 지정할 수 있고, 상세한 옵션이 필요한 경우에는 (ex. #comm,javaType=decimal,jdbcType=NUMERIC,nullValue=-99999# ) 와 같이 ,(comma) 로 구분된 필요한 속성=값 을 상세하게 기술할 수도 있다.&lt;/p></description></item><item><title>Integration 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/integration-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/integration-service/</guid><description>&lt;h1 id="integration-서비스">Integration 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Integration 서비스는 전자정부 개발프레임워크 기반의 시스템이 타 시스템과의 연계를 위해 사용하는 Interface의 표준을 정의한 것이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="목적">목적&lt;/h3>
&lt;p>기존의 전자정부 시스템은 타 시스템과의 연계를 위해 연계 솔루션을 사용하거나 자체 개발한 연계 모듈을 사용해왔다. 기존에 사용된 연계 솔루션 및 자체 연계 모듈은 각각 고유한 설정 및 사용 방식을 가지고 있어, 동일한 연계 서비스라 할지라도 사용하는 연계 모듈에 따라 각기 다른 방식으로 개발되어 왔다. 본 Integration 서비스는 이러한 중복 개발을 없애고, 표준화된 설정 및 사용 방식을 정의하여 개발 효율성을 제고한다.&lt;/p></description></item><item><title>Internationalization(국제화)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/internationalization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/internationalization/</guid><description>&lt;h1 id="internationalization국제화">Internationalization(국제화)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준 프레임워크에서는 Spring MVC 에서 제공하는 LocaleResolver를 이용한다.
우리는 여기서 LocaleResolver를 알아보고 적용하는 설정과 다국어가 적용된 message resource 를 가져와 활용하는 것을 보도록 하겠다.
Spring MVC 는 다국어를 지원하기 위하여 아래와 같은 종류의 LocaleResolver 를 제공하고 있다.&lt;/p>
&lt;ul>
&lt;li>CookieLocaleResolver
&lt;ul>
&lt;li>쿠키를 이용한 locale정보 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>SessionLocaleResolver
&lt;ul>
&lt;li>세션을 이용한 locale정보 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>AcceptHeaderLocaleResolver
&lt;ul>
&lt;li>클라이언트의 브라우져에 설정된 locale정보 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Bean 설정 파일에 정의하지 않을 경우 AcceptHeaderLocaleResolver 를 default 로 적용된다.&lt;/strong>&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="3가지의-localeresolver">3가지의 LocaleResolver&lt;/h3>
&lt;h4 id="cookielocaleresolver">CookieLocaleResolver&lt;/h4>
&lt;p>CookieLocaleResolver 를 설정하는 경우 사용자의 쿠키에 설정된 Locale 을 읽어 들인다.
samlple-servlet.xml&lt;/p></description></item><item><title>Inversion of Control</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-iversion-of-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-iversion-of-control/</guid><description>&lt;h1 id="inversion-of-control">Inversion of Control&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>본 문서는 



 









 



&lt;a href="https://martinfowler.com/">Martin Fowler&lt;/a>


가 저술한 



 









 



&lt;a href="https://martinfowler.com/bliki/InversionOfControl.html">Inversion of Control&lt;/a>


 문서를 번역 및 일부 의역한 것이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Inversion of Control(IoC)는 당신이 프레임워크를 확장할 때 마주치게 되는 일반적인 사상이다. 또한, 프레임워크를 정의하는 특징이기도 하다.&lt;/p>
&lt;p>간단한 예제를 생각해보자. 명령줄의 질문을 통해 사용자로부터 어떠한 정보를 입력받는 프로그램을 작성한다고 생각해보자. 나는 아마 다음과 같은 것을 작성할 것이다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ruby&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>puts &lt;span style="color:#e6db74">&amp;#39;What is your name?&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>name &lt;span style="color:#f92672">=&lt;/span> gets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>process_name(name)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>puts &lt;span style="color:#e6db74">&amp;#39;Waht is your quest?&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>quest &lt;span style="color:#f92672">=&lt;/span> gets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>process_quest(quest)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위 예제에서, 내가 작성한 코드는 제어권을 가지고 있다 : 질문을 언제 할 것인지, 대답은 언제 읽을 것인지, 그리고 그런 결과들을 언제 처리할 것인지 등을 결정하고 있다.&lt;/p></description></item><item><title>IoC Container</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/</guid><description>&lt;h1 id="ioc-container">IoC Container&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>프레임워크의 기본적인 기능인 Inversion of Control(IoC) Container 기능을 제공하는 서비스이다.&lt;br>
객체의 생성 시, 객체가 참조하고 있는 타 객체에 대한 종속성을 소스 코드 내부에서 하드 코딩하는 것이 아닌, 소스 코드 외부에서 설정하게 함으로써, 유연성 및 확장성을 향상시킨다.&lt;/p>
&lt;h3 id="주요-개념">주요 개념&lt;/h3>
&lt;h4 id="inversion-of-controlioc">Inversion of Control(IoC)&lt;/h4>
&lt;p>IoC는 Inversion of Control의 약자이다. 우리나라 말로 직역해 보면 &amp;ldquo;역제어&amp;quot;라고 할 수 있다. 제어의 역전 현상이 무엇인지 살펴본다.&lt;br>
기존에 자바 기반으로 어플리케이션을 개발할 때 자바 객체를 생성하고 서로간의 의존 관계를 연결시키는 작업에 대한 제어권은 보통 개발되는 어플리케이션에 있었다.&lt;br>
그러나, Servlet, EJB 등을 사용하는 경우 Servlet Container, EJB Container에게 제어권이 넘어가서 객체의 생명주기(Life Cycle)를 Container들이 전담하게 된다.&lt;br>
이처럼 IoC에서 이야기하는 제어권의 역전이란 객체의 생성에서부터 생명주기의 관리까지 모든 객체에 대한 제어권이 바뀌었다는 것을 의미한다.&lt;/p></description></item><item><title>ItemReader</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/itemReader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/itemReader/</guid><description>&lt;h1 id="itemreader">ItemReader&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>ItemReader는 읽기 대상의 타입에 관계없이 한번에 한 항목을 읽으며 읽을 항목이 모두 소진되면 Null을 반환하는 인터페이스이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>ItemReader는 여러 종류의 데이터 타입을 입력 받을 수 있다. 가장 일반적인 데이터 타입으로 플랫 파일, &lt;Acronym title="Extensible Markup Language">XML&lt;/Acronym>, 데이터베이스가 있다.&lt;/p>
&lt;ul>
&lt;li>플랫 파일 : 플랫 파일 ItemReader는 일반적으로 고정 위치로 정의된 데이터 필드나 특수 문자에 의해 구별된 데이터의 행을 읽는다.&lt;/li>
&lt;li>XML : XML ItemReader는 파싱, 매핑, 유효성 검증을 XML에서 독립적으로 작업할 수 있도록 처리해준다. 입력 데이터는 &lt;acronym title="XML (Extensible Markup Language) Schema Definition">XSD&lt;/acronym> 스키마에 대해 XML 파일의 유효성 검증이 가능하다.&lt;/li>
&lt;li>데이터베이스 : 데이터베이스 ItemReader는 데이터베이스 리소스에 객체로 맵핑 될 수 있는 resultset으로 반환하여 접근한다. 기본 &lt;acronym title="Structured Query Language">SQL&lt;/acronym> ItemReaders는 객체를 반환하는 RowMapper를 호출한다.&lt;/li>
&lt;/ul>
&lt;p>기본적인 ItemReader 인터페이스는 아래와 같다.&lt;/p></description></item><item><title>ItemWriter</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/ItemWriter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/ItemWriter/</guid><description>&lt;h1 id="itemwriter">ItemWriter&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>ItemWriter는 대상 타입에 관계없이 한번에 항목의 묶음(Chunk)을 쓰는 동작의 인터페이스이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>ItemWriter의 기능은 ItemReader와 유사하지만 정반대의 동작을 한다.
기본적인 ItemWriter 인터페이스는 아래와 같다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">ItemWriter&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">write&lt;/span>(List&lt;span style="color:#f92672">&amp;lt;?&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> T&lt;span style="color:#f92672">&amp;gt;&lt;/span> items) &lt;span style="color:#66d9ef">throws&lt;/span> Exception;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>write() 메소드는 ItemWriter의 필수적인 메소드이며 인자로 건넨 객체가 열려 있는 동안 쓰기 작업을 시도한다.&lt;/p>
&lt;h3 id="flatfile-itemwriter">FlatFile ItemWriter&lt;/h3>
&lt;p>FlatFileItemWriter는 Resource, LineAggregator에 기본적으로 의존성을 갖으며, LineAggregator에 따라 구분자(Delimited)와 고정길이(Fixed Length) 방식으로 쓸 수 있다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/images/flatfileitemwriter_process.png" alt="image" >
&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>구분&lt;/th>
 &lt;th>데이터 형태&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>LineAggregator&lt;/td>
 &lt;td>Item → String&lt;/td>
 &lt;td>ItemReader, ItemProcessor 과정을 거친 Item을 1 라인의 String으로 변환하는 총 과정(FieldExtractor 과정을 포함한다.)&lt;br>- &lt;strong>DelimitedLineAggregator (구분자)&lt;/strong> : Item의 Field와 Field 사이에 구분자를 삽입하여 1라인의 String으로 변환하는 과정&lt;br>- &lt;strong>FormatterLineAggregator(고정길이 포맷)&lt;/strong> : Item의 Field를 사용자가 설정한 포맷 기준으로 1라인의 String으로 변환하는 과정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>FieldExtractor&lt;/td>
 &lt;td>Item → Fields&lt;/td>
 &lt;td>Item에서 Field 값들을 꺼내어 Object[]로 변환하는 과정&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>아래 Delimited(구분자), Fixed Length(고정길이) 방식으로 설정한 FlatFileItemWriter의 예시를 통해 FlatFileItemWriter, LineAggregator, FieldExtractor의 의존 관계를 볼 수 있다.&lt;/p></description></item><item><title>Spring Framework + Jakarta Commons Validator</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/security/security-jakarta-commons-validator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/security/security-jakarta-commons-validator/</guid><description>&lt;h1 id="spring-framework--jakarta-commons-validator">Spring Framework + Jakarta Commons Validator&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>입력값 검증을 위한 Validation 기능은 Valang, Jakarta Commons, Spring 등에서 제공한다.&lt;br>
여기서는 Jakarta Commons Validator를 Spring Framework과 연동하여 사용하는 방법에 대해서 설명하고자 한다.&lt;br>
Jakarta Commons Validator는 필수값, 각종 primitive type(int,long,float…), 최대-최소길이, 이메일, 신용카드번호등의 값 체크등을 할 수 있도록 Template이 제공된다.&lt;br>
이 Template은 Java 뿐 아니라 Javascript로도 제공되어 client-side, server-side의 검증을 함께 할 수 있으며,
Configuration과 에러메시지를 client-side, server-side 별로 따로 하지 않고 한곳에 같이 쓰는 관리상의 장점이 있다.&lt;br>
Struts에서는 Commons Validator를 사용하기 위한 org.apache.struts.validator.ValidatorPlugIn 같은 플러그인 클래스를 제공하는데,
Spring에서는 Spring Modules 프로젝트에서 연계 모듈을 제공한다.&lt;br>
여기서는 server-side, client-side validation을 위해,
설치방법, Spring Module에서 제공하는 핵심 클래스인 DefaultValidatorFactory, DefaultValidator와 설정파일인 validator-rules.xml, validator.xml 에 대한 간략한 설명과
예제 프로젝트인 easycompany에 적용하는 과정을 설명한다.&lt;/p></description></item><item><title>Java-based Configuration</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-java-based_configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-java-based_configuration/</guid><description>&lt;h1 id="java-based-configuration">Java-based configuration&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Java 코드에서 주석을 사용하여 스프링 컨테이너를 구성하는 방법에 대해 알아본다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="기본-개념--bean-configurationl">기본 개념 : @Bean, @Configurationl&lt;/h3>
&lt;p>스프링의 자바 기반 설정에서는 @Configuration 어노테이션 클래스와 @Bean 어노테이션 메소드를 지원한다.&lt;br>
@Bean 어노테이션은 Spring IoC 컨테이너가 관리할 새로운 객체를 인스턴스화하고, 초기화하는데 사용되며, Spring의 XML 설정에서의 &amp;lt;bean/&amp;gt;과 같은 역할을 한다.&lt;br>
@Bean 어노테이션은 붙인 메소드는 스프링 @Component와 함께 사용할 수 있지만, 대체로 @Configuration Bean과 사용한다.&lt;br>
@Configuration 어노테이션은 해당 클래스의 목적이 Bean 설정을 위한 소스임을 나타내며, @Configuration 클래스는 같은 클래스 안에 있는 @Bean 메소드들끼리 서로를 호출하여 Bean 사이의 의존성을 정의할 수 있게 한다.&lt;br>
@Configuration 클래스를 아래와 같이 구성할 수 있다.&lt;/p></description></item><item><title>JdbcCursor 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-db_jdbccursor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-db_jdbccursor/</guid><description>&lt;h1 id="jdbccursor-예제">JdbcCursor 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>DB를 한 행씩 읽어서 데이터처리를 수행하는 기능을 예제로 제공한다. 스프링 배치에서는 JdbcCursorItemReader, HibernateCursorItemReader를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>JdbcCursor 예제의 Job 설정파일인 jdbcCursorIoJob.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>JdbcCursorItemReader는 아래와 같은 설정들을 포함한다.&lt;/p>
&lt;ul>
&lt;li>dataSource : 데이터베이스&lt;/li>
&lt;li>sql : 실행할 쿼리&lt;/li>
&lt;li>verifyCursorPosition : 커서위치 확인여부&lt;/li>
&lt;li>rowMapper : SQL의 실행 결과인 ResultSet와 객체를 매핑 시키는 역할&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.database.JdbcCursorItemReader&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sql&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;select ID, NAME, CREDIT from CUSTOMER&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;verifyCursorPosition&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rowMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.common.domain.trade.CustomerCreditRowMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="junittest-구성-및-수행">JunitTest 구성 및 수행&lt;/h3>
&lt;h4 id="junittest-구성">JunitTest 구성&lt;/h4>
&lt;p>&lt;b>JdbcCursor 예제를 수행하고 배치작업 결과에 대한 검증을 위해 다음과 같이 @Test를 구성하였다.&lt;/b>&lt;/p></description></item><item><title>JdbcPaging 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-db_jdbcpaging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-db_jdbcpaging/</guid><description>&lt;h1 id="jdbcpaging-예제">JdbcPaging 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>DB를 페이지단위로 읽어서 데이터처리를 수행하는 기능을 예제로 제공한다. 스프링 배치에서는 JdbcPagingItemReader,JpaPagingItemReader등을 제공한다.또한 paging쿼리를 제공하는 인터페이스 PagingQueryProvider를 제공하며 각 DB종류별로 OraclePagingQueryProvider, HsqlPagingQueryProvider, MySqlPagingQueryProvider, SqlServerPagingQueryProvider, SybasePagingQueryProvider 등의 구현클래스를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>JdbcPaging 예제의 Job 설정파일인 jdbcPagingIoJob.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>JdbcPagingItemReader는 아래와 같은 설정들을 포함한다.&lt;/p>
&lt;ul>
&lt;li>dataSource : 데이터베이스&lt;/li>
&lt;li>rowMapper : SQL의 실행 결과인 ResultSet와 객체를 매핑 시키는 역할&lt;/li>
&lt;li>queryProvider : 페이징 처리를 위한 쿼리를 제공하는 역할&lt;/li>
&lt;li>pageSize : 한 페이지의 DATA 수&lt;/li>
&lt;li>parameterValues : 쿼리의 파라미터 값을 Map으로 지정&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.database.JdbcPagingItemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">scope=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rowMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.common.domain.trade.CustomerCreditRowMapper&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;queryProvider&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sortKey&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ID&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- Intentionally put sort key second in the query list as a test --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;selectClause&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;select NAME, ID, CREDIT&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fromClause&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FROM CUSTOMER&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;whereClause&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WHERE CREDIT &amp;gt; :credit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pageSize&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;parameterValues&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;map&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;entry&lt;/span> &lt;span style="color:#a6e22e">key=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;statusCode&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;PE&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;entry&lt;/span> &lt;span style="color:#a6e22e">key=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;credit&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#{jobParameters[credit]}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;entry&lt;/span> &lt;span style="color:#a6e22e">key=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;type&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;COLLECTION&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/map&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="junittest-구성-및-수행">JunitTest 구성 및 수행&lt;/h3>
&lt;h4 id="junittest-구성">JunitTest 구성&lt;/h4>
&lt;p>&lt;b>Delimited 예제를 수행하고 배치작업 결과에 대한 검증을 위해 다음과 같이 @Test를 구성하였다.&lt;/b>&lt;/p></description></item><item><title>Job</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-job/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-job/</guid><description>&lt;h1 id="job">Job&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Job은 배치작업 전체의 중심 개념으로 배치작업 자체를 의미한다. Job은 실제 프로세스가 진행되는 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/batch-core-step/">Step&lt;/a>


 들을 최상단에서 포함하고 있으며, Job의 실행은 배치작업 전체의 실행을 의미한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;ul>
&lt;li>Job은 배치작업 과정 전체를 캡슐화하는 개념이며, 전체 계층 구조의 최상단이다.&lt;/li>
&lt;li>특정 Job은 각각의 JobParameters에 따라 JobInstance를 생성하며, 한번의 Job 시도마다 JobExecution을 생성한다.&lt;/li>
&lt;li>Job은 반드시 한개 이상의 Step으로 구성된다.&lt;/li>
&lt;/ul>
&lt;p>아래 그림을 보면, &amp;lsquo;EndOfDay&amp;rsquo;라는 Job이 있고 &amp;lsquo;2012/10/01&amp;rsquo;이라는 JobParameter를 통해 JobInstance가 생성되었다. 그리고 &amp;lsquo;EndOfDay&amp;rsquo; Job의 첫번째 시도를 의미하는 JobExecution이 생성되는 것을 볼 수 있다.&lt;/p></description></item><item><title>JobExplorer</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-job_explorer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-job_explorer/</guid><description/></item><item><title>작업그룹 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-job_group_mgmt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-job_group_mgmt/</guid><description>&lt;h1 id="작업그룹-예제">작업그룹 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 수행 시, 업무에 따라 필요한 일련의 Job들을 구분하기 위해서 이를 카테고리화 하여 관리 하는 기능을 보여주는 예제이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>작업그룹 예제에서는 다른 예제에서 사용되는 delegatingJob 을 사용한다.&lt;/b>&lt;/p>
&lt;p>Job 의 구성은 일반적인 Chunk 설정이 있다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delegateJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delegateStep1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;reader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;writer&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="launcher-설정">Launcher 설정&lt;/h4>
&lt;p>&lt;b>작업그룹 예제의 Launcher 설정 파일인 group-job-launcher-context 를 확인한다.&lt;/b>&lt;/p>
&lt;p>✔ Job 그룹기능을 사용하기 위해서는 JobRegistryBeanPostProcessor 클래스와 관련한 빈에 ‘groupName’ 이라는 프로퍼티로 그룹명을 추가하면 된다.&lt;/p></description></item><item><title>JobLauncher</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-execution-job_launcher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-execution-job_launcher/</guid><description>&lt;h1 id="joblauncher">JobLauncher&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>JobLauncher는 배치작업을 실행시키는 역할을 한다. Job과 Job Parameters를 이용하여 요청된 배치 작업을 수행한 후 JobExecution을 반환한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>JobLauncher 인터페이스를 보면 Job과 Job Parameter를 이용하여 요청된 Job을 수행한 후 JobExecution을 반환되는 run메소드가 정의되어 있다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">JobLauncher&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> JobExecution &lt;span style="color:#a6e22e">run&lt;/span>(Job job, JobParameters jobParameters) &lt;span style="color:#66d9ef">throws&lt;/span> JobExecutionAlreadyRunningException,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			JobRestartException, JobInstanceAlreadyCompleteException, JobParametersInvalidException;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>JobLauncher 인터페이스의 기본 구현 클래스로는 SimpleJobLauncher이 제공된다. SimpleJobLauncher클래스는 JobName과 JobParameter를 이용하여 JobRepository에서 Job의 실행시도를 나타내는 JobExecution을 획득하고 작업을 수행한다.&lt;/p>
&lt;p>이를 이용한 jobLauncher 설정은 아래와 같다. JobExecution을 획득하기 위한 



 









 
 
 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/batch-execution-job_launcherbatch-execution-job-repository.md">jobRepository&lt;/a>


의 설정이 필수이다.&lt;/p></description></item><item><title>JobOperator</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-job_operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-job_operator/</guid><description/></item><item><title>JobRegistry</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-job_registry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-job_registry/</guid><description>&lt;h1 id="jobregistry">JobRegistry&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>JobRegistry는 생성된 Job을 자동으로 Map형태로 저장하여 관리(추가, 삭제 등)한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>JobRegistry는 필수는 아니지만 context에서 Job을 추적하거나 다른 곳에서 생성된 Job을 application context의 중앙에 모을 때 유용하다. 등록된 Job의 이름과 속성들을 조작할 수 있으며 job name과 job instance의 Map의 형태로 이루워져 있다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobRegistry&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.core.configuration.support.MapJobRegistry&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>JobRegistry에 Job을 자동으로 등록하는 방법은 두 가지가 있다.&lt;/p>
&lt;ul>
&lt;li>JobRegistryBeanPostProcessor 사용&lt;/li>
&lt;li>AutomaticJobRegistrar 사용&lt;/li>
&lt;/ul>
&lt;h3 id="jobregistrybeanpostprocessor">JobRegistryBeanPostProcessor&lt;/h3>
&lt;p>이것은 Bean post-processor으로 Application Context가 올라가면서 bean 등록 시, 자동으로 JobRegistry에 Job을 등록 시켜준다.&lt;/p></description></item><item><title>JobRepository</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-execution-job_repository/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-execution-job_repository/</guid><description>&lt;h1 id="jobrepository">JobRepository&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>JobRepository는 배치 작업 중의 정보를 저장하는 역할을 한다. 어떠한 Job이 언제 수행되었고, 언제 끝났으며, 몇 번이 실행되었고 실행에 대한 결과가 어떤지 등의 배치 작업의 수행과 관련된 모든 meta data가 저장되어 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>JobRepository은 수행되는 Job에 대한 정보를 담고 있는 저장소로 배치작업의 지속성 메커니즘이다. JobRepository는 Spring Batch에서 JobExecution와 StepExecution 등과 같은 지속성을 가진 정보의 기본 CRUD작업에 사용된다. 배치작업이 처음 실행되면 JobRepository에서 JobExecution이 생성되고 배치작업이 실행되는 동안 StepExecution 및 JobExecution의 정보들이 JobRepository에 저장되고 갱신되어 지속된다.&lt;/p></description></item><item><title>기존 업무 재사용 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-job_reuse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-job_reuse/</guid><description>&lt;h1 id="기존-업무-재사용-예제">기존 업무 재사용 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>기존 업무를 배치의 ItemReader나 ItemWriter로 사용한 예제이다. 스프링 배치에서 제공하는 Item의 Adapter를 사용하면 XML설정만으로도 기존 업무를 손쉽게 사용할 수 있다. 스프링 배치에서 제공하는 Adapter 중에 ItemReaderAdapter와 PropertyExtractingDelegatingItemWriter클래스를 사용하여 기존 업무를 사용하는 기능을 예제로 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>기존 업무 재사용 예제의 Job 설정파일인 delegatingJob.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>아래의 예제에서는 targetObject로 정의된 기존 업무인 PersonService를 재사용한다. read시에는 targetMethod로 정의된 getData 메소드를 실행하고, write시에는 targetMethod로 정의된 processProcessPerson 메소드를 실행한다.&lt;/p></description></item><item><title>JobRunner</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-execution-job_runner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-execution-job_runner/</guid><description>&lt;h1 id="jobrunner">JobRunner&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>JobRunner는 외부 실행 모듈과 JobLauncher를 연결해주는 모듈로, 용도에 맞게 구현이 필요하다. 전자정부 표준프레임워크에서는 작업실행 유형에 따라 미리 JobRunner를 미리 구현한 표준 Batch Runner를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>배치작업의 실행 유형에 따라 아래와 같이 3가지의 Batch Runner를 제공한다.&lt;/p>
&lt;ul>
&lt;li>EgovBatchRunner: Web, Java Application 등을 이용하여 범용적으로 실행되는 일괄처리 작업에 사용한다.&lt;/li>
&lt;li>EgovCommandLineRunner: 외부 프로그램(Windows: / Unix/Linux: crontab 등)이나 명령 프롬프트(Windows: bat / Unix/Linux: Shell)에서 독립적으로 실행되는 배치작업에 사용한다.&lt;/li>
&lt;li>EgovSchedulerRunner: 주기적으로 실행되어야 하는 일괄처리 작업에 사용한다.&lt;/li>
&lt;/ul>
&lt;p>각 Batch Runner가 제공하는 기능은 아래와 같다.&lt;/p></description></item><item><title>JPA Configuration</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-jpa_configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-jpa_configuration/</guid><description>&lt;h1 id="jpa-configuration">JPA Configuration&lt;/h1>
&lt;p>JPA는 실행 속성을 포함하고 있는 persistence.xml을 기반으로 하여 동작하도록 구성되어 있다. persistence.xml 파일의 주요 구성 요소와 속성 정의 방법에 대해 살펴보기로 한다. 먼저, persistence.xml 파일은 가장 상위에 &amp;lt;persistence&amp;gt; 태그를 포함하고 있으며 &amp;lt;persistence&amp;gt; 태그 내에 여러개의 &amp;lt;persistence-unit&amp;gt;를 포함할 수 있다.&lt;/p>
&lt;h2 id="persistence-unit">Persistence Unit&lt;/h2>
&lt;p>Persistence Unit에 포함하고 있는 주요한 엔티티들은 다음과 같다.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>element 명&lt;/th>
 &lt;th>설 명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>provider&lt;/td>
 &lt;td>Entity Manager를 지원하는 Provider 클래스&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>mapping-file&lt;/td>
 &lt;td>매핑정보 파일&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>class&lt;/td>
 &lt;td>Entity 클래스 리스트, @Entity, @Embeddable or @MappedSuperclass 를 포함하고 있는 클래스&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>exclude-unlisted-classes&lt;/td>
 &lt;td>class 에서 정의하지 않은 것은 제외&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>properties&lt;/td>
 &lt;td>JPA 구현체 프로퍼티 리스트&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>상세한 정보는 



 









 



&lt;a href="http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd">스키마&lt;/a>


 참조 아래는 위의 항목을 포함하고 있는 설정파일 예입니다.&lt;/p></description></item><item><title>Spring Data Repository</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/jpa-spring-data/jpa-repository/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/jpa-spring-data/jpa-repository/</guid><description>&lt;h1 id="repository">Repository&lt;/h1>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>일반적으로 Data Access Layer를 구현하기 위해서는 상당량의 코드를 작성해야 한다. Spring Data에서는 Repository를 추상화하여 다양한 저장소에 접근하기 위한 Data Access Layer 구현 코드를 최소화함으로써 개발생산성을 높일 수 있도록 한다. 이는 Query Method를 통해 가능한데 Query Method란 메소드명만 가지고 쿼리를 만들 수 있다는 것이다. 특정 규칙에 맞게 메소드를 작성하면 개발자가 따로 Data Access 클래스를 만들지 않아도 Spring Data가 대신하여 해당 Database와 자동으로 매핑하여 결과를 가져다준다.&lt;/p>
&lt;p>Repository 인터페이스를 상속받아 CRUD 관련 메소드들을 제공하는 CrudRepository 인터페이스와 Paging 처리 기능이 제공되는 PagingAndSortingRepository 인터페이스를 살펴보도록 하겠다.&lt;/p></description></item><item><title>jQuery 가이드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/jquery-ajax/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/jquery-ajax/</guid><description>&lt;h1 id="jquery-가이드">jQuery 가이드&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>jQuery는 브라우저 호환성이 있는 다양한 기능을 제공하는 자바스크립트 라이브러리이다. jQuery에서 제공하는 오픈 라이브러리들을 통해 java script로 ajax, event, 다양한 ui 기능 등을 구현할 수 있으며 위키가이드에서는 jQuery의 기본적인 몇가지 기능(ajax, callback함수, post호출 등)에 대하여 살펴본다.&lt;/p>
&lt;p>자세한 내용은 



 









 



&lt;a href="https://jquery.com/">jQuery 사이트&lt;/a>


를 살펴보도록 한다.&lt;/p>
&lt;p>jQuery ajax의 다양한 기능들 중 기본Ajax기능과 응용을 통한 콤보박스, Select박스의 간단한 화면처리에 대하여 가이드한다.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>jQuery ajax 기본기능&lt;/p>
&lt;ul>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/jquery-ajax/#jqueryajax">jQuery.ajax()&lt;/a>


&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/jquery-ajax/#jqueryget">jQuery.get()&lt;/a>


&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/jquery-ajax/#jquerypost">jQuery.post()&lt;/a>


&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>jQuery ajax 응용&lt;/p>
&lt;ul>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/jquery-ajax/#select-box">Select box&lt;/a>


&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/jquery-ajax/#tabs">Tabs&lt;/a>


&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="설정">설정&lt;/h2>
&lt;p>jQuery를 이용하기 위해서는 jQuery java script를 추가해주어야 한다. 추가하는 방법은 jquery url을 직접 명시하는 경우, 프로젝트에 jquery java script를 직접 추가하여 참조하는 경우가 있다.&lt;/p></description></item><item><title>HTML5 CSS3.0 JavaScript Module App Framework 기본 활용</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/html5-css3.0-javascript-module-app-framework-basic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/html5-css3.0-javascript-module-app-framework-basic/</guid><description>&lt;h1 id="html5-css30-javascript-module-app-framework-기본-활용">HTML5 CSS3.0 JavaScript Module App Framework 기본 활용&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부에서 효율적인 스마트 전자정부 기반 시스템의 구축•운영을 위해 전자정부의 서비스 품질 UX 레이어로 &lt;strong>UI/UX Controller Component&lt;/strong>, &lt;strong>HTML5&lt;/strong>, &lt;strong>CSS3&lt;/strong>, &lt;strong>JavaScript Module App Framework&lt;/strong> 서비스를 제공한다.
오픈소스는 JQuery Mobile을 채택하였으며 jQuery Mobile은 html5, CSS3, javascript를 제공한다. 이를 Customizing 하여 UI 레이어의 기능을 사용하며 내용은 아래와 같다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>UI/UX Controller Component&lt;/strong> : 모바일 웹 사용자 환경(UX/UI)에 대한 유연한 대응을 위해 Touch Optimized 된 필수 UI 컨트롤러 컴포넌트를 제공한다.&lt;/li>
&lt;li>&lt;strong>HTML5&lt;/strong> : 모바일 웹 페이지 구성 시 사용할 수 있는 마크업 언어로서 모바일 특화 태그 및 디바이스 API를 제공한다.&lt;/li>
&lt;li>&lt;strong>CSS3&lt;/strong> : 모바일 기기 및 브라우저에 따라 적합한 컴포넌트가 보이게 하는 기능을 제공한다.&lt;/li>
&lt;li>&lt;strong>JavaScript Module App Framework&lt;/strong> : UX/UI controller component의 효율성을 보장하는 javascript 및 Json 구조를 제공한다.&lt;/li>
&lt;/ul>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="기본-활용-구조">기본 활용 구조&lt;/h3>
&lt;p>전자정부 모바일 표준프레임워크 실행환경은 기존 전자정부 표준프레임워크의 디렉터리 구조 및 표준을 준수하고 있으며, 모바일 웹 개발에 편의를 제공하기 위해 하위 디렉터리 구조를 다음과 같이 구성하고 있다.&lt;/p></description></item><item><title>JSR 330 표준 어노테이션 사용하기</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-jsr_330_standard_annotations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-jsr_330_standard_annotations/</guid><description>&lt;h1 id="jsr-330-표준-어노테이션-사용하기">JSR 330 표준 어노테이션 사용하기&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>스프링 3.0부터 JSR-330 표준 어노테이션(의존성 주입)을 지원한다. 이 어노테이션들은 스프링 어노테이션들과 같은 방법으로 스캔된다. 이 어노테이션들을 사용하기 위해서는 클래스패스에 관련 jar 파일들을 가지고 있어야 한다.&lt;br>
Maven을 사용한다면 Maven Repository(



 









 



&lt;a href="https://mvnrepository.com/artifact/javax.inject/javax.inject/1">https://mvnrepository.com/artifact/javax.inject/javax.inject/1&lt;/a>


)에서 javax.inject라는 아티펙트가 제공된다. pom.xml 파일에 아래의 의존성을 추가하여 사용할 수 있다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>javax.inject&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>javax.inject&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="1-inject-와-named-를-이용한-의존성-주입">1. @Inject 와 @Named 를 이용한 의존성 주입&lt;/h3>
&lt;p>@Autowired를 대신하여 @javax.inject.Inject를 아래와 같이 사용할 수 있다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> javax.inject.Inject;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SimpleMovieLister&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> MovieFinder movieFinder;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Inject&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setMovieFinder&lt;/span>(MovieFinder movieFinder) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">movieFinder&lt;/span> &lt;span style="color:#f92672">=&lt;/span> movieFinder;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">listMovies&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">movieFinder&lt;/span>.&lt;span style="color:#a6e22e">findMovies&lt;/span>(...);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>@Autowired와 같이 @Inject를 필드 수준, 함수 수준, 생성자 인자 수준으로 사용할 수 있고, 주입 지점을 Provider로 선언할 수 있으며 Provider.get() 호출을 통해 근접 범위의 Bean들에 대한 요청 시 접근 또는 다른 Bean에 대한 지연된 접근을 허용할 수 있다.&lt;/p></description></item><item><title>배치실행환경 예제 JUnit Test 설명</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-run_junit_test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-run_junit_test/</guid><description>&lt;h1 id="배치실행환경-예제-junit-test-설명">배치실행환경 예제 JUnit Test 설명&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치실행환경 예제에서는 JUnit을 이용하여 배치를 수행하고 성공여부 판단 및 테스트 내용 확인을 한다. 초보 사용자의 이해를 돕기위해 예제에서 공통으로 사용하는 JUnitTest의 기본설정과 테스트 수행방법을 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="예제-junit-test-기본-구조">예제 JUnit Test 기본 구조&lt;/h3>
&lt;h4 id="contextconfiguration">@ContextConfiguration&lt;/h4>
&lt;p>ContextConfiguration 은 컨텍스트를 얻어 그 내용을 참조하는 역할을 하며, 배치실행환경 예제에서는 배치수행에 필요한 설정파일들을 여기서 참조하도록 설정되어 있다.&lt;/p>
&lt;p>✔ Launcher설정파일, Job설정파일, JobLauncherTestUtils를 사용하기 위한 별도의 설정파일(ex.job-runner-context.xml) 등이 명시된다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@ContextConfiguration&lt;/span>(locations &lt;span style="color:#f92672">=&lt;/span> { &lt;span style="color:#e6db74">&amp;#34;/egovframework/batch/simple-job-launcher-context.xml&amp;#34;&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#e6db74">&amp;#34;/egovframework/batch/jobs/parallelJob.xml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#e6db74">&amp;#34;/egovframework/batch/job-runner-context.xml&amp;#34;&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EgovParallelJobFunctionalTests&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>✔ 공통으로 사용되는 설정파일이 있을 경우, 다음과 같이 부모클래스에 담고 이를 상속받아 사용할 수 있다.&lt;/p></description></item><item><title>Listener (Pre/Post Processing)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-listener/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-listener/</guid><description>&lt;h1 id="listener-prepost-processing">Listener (Pre/Post Processing)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 수행시 Job을 구성하는 각 단계(Job, Step, Chunk, Read, Process, Write)에서 이벤트설정을 통해 다양한 추가구성을 할 수 있다. 이벤트는 Listener를 활용하여 설정하고, 배치 수행중 설정한 Listener를 접하게 되면 관련된 이벤트를 수행하게 된다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="joblistenerintercepting-job-execution">JobListener(Intercepting Job Execution)&lt;/h3>
&lt;p>Job 실행 과정에서, 사용자가 정의한 코드가 실행 될 수 있도록 Job의 라이프사이클에서 다양한 이벤트로 알려주는 것은 유용하다.SimpleJob는 적절한 시간에 JobListener를 호출하도록 한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">JobExecutionListener&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">beforeJob&lt;/span>(JobExecution jobExecution);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">afterJob&lt;/span>(JobExecution jobExecution);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>JobListeners는 Job의 리스너들을 통해 SimpleJob에 추가 될 수 있다.&lt;/p></description></item><item><title>배치 실행로그 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-batch_exec_mgmt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-batch_exec_mgmt/</guid><description>&lt;h1 id="배치-실행로그-예제">배치 실행로그 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 수행 시, 처리되는 배치관련 정보들에 대한 기록(Log)을 Registry 와 DB에 저장되고 이를 확인하는 과정을 보여주는 예제이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>배치 실행로그 예제의 Job 설정 파일인 logManagementJob.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>배치 실행로그 예제를 위해 특별히 Job을 설정하는 내용은 없다. 이 예제에서 제공하는 Job의 상세 내용은 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-skip_mgmt/">건너뛰기(Skip)기능 예제&lt;/a>


의 Job 설정과 같으므로 이를 참고한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;logManagementJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">incrementer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;incrementer&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parent=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;baseStep&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileItemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">processor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tradeProcessor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tradeWriter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">skip-limit=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;skippable-exception-classes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;include&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.FlatFileParseException&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;include&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.WriteFailedException&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/skippable-exception-classes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/chunk&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;next&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;COMPLETED WITH SKIPS&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">to=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;errorPrint&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;fail&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FAILED&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">exit-code=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FAILED&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;errorPrint&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;tasklet&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;errorLogTasklet&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="junittest-구성-및-수행">JunitTest 구성 및 수행&lt;/h3>
&lt;h4 id="junittest-구성">JunitTest 구성&lt;/h4>
&lt;p>&lt;b>logManagementJob 설정과 관련 클래스들로 Junit Test를 수행한다. 이 때 배치가 수행되고, 관련된 내용을 확인할 수 있다.&lt;/b>&lt;/p></description></item><item><title>Log4j2</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/logging-log4j2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/logging-log4j2/</guid><description>&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="log4j-2-변경사항">Log4j 2 변경사항&lt;/h3>
&lt;ul>
&lt;li>Java 6 이상 필요&lt;/li>
&lt;li>XML 환경설정 단순화 (Log4j 1.x 와 호환되지 않음)&lt;/li>
&lt;li>Property 파일을 통한 환경설정을 지원하지 않음&lt;/li>
&lt;li>JSON을 통한 환경설정 지원&lt;/li>
&lt;li>파라미터 방식으로 Log Message 출력&lt;/li>
&lt;li>환경설정 변경시 서버 재기동 없이 자동 재호출&lt;/li>
&lt;li>필터링 기능 향상&lt;/li>
&lt;li>NoSQLAppender 등의 다양한 Appender 제공&lt;/li>
&lt;/ul>
&lt;h3 id="log4j-2-추가기능">Log4j 2 추가기능&lt;/h3>
&lt;h4 id="1-substituting-parameters">1. Substituting Parameters&lt;/h4>
&lt;p>로그 메시지를 구성하는 방법으로, 기존 문자열 결합 방식과 달리 {} 안에 파라미터를 대입하여 로그 메시지를 생성하는 방법이다.&lt;br>
아래 코드는 출력할 로그 메시지를 완성하기 전에 Log Level을 체크하고, isDebugEnabled인 경우에만 메서드를 수행한다.&lt;/p></description></item><item><title>Logback logging</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/intro/batch-support-logback_logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/intro/batch-support-logback_logging/</guid><description>&lt;h1 id="logback-logging">Logback logging&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 처리시 로깅 처리를 위해 log4j2를 지원하고 있지만 경량화된 로깅 처리를 위해 Logback 로깅 처리를 지원한다&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="logback-pomxml-설정">Logback pom.xml 설정&lt;/h3>
&lt;p>log4j, commons-logging 관련 라이브러리를 exclusion 처리하고, Logback 라이브러리를 등록한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- log4j 관련 exclusion --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>egovframework.rte&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>egovframework.rte.bat.core&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>${egovframework.rte.version}&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;exclusions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>log4j-core&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.logging.log4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>log4j-slf4j-impl&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.logging.log4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>log4j-over-slf4j&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.slf4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>commons-logging&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>commons-logging&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/exclusions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- commons-logging 관련 exclusion --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>commons-logging&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>commons-logging&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- logback 관련 라이브러리 등록 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>ch.qos.logback&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>logback-core&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.1.7&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>ch.qos.logback&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>logback-classic&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.1.7&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.slf4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>jcl-over-slf4j&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.7.21&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="sqlite-사용">SQLite 사용&lt;/h3>
&lt;p>logback 사용을 위해 logback.xml를 설정이 선행 되어야 한다.
설정관련 자세한 사항을 아래 링크 참고&lt;/p></description></item><item><title>Logging</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/</guid><description>&lt;h1 id="logging-서비스">Logging 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크 3.0부터는 다양한 Logging Framework와 연계할 수 있도록 &lt;strong>SLF4J&lt;/strong>를 도입하였고,&lt;br>
Logging 구현체는 &lt;strong>Log4j 2&lt;/strong>를 이용하여 Logging을 수행한다.&lt;/p>
&lt;p>Logging 서비스는 시스템의 개발이나 운용시 발생할 수 있는 사항에 대해서,&lt;br>
시스템의 외부 저장소에 기록하여 시스템의 상황을 쉽게 파악할 수 있도록 도와준다.&lt;br>
뿐만 아니라 테스팅 코드와 운영 코드를 동일하게 가져가면서 로깅을 선언적으로 관리할 수 있다.&lt;br>
과도한 Logging은 운영시 성능 오버헤드를 발생시킬 수 있으므로, 최소화할 수 있는 메커니즘이 필요하다.&lt;/p>
&lt;p>많은 개발자가 Log을 출력하기 위해 일반적으로 사용하는 방식은 System.out.println()이다.&lt;br>
하지만 이 방식은 간편한 반면, 다음과 같은 이유로 권장하지 않는다.&lt;/p></description></item><item><title>Mail 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/mail/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/mail/</guid><description>&lt;h1 id="mail-서비스">Mail 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>&lt;strong>전자정부 프레임워크&lt;/strong>에서는 이메일 발송을 쉽게 처리하기 위해 Jakarta Commons Email &lt;acronym title="Application Programming Interface">API&lt;/acronym>를 사용하고 있는데 Commons Email은 내부적으로 Java Mail API와 JavaBeans Activation API 를 제공하여 오픈 소스로 채택하였다&lt;/p>
&lt;p>Apache Commons-Email은 Java Mail API를 근간으로 좀더 심플하게 메일을 보내는 방안을 제시한다.&lt;/p>
&lt;p>Commons Email API는 메일 발송을 처리해주는 SimpleEmail, HtmlEmail과 같은 클래스를 제공하고 있으며, 이들 클래스를 사용하여 일반 텍스트메일, &lt;acronym title="HyperText Markup Language">HTML&lt;/acronym> 메일, 첨부 메일 등을 매우 간단(simple)하게 발송할 수 있다.&lt;/p></description></item><item><title>Mail 서비스 예제(Mail Service Example)</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/mail-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/mail-example/</guid><description>&lt;h1 id="메일-서비스-예제mail-service-example">메일 서비스 예제(Mail Service Example)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크를 이용하여 메일을 발송하는 기능에 대한 예제이다. 사전에 정의된 property를 이용하여 메일 서버를 정의하고, 자바 코드를 이용하여 예제 메일을 발송한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;ol>
&lt;li>해당 예제를 설치하고 실행하면 다음과 같은 메일보내기가 가능한 페이지가 호출된다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/mail-1.png" alt="mail-1" >
&lt;/p>
&lt;ol start="2">
&lt;li>이름과 이메일란을 작성하고 [메일보내기]를 클릭한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/mail-2.png" alt="mail-2" >
&lt;/p>
&lt;ol start="3">
&lt;li>성공적으로 메일이 발송되면 성공 메세지를 출력한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/mail-3.png" alt="mail-3" >
&lt;/p>
&lt;h2 id="참고-자료">참고 자료&lt;/h2>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer/mail/">Mail 서비스&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer/property/property-service/">Property 서비스&lt;/a>


&lt;/li>
&lt;/ul></description></item><item><title>Mapper XML Files</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-mapper_xml_files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-mapper_xml_files/</guid><description>&lt;h1 id="mapper-xml-file">Mapper XML File&lt;/h1>
&lt;p>MyBatis Mapper XML (SQL Mapping XML) File은 실행할 SQL문을 정의해놓은 파일로서,&lt;br>
SQL문 실행을 위해 Parameter Object를 받아오거나 SQL문 실행 결과를 Result Object에 자동 바인딩하는 기능 등을 제공한다.&lt;/p>
&lt;h2 id="mapper-xml-sql-mapping-xml">Mapper XML (SQL Mapping XML)&lt;/h2>
&lt;p>Mapper XML File에는 다음과 같은 요소들을 사용할 수 있다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>&amp;lt;select&amp;gt;&lt;/code>&lt;/strong>: 매핑된 SELECT 구문&lt;/li>
&lt;li>&lt;strong>&lt;code>&amp;lt;insert&amp;gt;&lt;/code>&lt;/strong>: 매핑된 INSERT 구문&lt;/li>
&lt;li>&lt;strong>&lt;code>&amp;lt;update&amp;gt;&lt;/code>&lt;/strong>: 매핑된 UPDATE 구문&lt;/li>
&lt;li>&lt;strong>&lt;code>&amp;lt;delete&amp;gt;&lt;/code>&lt;/strong>: 매핑된 DELETE 구문&lt;/li>
&lt;li>&lt;strong>&lt;code>&amp;lt;sql&amp;gt;&lt;/code>&lt;/strong>: 다른 구문에서 재사용하기 위한 SQL 조각&lt;/li>
&lt;li>&lt;strong>&lt;code>&amp;lt;resultMap&amp;gt;&lt;/code>&lt;/strong>: 데이터베이스 결과 데이터를 객체에 매핑하는 방법을 정의&lt;/li>
&lt;li>&lt;strong>&lt;code>&amp;lt;cache&amp;gt;&lt;/code>&lt;/strong>: 자신의 namespace를 위한 캐시설정&lt;/li>
&lt;li>&lt;strong>&lt;code>&amp;lt;cache-ref&amp;gt;&lt;/code>&lt;/strong>: 다른 namespace의 캐시설정을 참조&lt;/li>
&lt;/ul>
&lt;h3 id="sample-configuration">Sample Configuration&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE mapper PUBLIC &amp;#34;-//mybatis.org//DTD Mapper 3.0//EN&amp;#34; &amp;#34;http://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;#34;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;mapper&lt;/span> &lt;span style="color:#a6e22e">namespace=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.dataaccess.DeptMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#75715e">&amp;lt;!-- MyBatis에서는 namespace를 필수로 설정해야함 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;resultMap&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;deptResult&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.dataaccess.vo.DeptVO&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#75715e">&amp;lt;!-- [주의] iBatis의 class속성 -&amp;gt; type속성으로 변경 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;result&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;deptNo&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;DEPT_NO&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;result&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;deptName&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;DEPT_NAME&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;result&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;loc&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;LOC&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/resultMap&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;select&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;selectDept&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parameterType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;int&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">resultMap=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;deptResult&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#75715e">&amp;lt;!-- [주의] iBatis의 parameterClass속성 -&amp;gt; parameterType속성으로 변경 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;![CDATA[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> select DEPT_NO, DEPT_NAME, LOC
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> from DEPT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> where DEPT_NO = #{deptNo}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ]]&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;insert&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;insertDept&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parameterType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.dataaccess.vo.DeptVO&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;![CDATA[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> insert into DEPT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> (DEPT_NO, DEPT_NAME, LOC)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> values (#{deptNo}, #{deptName}, #{loc})
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ]]&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/insert&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;update&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;updateDept&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parameterType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.dataaccess.vo.DeptVO&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;![CDATA[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> update DEPT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> set DEPT_NAME = #{deptName},
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> LOC = #{loc}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> where DEPT_NO = #{deptNo}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ]]&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/update&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;delete&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;deleteDept&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parameterType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.dataaccess.vo.DeptVO&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;![CDATA[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> delete from DEPT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> where DEPT_NO = #{deptNo}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ]]&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/delete&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/mapper&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="select">&lt;code>&amp;lt;select&amp;gt;&lt;/code>&lt;/h3>
&lt;p>&lt;strong>&lt;code>&amp;lt;select&amp;gt;&lt;/code>는 SELECT문을 작성할 때 사용되는 요소&lt;/strong>로, 데이터베이스에서 조회한 결과를 오브젝트에 매핑하는 역할을 한다.&lt;/p></description></item><item><title>Marshalling/Unmarshallig 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/marshalling-unmarshallig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/marshalling-unmarshallig/</guid><description>&lt;h1 id="marshallingunmarshallig-서비스">Marshalling/Unmarshallig 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Object/XML Mapping, 줄여서 O/X mapping은 Object를 XML문서로 변환하는데 이를 &lt;strong>XML Mashalling&lt;/strong> 또는 &lt;strong>Marshalling&lt;/strong> 이다. 반대로 XML문서를 Object로 변환하는 것은 &lt;strong>Unmarshalling&lt;/strong> 이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="spring-web-service-oxm">Spring Web Service OXM&lt;/h3>
&lt;pre tabindex="0">&lt;code>Client &amp;lt;------ XML ------&amp;gt; Server
&lt;/code>&lt;/pre>&lt;p>WS는 Server와 Client 두 대상 간의 데이터를 주고받는 기술 중 하나이다. 정보를 요청하는쪽이 Client이다.(Client는 Server가 될 수도 있고 일반 사용자가 될 수도 있다.) 요청한 정보를 받아서 알맞게 처리 후 결과값을 리턴하는 쪽이 Server이다.&lt;/p>
&lt;pre tabindex="0">&lt;code>Client(OXM) &amp;lt;------ XML(WSDL) ------&amp;gt; (OXM)Server
&lt;/code>&lt;/pre>&lt;p>WS는 XML(WSDL)형식으로 데이터를 주고받는다. 따라서 이 XML를 객체화 하거나 객체를 XML화 해야 한다. 그것이 Marshalling,Unmarshalling이다. OXM Utill은 JAXB,Castor,XMLBeans,JiBX,XStream..등 여러 가지가 있다.&lt;/p></description></item><item><title>개인빌드(Maven)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/maven/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/maven/</guid><description>&lt;h1 id="개인-빌드">개인 빌드&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>개인 빌드란 소프트웨어 개발자가 소프트웨어 소스 코드를 작성하고 이를 자신의 로컬 PC에서 컴파일 하여 실행 코드로 변환하는 일련의 과정을 말하며 주로 빌드 도구를 사용하여 실행한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>대표적인 오픈소스 빌드 도구로는 make, ant, maven 등이 있으며 &lt;strong>전자정부 표준 프레임워크에서는 maven을 기본 빌드 도구로 사용&lt;/strong>한다.&lt;/p>
&lt;h3 id="오픈-소스-빌드-도구">오픈 소스 빌드 도구&lt;/h3>
&lt;ul>
&lt;li>



 









 



&lt;a href="http://www.gnu.org/software/make/">GNU Make&lt;/a>



make는 소프트웨어 개발에서 Unix계열 OS에서 주로 사용되는 프로그램 빌드 도구이다.&lt;/li>
&lt;li>



 









 



&lt;a href="http://ant.apache.org/">Apache Ant&lt;/a>



Ant는 &lt;strong>자바 기반의 빌드 도구&lt;/strong>로 자바 언어를 사용하는 프로젝트에서 make를 사용하면서 겪게되는 많은 어려움을 줄여주고 더 많은 기능을 제공한다.
&lt;ul>
&lt;li>자바 소스 파일 컴피일&lt;/li>
&lt;li>jar, war, ear, zip 파일의 생성&lt;/li>
&lt;li>javadoc을 실행하여 도움말 생성&lt;/li>
&lt;li>각각의 작업에 대한 의존성 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>



 









 



&lt;a href="http://maven.apache.org/">Maven - 전자정부 표준 프레임워크 기본 빌드 도구&lt;/a>



Maven은 &lt;strong>프로젝트 관리 도구&lt;/strong>로 빌드 기능의 수행 뿐 아니라 프로젝트 리포팅, documentation 생성 기능을 제공한다.&lt;/li>
&lt;li>



 









 



&lt;a href="http://gradle.org/">Gradle&lt;/a>



Gradle은 groovy 언어로 개발된 &lt;strong>프로젝트 관리 도구&lt;/strong>로 코드기반의 스크립트를 이용하여 빌드, 배포, 리포팅, documentation 생성 기능을 제공한다.&lt;/li>
&lt;/ul>
&lt;h3 id="maven">Maven&lt;/h3>
&lt;p>메이븐은 프로젝트 객체 모델(Project Object Model : POM)이라는 개념을 바탕으로 프로젝트 의존성 관리, 라이브러리 관리, 프로젝트 생명 주기 관리 기능 등을 제공하는 &lt;strong>프로젝트 관리 도구&lt;/strong>이다. 또한 플러그인을 기반으로 소스 코드로부터 배포 가능한 산출물을 만들어 내는 &lt;strong>빌드 기능&lt;/strong> 뿐만 아니라 레포팅 및 documentation 작성 기능 등을 제공한다.&lt;/p></description></item><item><title>Maven에서 생성한 테스트 결과 HTML 리포트</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/maven-test-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/maven-test-report/</guid><description>&lt;h1 id="maven에서-생성한-테스트-결과-html-리포트">Maven에서 생성한 테스트 결과 HTML 리포트&lt;/h1>
&lt;p>Maven을 통해 테스트를 실행하면 다음과 같은 항목들이 포함된 HTML 리포트가 생성됩니다.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>항목&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Tests&lt;/td>
 &lt;td>전체 TestCase 수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Errors&lt;/td>
 &lt;td>전체 에러가 발생한 TestCase 수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Failures&lt;/td>
 &lt;td>전체 실패한 TestCase 수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Skipped&lt;/td>
 &lt;td>전체 테스트를 수행하지 않은 TestCase 수 (@Ignore 설정된 TestCase)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Success Rate&lt;/td>
 &lt;td>전체 성공한 TestCase 백분율&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Time&lt;/td>
 &lt;td>TestCase가 수행되는 걸린 초단위 시간&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>Integration 서비스 Metadata</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-metadata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-metadata/</guid><description>&lt;h1 id="metadata">Metadata&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Integration 서비스 Metadata는 연계에 필요한 정보를 정의하고 있다.
본 장은 실제 Integration 서비스로 구현된 연계 Adaptor를 사용하는 방식에 직접적인 도움을 주지는 않는다. 실제 사용법은 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/integration-service-api/">연계 서비스 API&lt;/a>


에서 설명하고 있다. 단, 연계 서비스 API의 핵심 Interface인 EgovIntegrationService의 단위에 해당하는 연계등록정보와, 이와 관련된 기관, 시스템, 서비스 등의 Metadata를 이해하는 것은 API 사용에 도움이 될 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="논리모델">논리모델&lt;/h3>
&lt;p>Integration 서비스 Metadata의 논리모델은 연계를 위해 필요한 논리적인 정보를 정의한다.&lt;/p>
&lt;h4 id="논리erd">논리ERD&lt;/h4>
&lt;p>Integration 서비스 Metadata의 논리ERD 및 Entity 설명은 다음과 같다.&lt;/p></description></item><item><title>Mock Support</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/unit-test/mock-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/unit-test/mock-support/</guid><description>&lt;h1 id="mock-support">Mock Support&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Unit Test Case 작성 시 Mock 객체 (모의 객체)를 사용하는 방법에 대해 가이드한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="mock-객체의-의미">Mock 객체의 의미&lt;/h3>
&lt;p>Mock 객체(



 









 



&lt;a href="http://en.wikipedia.org/wiki/Mock_object">Mock Object - wikipedia&lt;/a>


, 



 









 



&lt;a href="http://endic.naver.com/search.nhn?query_utf=mock&amp;amp;kind=keyword">mock - 네이버 영어사전&lt;/a>


)는 Unit Test의 독립성(isolation)을 높여주기 위해 사용하며, 테스트하고자 코드와 관련이 있는 객체(collaborator)를 흉내내어 Unit Test를 수행할 수 있도록 도와주는 객체이다.&lt;/p>
&lt;p>다음과 같이 Program에서 Object라는 객체를 테스트하고자 할 경우, 그 Object는 다른 클래스와 관계를 갖고 있게 마련이다.&lt;br>
개발자는 Object 하나만을 테스트하고 싶고, 여러 가지 이유로 Collaborator1, Collaborator2, Collaborator3 객체를 사용할 수가 없다고 한다면,&lt;br>
컴파일에 지장이 없도록 Collaborator를 흉내내는 Mock 객체 (MockCollaborator1, MockCollaborator2, MockCollaborator3)를 생성하고 Object가 사용하는 메소드에 대해서만 원하는 동작을 정의한 뒤, Object를 테스트하는 것이다.&lt;/p></description></item><item><title>MongoDB</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-mongodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-mongodb/</guid><description>&lt;h1 id="mongodb">MongoDB&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring Data MongoDB 프로젝트는 MongoDB 문서 스타일 데이터 저장소를 사용하는 솔루션 개발에 Spring의 핵심 개념을 적용하여 문서를 저장하고 쿼리하기 위한 높은 수준의 추상화 템플릿을 제공한다. Spring 프레임워크에서 제공하는 JDBC 지원과 유사하다는 것을 알 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="데이터베이스-연동">데이터베이스 연동&lt;/h3>
&lt;p>Spring WebFlux에서 MongoDB 데이터베이스와 연결을 설정하고 관리하기 위해서는 ReactiveMongoDatabaseFactory 인터페이스의 구현클래스인 SimpleReactiveMongoDatabaseFactory 클래스를 사용하여, 연결 풀링이나 커넥션 관리 기능 등을 추상화하여 데이터 액세스 작업에 집중할 수 있게 한다.&lt;/p>
&lt;h4 id="실행환경-라이브러리">실행환경 라이브러리&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> org.egovframe.rte.psl.reactive.mongodb.connect;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EgovMongoDbConnectionFactory&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ReactiveMongoDatabaseFactory &lt;span style="color:#a6e22e">reactiveMongoDatabaseFactory&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ConnectionString connectionString &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ConnectionString(&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">mongoDbUrl&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MongoClientSettings mongoClientSettings &lt;span style="color:#f92672">=&lt;/span> MongoClientSettings.&lt;span style="color:#a6e22e">builder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">applyConnectionString&lt;/span>(connectionString).&lt;span style="color:#a6e22e">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SimpleReactiveMongoDatabaseFactory(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MongoClients.&lt;span style="color:#a6e22e">create&lt;/span>(mongoClientSettings), &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">mongoDbName&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="적용-예제">적용 예제&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> egovframework.webflux.config;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.egovframe.rte.psl.reactive.mongodb.connect.EgovMongoDbConnectionFactory;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EgovMongodbConfig&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Bean&lt;/span>(name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;reactiveMongoDatabaseFactory&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ReactiveMongoDatabaseFactory &lt;span style="color:#a6e22e">reactiveMongoDatabaseFactory&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> EgovMongoDbConnectionFactory egovMongoDbConnectionFactory &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> EgovMongoDbConnectionFactory(&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">mongoDBName&lt;/span>, &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">mongoDBUrl&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> egovMongoDbConnectionFactory.&lt;span style="color:#a6e22e">reactiveMongoDatabaseFactory&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ReactiveMongoTransactionManager &lt;span style="color:#a6e22e">transactionManager&lt;/span>(&lt;span style="color:#a6e22e">@Qualifier&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;reactiveMongoDatabaseFactory&amp;#34;&lt;/span>) ReactiveMongoDatabaseFactory reactiveMongoDatabaseFactory) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ReactiveMongoTransactionManager(reactiveMongoDatabaseFactory);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="repository-구성">Repository 구성&lt;/h3>
&lt;p>ReactiveMongoTemplate 클래스를 이용하여 Repository를 구성하면 MongoDB와 상호 작용하는 동안 Reactive 프로그래밍 모델을 활용할수 있고, Async Non-Blocking 데이터 처리가 가능하여 애플리케이션이 데이터베이스 작업을 대기하지 않고 다른 작업을 수행할 수 있도록 하며, 성능 향상을 실현할 수 있다. 또한 높은 동시 요청을 처리하기 위해 최적화되어 있어 논블로킹 작업을 통해 많은 동시 연결을 처리할 수 있으므로, 대규모 및 고트래픽 애플리케이션에 적합하다. 그리고 Reactive 프로그래밍은 자원을 효율적으로 사용할 수 있도록 도와준다. MongoDB 작업이 블로킹되지 않으므로 스레드 풀 및 메모리 자원을 효율적으로 관리할 수 있으며 MongoDB 연결을 관리하고 에러 처리를 담당하여 연결 풀링, 재시도 메커니즘 및 예외 처리를 제공하여 안정성을 향상시킨다.&lt;/p></description></item><item><title>MongoDB support</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/mongodb/mongodb-supprot3_5_1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/mongodb/mongodb-supprot3_5_1/</guid><description>&lt;h1 id="mongodb-support-351">MongoDB support 3.5.1&lt;/h1>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Spring Data MongoDB는 Spring Data의 하위 프로젝트로서 document-oriented storage를 지원하는 MongoDB에 대한 Data Access 기능을 제공한다.&lt;/p>
&lt;h3 id="mongodb-support-주요-기능">MongoDB support 주요 기능&lt;/h3>
&lt;ul>
&lt;li>Spring configuration 지원 (@Configuration, XML namespace)&lt;/li>
&lt;li>기본 처리를 효율적으로 지원하는 MongoTemplate helper 제공&lt;/li>
&lt;li>Spring이 제공하는 Data Access Exception hierarchy 변환 기능 제공&lt;/li>
&lt;li>Spring의 Conversion Service와 통합된 Feature Rich Object Mapping 기능&lt;/li>
&lt;li>Annotation 기반 매핑 metadata&lt;/li>
&lt;li>Java 기반 Query, Criteria, Update DSLs&lt;/li>
&lt;li>Spring Data의 Repository 인페이스 지원&lt;/li>
&lt;li>QueryDSL 등&lt;/li>
&lt;/ul>
&lt;h2 id="1-시작하기">1. 시작하기&lt;/h2>
&lt;p>Spring Data MongoDB를 사용하기 위해서는 다음과 같은 dependency 추가가 필요하다.&lt;/p></description></item><item><title>MultiDataProcessing</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-multidata_process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-multidata_process/</guid><description>&lt;h1 id="multidataprocessing">MultiDataProcessing&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 수행시 다수의 리소스를 처리하고자 할 경우에는 일반적인 Job설정으로 처리할 수 없다. 전자정부 배치프레임워크에서는 MultiData Processing을 통해 다수의 리소스를 읽어 다수의 결과로 처리하거나 다수의 리소스를 읽어 하나의 결과로 처리하는 기능을 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>다수(N개)의 리소스를 처리하는 방식은 N→1, N→N으로 구분된다.&lt;/p>
&lt;ul>
&lt;li>MultiResourceItem처리: N개의 대상을 읽은 후, 읽은 개수만큼의 결과물을 만들어낸다.&lt;/li>
&lt;li>CompositeItem처리: N개의 대상을 읽은 후, 하나의 결과물을 만들어낸다.&lt;/li>
&lt;/ul>
&lt;p>두 방식을 개념적으로 비교하면 아래와 같다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/images/batch_core-multiresource_vs_composite2.png" alt="image" >
&lt;/p>
&lt;h3 id="multiresourceitem-처리">MultiResourceItem 처리&lt;/h3>
&lt;p>다수의 파일을 대상으로 동일한 유형의 Batch처리를 하고자 할 경우 MultiResourceItemReader를 사용하면 편리하다.&lt;br>
예를 들어, 아래와 같이 &amp;lsquo;file~&amp;lsquo;로 시작하는 파일명을 가진 파일들에 대해 일괄 변경을 수행하고자 할 경우에도 적용 가능하다.&lt;/p></description></item><item><title>Spring mvc Multipart Multi file upload 지원 문제</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/file-upload/file-upload-service-multi-file-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/file-upload/file-upload-service-multi-file-support/</guid><description>&lt;h1 id="spring-mvc-multipart-multi-file-upload-지원-문제">Spring mvc Multipart Multi file upload 지원 문제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring mvc 2.5.5 Multipart Multi file upload 지원부분에서 동일한 이름의 여러개의 파일을 올리려고 할 때 에러가 발생한다. 본 가이드에서는 이러한 문제가 발생하여 아직 Spring쪽에서 답변이 없는 상황이다. 이부분에 대하여 개발시 참고 하기바란다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>업로드 갯수를 고려하지 않고 동적으로 upload 폼을 추가할 경우 오류 메시지가 나온다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>org.&lt;span style="color:#a6e22e">springframework&lt;/span>.&lt;span style="color:#a6e22e">web&lt;/span>.&lt;span style="color:#a6e22e">multipart&lt;/span>.&lt;span style="color:#a6e22e">MultipartException&lt;/span>: Multiple files &lt;span style="color:#66d9ef">for&lt;/span> field name &lt;span style="color:#f92672">[&lt;/span>files&lt;span style="color:#f92672">]&lt;/span> found &lt;span style="color:#f92672">-&lt;/span> not supported by MultipartResolver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>org.&lt;span style="color:#a6e22e">springframework&lt;/span>.&lt;span style="color:#a6e22e">web&lt;/span>.&lt;span style="color:#a6e22e">multipart&lt;/span>.&lt;span style="color:#a6e22e">commons&lt;/span>.&lt;span style="color:#a6e22e">CommonsFileUploadSupport&lt;/span>.&lt;span style="color:#a6e22e">parseFileItems&lt;/span>(CommonsFileUploadSupport.&lt;span style="color:#a6e22e">java&lt;/span>:254)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>org.&lt;span style="color:#a6e22e">springframework&lt;/span>.&lt;span style="color:#a6e22e">web&lt;/span>.&lt;span style="color:#a6e22e">multipart&lt;/span>.&lt;span style="color:#a6e22e">commons&lt;/span>.&lt;span style="color:#a6e22e">CommonsMultipartResolver&lt;/span>.&lt;span style="color:#a6e22e">parseRequest&lt;/span>(CommonsMultipartResolver.&lt;span style="color:#a6e22e">java&lt;/span>:166)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>org.&lt;span style="color:#a6e22e">springframework&lt;/span>.&lt;span style="color:#a6e22e">web&lt;/span>.&lt;span style="color:#a6e22e">multipart&lt;/span>.&lt;span style="color:#a6e22e">commons&lt;/span>.&lt;span style="color:#a6e22e">CommonsMultipartResolver&lt;/span>.&lt;span style="color:#a6e22e">resolveMultipart&lt;/span>(CommonsMultipartResolver.&lt;span style="color:#a6e22e">java&lt;/span>:149)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>org.&lt;span style="color:#a6e22e">springframework&lt;/span>.&lt;span style="color:#a6e22e">web&lt;/span>.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">DispatcherServlet&lt;/span>.&lt;span style="color:#a6e22e">checkMultipart&lt;/span>(DispatcherServlet.&lt;span style="color:#a6e22e">java&lt;/span>:1015)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>org.&lt;span style="color:#a6e22e">springframework&lt;/span>.&lt;span style="color:#a6e22e">web&lt;/span>.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">DispatcherServlet&lt;/span>.&lt;span style="color:#a6e22e">doDispatch&lt;/span>(DispatcherServlet.&lt;span style="color:#a6e22e">java&lt;/span>:851)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>org.&lt;span style="color:#a6e22e">springframework&lt;/span>.&lt;span style="color:#a6e22e">web&lt;/span>.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">DispatcherServlet&lt;/span>.&lt;span style="color:#a6e22e">doService&lt;/span>(DispatcherServlet.&lt;span style="color:#a6e22e">java&lt;/span>:807)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>org.&lt;span style="color:#a6e22e">springframework&lt;/span>.&lt;span style="color:#a6e22e">web&lt;/span>.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">FrameworkServlet&lt;/span>.&lt;span style="color:#a6e22e">processRequest&lt;/span>(FrameworkServlet.&lt;span style="color:#a6e22e">java&lt;/span>:571)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>org.&lt;span style="color:#a6e22e">springframework&lt;/span>.&lt;span style="color:#a6e22e">web&lt;/span>.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">FrameworkServlet&lt;/span>.&lt;span style="color:#a6e22e">doPost&lt;/span>(FrameworkServlet.&lt;span style="color:#a6e22e">java&lt;/span>:511)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>javax.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">HttpServlet&lt;/span>.&lt;span style="color:#a6e22e">service&lt;/span>(HttpServlet.&lt;span style="color:#a6e22e">java&lt;/span>:637)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>javax.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">HttpServlet&lt;/span>.&lt;span style="color:#a6e22e">service&lt;/span>(HttpServlet.&lt;span style="color:#a6e22e">java&lt;/span>:717)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>이러한 문제에 대해서 아래의 참고 자료를 참고하기 바란다.&lt;/p></description></item><item><title>대용량 처리를 위한 멀티스레드 기반의 병행처리 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi_process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi_process/</guid><description>&lt;h1 id="대용량-처리를-위한-멀티스레드-기반의-병행처리-예제">대용량 처리를 위한 멀티스레드 기반의 병행처리 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 수행 시, 대용량 처리를 위해 Job을 멀티스레드 기반으로 병행처리하는 과정을 보여준다. 실행 유형별로 멀티쓰레드 방식, Parallel 방식, 파티셔닝 방식 등이 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="멀티쓰레드multi-threaded-step-예제">멀티쓰레드(Multi-threaded Step) 예제&lt;/h3>
&lt;p>병행처리멀티스레드(Multi-threaded Step)은 하나의 step을 멀티쓰레드로 처리하는 방식이다. chunk단위로 각 쓰레드에서 병행으로 처리한다.&lt;/p>
&lt;h4 id="job설정">Job설정&lt;/h4>
&lt;p>&lt;strong>병행처리멀티스레드 예제의 Job 설정파일인 parallelJob.xml을 확인한다.&lt;/strong>&lt;/p>
&lt;p>멀티스레드 처리를 원하는 step의 tasklet에 비동기 설정을 한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;parallelJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;staging&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">next=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;loading&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileItemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">processor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;validatingProcessor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;stagingItemWriter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;loading&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;tasklet&lt;/span> &lt;span style="color:#a6e22e">task-executor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskExecutor&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;stagingReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">processor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;stagingProcessor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tradeWriter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskExecutor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.core.task.SimpleAsyncTaskExecutor&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="junittest-구성-및-수행">JunitTest 구성 및 수행&lt;/h4>
&lt;h5 id="junittest-구성">JunitTest 구성&lt;/h5>
&lt;p>병행처리멀티스레드 설정과 관련 클래스들로 Junit Test를 수행한다. 이 때 배치가 수행되고, 관련된 내용을 확인할 수 있다.&lt;/p></description></item><item><title>MultiResource 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-resource/</guid><description>&lt;h1 id="multiresource-예제">MultiResource 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>한 step에서 여러개의 파일을 처리하는 기능을 예제로 제공한다. 스프링 배치에서는 MultiResourceItemReader와 MultiResourceItemWriter를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>MultiResource 예제의 Job 설정파일인 multiResourceIoJob.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>MultiResourceItemReader는 resources로 정의된 파일들을 읽어와서, 파일 한 개씩 delegate로 정의된 reader가 read하도록 전달한다.&lt;/p>
&lt;p>아래의 예제는 실제로 파일을 read하는 reader는 delegate로 정의된 FlatFileItemReader이다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.MultiResourceItemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">scope=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delegate&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.FlatFileItemReader&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lineMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.mapping.DefaultLineMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lineTokenizer&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.transform.DelimitedLineTokenizer&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delimiter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;,&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;names&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name,credit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fieldSetMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;targetType&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.common.domain.trade.CustomerCredit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;resources&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#{jobParameters[&amp;#39;input.file.path&amp;#39;]}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>MultiResourceItemWriter는 itemCountLimitPerResource로 정의된 수보다 write할 item이 넘어가면 새 output파일을 생성하고, delegate로 정의된 writer가 write하도록 전달한다.&lt;/p></description></item><item><title>Spring MVC Architecture</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-spring-mvc-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-spring-mvc-architecture/</guid><description>&lt;h1 id="spring-mvc-architecture">Spring MVC Architecture&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring Framework은 간단한 설정만으로 Struts나 Webwork같은 Web Framework을 사용할 수 있지만, 자체적으로 MVC Web Framework을 가지고 있다.
Spring MVC는 기본요소인 Model, View, Controller 외에도, 아래와 같은 특성을 가지고 있다.&lt;/p>
&lt;ul>
&lt;li>DispatcherServlet, HandlerMapping, Controller, Interceptor, ViewResolver, View등 각 컴포넌트들의 역할이 명확하게 분리되어 있다.&lt;/li>
&lt;li>HandlerMapping, Controller, View등 컴포넌트들에 다양한 인터페이스 및 구현 클래스를 제공함으로써 경우에 따라 선택하여 사용할 수 있다.&lt;/li>
&lt;li>Controller(@MVC)나 폼 클래스(커맨드 클래스) 작성시에 특정 클래스를 상속받거나 참조할 필요 없이 POJO 나 POJO-style의 클래스를 작성함으로써 비지니스 로직에 집중한 코드를 작성할 수 있다.&lt;/li>
&lt;li>웹요청 파라미터와 커맨드 클래스간에 데이터 매핑 기능을 제공한다.&lt;/li>
&lt;li>데이터 검증을 할 수 있는, Validator와 Error 처리 기능을 제공한다.&lt;/li>
&lt;li>JSP Form을 쉽게 구성하도록 Tag를 제공한다.&lt;/li>
&lt;/ul>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Spring MVC(Model-View-Controller)의 핵심 Component는 아래와 같다.&lt;/p></description></item><item><title>MVC Test</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/unit-test/mvc-test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/unit-test/mvc-test/</guid><description>&lt;h1 id="mvc-test">MVC Test&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring mvc test framework에서는 API를 통한 Spring MVC 테스트를 지원한다. MVC Test Framework는 내부에서 TestContext를 통해 실제 스프링 구성을 로드하고, 실행 ServletContext를 사용없이 MVC 테스트가 가능하다.&lt;/p>
&lt;h3 id="spring-mvc-server-side-test">Spring mvc server-side test&lt;/h3>
&lt;p>기존 Spring 3.2버전까지 스프링 MVC Controller를 테스트하는 방법은 Controller를 객체화하거나 객체주입하고 Mock객체(MockHttpServletRequest, MockHttpServletResponse)를 사용하여 단위테스트를 작성하는 것이었다.
그러나 이러한 테스트 방식은 Controller내부에서 쓰이는 많은 annotation기능과 request처리과정의 로직들을 모두 검증/지원하지는 못한다는 단점이 있다. (@initBinder, @ModelAttribute, @ExceptionHandler 등…)&lt;/p>
&lt;p>Spring 3.2부터는 Spring mvc test framework에서 Spring MVC Test를 보다 쉽고 간편하게 할 수 있는 방법을 제시한다.&lt;/p></description></item><item><title>Spring Web Flow와 Spring MVC 연동</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-configuration-with-spring-mvc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-configuration-with-spring-mvc/</guid><description>&lt;h2 id="spring-web-flow-와-mvc-연동">Spring Web Flow 와 MVC 연동&lt;/h2>
&lt;p>Spring Web Flow를 사용하여 웹을 개발할 때 Spring MVC와 연동하여 개발할 수 있다. 이를 위해 Spring MVC 연동 모듈 등을 설정해야 한다.
여기서는 booking-mvc sample( 실행데모(faces이지만 시나리오는 같음) )을 기준으로 설정하겠다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Spring MVC 와의 연동을 위해 우리는 web.xml 안에 있는 DispatcherServlet 설정을 보도록 하겠다.&lt;/p>
&lt;h3 id="webxml-환경-구성">web.xml 환경 구성&lt;/h3>
&lt;p>Spring MVC를 구성하는 첫 단계는 web.xml에 DispatcherServlet을 구성하는 것이다.
DispatcherServlet은 웹 애플리케이션별 하나를 등록한다.&lt;/p>
&lt;p>이 예제에서는 /spring/으로 시작하는 모든 요청을 받도록 설정하고 있다. init-param을 사용해 contextConfigLocation을 설정하고 있다.&lt;/p></description></item><item><title>MyBatis</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/</guid><description>&lt;p>MyBatis&lt;/p>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-ibatis_vs_maybatis/">주요 변경 사항&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-getting_started/">Getting Started&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-configuration_xml/">Configuration XML&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-mapper_xml_files/">Mapper XML Files&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-dynamic-sql/">Dynamic SQL&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis-guide/">표준프레임워크 기반 적용 가이드&lt;/a>


&lt;/li>
&lt;/ul></description></item><item><title>MyBatis 적용 가이드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis-guide/</guid><description>&lt;h1 id="mybatis-적용-가이드">MyBatis 적용 가이드&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크 기반 MyBatis 적용 가이드이다.&lt;/p>
&lt;p>📁 



 









 



&lt;a href="https://www.egovframe.go.kr/wiki/lib/exe/fetch.php?media=egovframework:rte2:psl:dataaccess:ex-dataaccess-mybatis.zip">ex-dataaccess-mybatis.zip&lt;/a>


&lt;/p>
&lt;h2 id="step-1-pomxml-변경">Step 1. pom.xml 변경&lt;/h2>
&lt;p>표준프레임워크 dataaccess artifact version을 다음과 같이 2.7.0으로 변경한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 실행환경 라이브러리 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>egovframework.rte&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>egovframework.rte.psl.dataaccess&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.7.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-2-환경-설정">Step 2. 환경 설정&lt;/h2>
&lt;h3 id="step-21-xml-설정">Step 2.1 XML 설정&lt;/h3>
&lt;p>Spring XML 설정 파일 상(ex: context-mapper.xml)에 다음과 같은 sqlSession bean을 추가한다.&lt;/p>
&lt;p>Ex) context-mapper.xml&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- SqlSession setup for MyBatis Database Layer --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sqlSession&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.mybatis.spring.SqlSessionFactoryBean&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mapperLocations&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;classpath:/sqlmap/mappers/**/*.xml&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="step-22-mapper-xml-작성">Step 2.2 mapper xml 작성&lt;/h3>
&lt;p>MyBatis 가이드에 따라 query xml을 작성한다. (2.1의 예제 상 지정된 mapperLocations 위치)&lt;/p></description></item><item><title>Naming 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/naming-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/naming-service/</guid><description>&lt;h1 id="naming-service">Naming Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Naming 서비스는 Java Naming and Directory Interface(JNDI) API를 이용하여 자원(Resource)를 찾을 수 있도록 도와주는 서비스이다. Naming 서비스를 지원하는 Naming 서버에 자원을 등록하여 다른 어플리케이션에서 사용할 수 있도록 공개하고, Naming 서버에 등록되어 있는 자원을 찾아와서 이용할 수 있게 한다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/images/naming_service.png" alt="Naming Service" >
&lt;/p>
&lt;h2 id="주요-개념">주요 개념&lt;/h2>
&lt;h3 id="java-naming-and-directory-interfacejndi">Java Naming and Directory Interface(JNDI)&lt;/h3>
&lt;p>Java Naming and Directory Interface(JNDI)는 Java 소프트웨어 클라이언트가 이름(name)을 이용하여 데이터 및 객체를 찾을 수 있도록 도와주는 디렉토리 서비스에 대한 Java API이다.&lt;/p></description></item><item><title>Native SQL</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-native_sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-native_sql/</guid><description>&lt;h1 id="native-sql">Native SQL&lt;/h1>
&lt;p>기본적으로 CRUD 작업을 할 때 JPA 기본 API를 사용하거나 QL을 이용하여 수행한다. 그러나 특정 DBMS에서 제공하는 기능을 사용할 수 있도록 하기 위해 Native &lt;Acronym title="Structured Query Language">SQL&lt;/Acronym> 사용을 지원한다.&lt;/p>
&lt;h2 id="기본적인-사용-방법">기본적인 사용 방법&lt;/h2>
&lt;p>entityManager.createNativeQuery() 메소드를 이용하여 Native SQL을 실행할 수 있다.&lt;/p>
&lt;h3 id="기본-리스트-조회">기본 리스트 조회&lt;/h3>
&lt;p>SQL을 통해 하나의 테이블을 대상으로 조회 작업을 수행할 수 있다.&lt;/p>
&lt;h4 id="sample-source">Sample Source&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> StringBuffer qlBuf &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> StringBuffer();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> qlBuf.&lt;span style="color:#a6e22e">append&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SELECT * &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> qlBuf.&lt;span style="color:#a6e22e">append&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;FROM DEPARTMENT &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> qlBuf.&lt;span style="color:#a6e22e">append&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;WHERE DEPT_NAME like :condition &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> qlBuf.&lt;span style="color:#a6e22e">append&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ORDER BY DEPT_NAME&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Query query &lt;span style="color:#f92672">=&lt;/span> em.&lt;span style="color:#a6e22e">createNativeQuery&lt;/span>(qlBuf.&lt;span style="color:#a6e22e">toString&lt;/span>(),Department.&lt;span style="color:#a6e22e">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> query.&lt;span style="color:#a6e22e">setParameter&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;condition&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;%%&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List deptList &lt;span style="color:#f92672">=&lt;/span> query.&lt;span style="color:#a6e22e">getResultList&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위와 같이 정의된 SQL문을 통해 조회 조건에 맞는 Department 객체의 List가 리턴된다. WHERE절에서 &amp;lsquo;:&amp;lsquo;을 사용하여 Named Paramenter를 통해 조회 조건을 완성할 수 있다. 조회 조건의 값은 Query의 setParameter() 메소드를 통해 지정해 주고 있다. 또한, createNativeQuery의 두번재 인자로 리턴받고자하는 Entity 클래스(Department.class)를 지정한 것을 확인할 수 있다.&lt;/p></description></item><item><title>Nexus</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/nexus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/nexus/</guid><description>&lt;h1 id="nexus">Nexus&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Maven 프로젝트 시에 Maven central repository에서 제공하는 다양한 장점에도 불구하고 사용성 측면에서 내부 repository manager의 사용을 권고하고 있다. 실제 기업 또는 organization에서는 하나 이상의 central repository를 제공 하고 있으며 Nexus는 이런 여러 개의 외부 리포지토리를 Proxy 개념으로 연결해서 효율적으로 내부 개발자들에게 virtual한 하나의 repository 연결 포인트를 제공한다. 실제 내부 개발자들은 Nexus 리포지토리만을 바라보고 필요한 artifact들을 요청한다.&lt;/p>
&lt;p>Maven을 사용할 때 유용한 오픈소스인 Nexus의 사용법에 대해 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Nexus는 &lt;strong>Maven repository manager&lt;/strong>로 프로젝트 또는 기업에서 필요로 하는 &lt;strong>내부 리포지토리 구성을 위한 도구&lt;/strong>이다.&lt;/p></description></item><item><title>Object Pooling Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/object-pooling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/object-pooling/</guid><description>&lt;h1 id="object-pooling-service">Object Pooling Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>객체에 대한 Pooling 기능을 제공하는 서비스이다. 객체의 생성 비용이 크고,생성 횟수가 많으면, 평균적으로 사용되는 객체의 수가 적은 경우,성능을 향상시키기 위해서 사용한다.
&lt;strong>Object Pool&lt;/strong>은 소프트웨어 디자인 패턴으로서, 객체를 필요에 따라 생성하고 파괴하는 방식이 아닌,적절한 개수의 객체를 미리 사용 가능한 상태로 생성하여 이를 이용하는 방식이다.Client는 Pool에 객체를 요청하여 객체를 얻은 후, 업무를 수행한다. 얻어온 객체를 이용하여 업무 수행을 끝마친 후, 객체를 파괴하는 것이 아니라 Pool에게 돌려주어 다른 Client가 사용할 수 있도록 한다. &lt;strong>Object Pooling&lt;/strong>은 객체 생성 비용이 크고,객체 생성 횟수가 많으며,평균적으로 사용되는 객체의 수가 적은 경우,높은 성능의 향상을 가져다 준다.&lt;/p></description></item><item><title>ORM 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/</guid><description>&lt;h1 id="orm-서비스">ORM 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>객체 모델링(Object Oriented Modeling)과 관계형 데이터 모델링(Relational Data Modeling) 사이의 불일치를 해결해 주는 OR Mapping 서비스로 자바 표준인 JPA를 표준 서비스로 제시하고 구현체로는 JPA 구현체중에 가장 성능이 우수한 것으로 알려진 Hibernate를 이용하였다. 서비스의 특징을 살펴보면 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>특정 DBMS에 영향을 받지 않으므로 DBMS가 변경되더라도 데이터 액세스 처리 코드에 대한 변경없이 설정 정보의 변경만으로도 동작 가능하다.&lt;/li>
&lt;li>SQL을 작성하고 &lt;acronym title="Structured Query Language">SQL&lt;/acronym> 실행 결과로부터 전달하고자 하는 객체로 변경하는 코드를 작성하는 시간이 줄어든다. 하지만 필요시 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-native_sql/">SQL 작업&lt;/a>


도 가능하다.&lt;/li>
&lt;li>기본적으로 필요 시점에만 DBMS에 접근하는 Lazy Loading 전략 채택하고 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-cache_handling/">Cache활용&lt;/a>


을 통해 DBMS에 대한 접근 횟수를 줄여나가 어플리케이션의 성능 향상을 도모한다.&lt;/li>
&lt;li>별도의 &lt;acronym title="Extensible Markup Language">XML&lt;/acronym> 파일로 매핑을 관리하지 않고 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-entities/">Entity Class&lt;/a>


에 최소한의 Annotation으로 정의하므로써 작업이 용이하다.&lt;/li>
&lt;li>Entity Class가 일반 클래스로 정의됨으로써 상속이나 다양성, 캡슐화 같은 것들을 그대로 적용하면서 퍼시스턴스 오브젝트로 사용할 수 있다.&lt;/li>
&lt;li>자바 표준이므로 많은 벤더들에서 구현체를 지원하고 개발을 편리하게 할 수 있는 



 









 



&lt;a href="https://projects.eclipse.org/projects/webtools.dali">JPA툴(Dali)&lt;/a>


을 지원한다.&lt;/li>
&lt;li>SQL을 이용하여 처리하는 방식에 익숙한 개발자가 사용하려면 학습이 필요하고 이에 따른 장벽이 존재한다.&lt;/li>
&lt;/ul>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="주요-개념">주요 개념&lt;/h3>
&lt;img src="../images/conceptua_architecture.jpg" align="left"/>
&lt;p>옆의 그림에서 보는것과 같이 DBMS 기반의 어플리케이션 수행을 하기 위해 필요한 주요 구성 요소는 Entity, Persistence.xml 이며, 각각은 다음과 같은 역할을 수행한다.&lt;/p></description></item><item><title>ORM 예제(ORM Example)</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/persistence-layer/orm-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/persistence-layer/orm-example/</guid><description>&lt;h1 id="orm-예제orm-example">ORM 예제(ORM Example)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Hibernate를 사용한 ORM 기능의 예제를 제공한다. 별도의 쿼리문을 정의하지 않고, 객체와 테이블간의 Mapping을 정의하여 순수 자바 코드를 사용하여 자료의 조회, 생성, 수정, 삭제를 수행하는 기능을 제공한다. 일반적인 게시판 형식의 예제이지만 Hibernate를 활용하여 데이터의 입출력이 어떻게 이루어지는지 확인할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;ol>
&lt;li>해당 예제를 설치하고 실행하면 Hibernate를 사용한 카테고리관리 페이지가 나타난다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/persistence-layer/images/orm1.png" alt="orm1" >
&lt;/p>
&lt;ol start="2">
&lt;li>[등록] 버튼을 눌러 카테고리 등록 페이지를 호출하여 카테고리를 등록 할 수 있다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/persistence-layer/images/orm2.png" alt="orm2" >
&lt;/p>
&lt;ol start="3">
&lt;li>등록된 카테고리코드를 클릭하여 카테고리를 수정하거나 삭제할 수 있다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/persistence-layer/images/orm3.png" alt="orm3" >
&lt;/p></description></item><item><title>배치 실행환경 소개</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/intro/</guid><description>&lt;h1 id="배치-실행환경-소개">배치 실행환경 소개&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크에서 대용량 데이터 처리 지원을 위해 작업 수행, 결과 관리, 스케줄링 관리 기능을 제공한다.&lt;/p>
&lt;h2 id="목표">목표&lt;/h2>
&lt;p>배치 실행환경은 대용량 데이터 처리를 위한 기반 환경을 제공함으로써 배치 실행에 필요한 핵심 기능을 제공한다.&lt;/p>
&lt;h2 id="배치-실행환경-수행-과정">배치 실행환경 수행 과정&lt;/h2>
&lt;p>전자정부 표준프레임워크 실행환경에 추가된 배치 실행환경은 3-Tier(Run, Job, Application Tier)로 구성되며, 대용량 데이터 처리를 위한 기반 환경을 제공한다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/images/batch_process.png" alt="배치 실행환경 수행 과정" >
&lt;/p>
&lt;h2 id="run-tier">Run Tier&lt;/h2>
&lt;p>Run Tier는 배치 응용 프로그램의 실행을 담당한다. 실행 방식에 따라 &lt;strong>Scheduler&lt;/strong>, &lt;strong>Http/Web service&lt;/strong>, &lt;strong>CommandLine&lt;/strong>으로 나눌 수 있다.&lt;/p></description></item><item><title>표준프레임워크 실행환경 소개</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/intro/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/intro/overview/</guid><description>&lt;h1 id="표준프레임워크-실행환경-소개">표준프레임워크 실행환경 소개&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>표준프레임워크 실행환경은 응용SW의 구성기반으로서, 응용SW 실행 시 필요한 기본 기능을 제공하는 환경을 의미한다.&lt;/p>
&lt;p>즉, 전자정부 업무 구현을 목적으로 개발된 프로그램이 사용자가 의도하는 대로 정상적으로 실행될 수 있도록 지원하는 재사용 가능한 서버 실행 모듈, SW구조의 집합을 의미 한다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/intro/images/overview.jpg" alt="응용SW와 실행환경, 공통기반으로 구성된 소프트웨어 아키텍처 다이어그램. 실행환경은 회면처리(Presentation Layer), UX처리(UX Layer), 업무처리(Business Logic Layer), DATA 처리(Persistent Layer), 연계통합(Integration Layer), 배치처리(Batch Layer)로 구분되며, 하단에는 공통기반(Foundation Layer)이 위치해 있습니다." >
&lt;/p>
&lt;h2 id="목표">목표&lt;/h2>
&lt;p>전자정부 표준프레임워크 실행환경은 ‘전자정부 서비스의 품질향상 및 정보화 투자 효율성 향상’을 위해 개발프레임워크 실행환경 표준을 정립하고, 개발프레임워크 표준 적용을 통한 응용 SW의 표준화 및 품질과 재사용성 향상을 목표로 한다.&lt;br>
또한, 모바일 웹의 사용성과 편의성 증대를 위하여 기존 실행환경 기반 개발이 가능한 모바일 웹 기반의 표준패턴 및 가이드 코드를 제공한다.&lt;/p></description></item><item><title>OXM 예제(OXM Example)</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/marshalling-unmarshalling-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/marshalling-unmarshalling-example/</guid><description>&lt;h1 id="oxm-예제oxm-example">OXM 예제(OXM Example)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>객체와 XML간의 Mapping을 이용하는 Object-XML Mapping (OXM) 기능에 대한 예제를 제공한다. 이 예제는 주어진 데이터를 XML으로 변화하여 사용자에게 제공하며, 사용자는 브라우저를 통하여 해당하는 XML 파일을 확인할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;ol>
&lt;li>해당 예제를 설치하고 실행하면 상품목록 페이지가 호출된다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/oxm-1.png" alt="oxm-1" >
&lt;/p>
&lt;ol start="2">
&lt;li>[xml] 버튼을 누르면 상품목록을 XML파일로 다운받을 수 있다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/oxm-2.png" alt="oxm-2" >
&lt;/p>
&lt;h2 id="참고자료">참고자료&lt;/h2>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer/marshalling-unmarshallig/">Marshalling/Unmarshalling 가이드&lt;/a>


&lt;/li>
&lt;/ul></description></item><item><title>iBATIS parameterMap</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-parameterMap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-parameterMap/</guid><description>&lt;h1 id="parametermap">parameterMap&lt;/h1>
&lt;p>parameterMap 은 해당 요소로 SQL 문 외부에 정의한 입력 객체의 속성에 대한 name 및 javaType, jdbcType 을 비롯한 옵션을 설정할 수 있는 매핑 요소이다. 이를 통해 JavaBeans 객체(또는 Map 등)에 대한 prepared statement 에 대한 바인드 변수 매핑을 처리할 수 있다. 유사한 기능을 처리하는 parameterClass 나 Inline Parameter 에 비해 많이 사용되지 않지만 더 기술적인(descriptive) parameterMap(예를 들어 stored procedure 를 위한) 이 필요하거나, XML 의 일관된 사용과 순수성을 지키고자 할때 좋은 접근법이 될 수도 있다. 그러나 Dynamic 요소와 함께 사용될 수 없고 바인드 변수의 갯수와 순서를 정확히 맞춰야 하는 불편이 있는 등 일반적으로 사용을 추천하지 않는다.&lt;/p></description></item><item><title>작업 전후처리 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-pre_post_process_mgmt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-pre_post_process_mgmt/</guid><description>&lt;h1 id="작업-전후처리-예제">작업 전후처리 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크에서 배치 수행시, Core에서 제공하는 Processor 클래스를 이용하여 Job과 그 하위 구성요소인 Step, Chunk 전후에 적절한 선행/후행 처리 과정을 보여주는 예제이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>예제는 작업 전처리 과정을 보여주는 EgovPreProcessorFunctionalTests 와 작업 후처리 과정을 보여주는 EgovPostProcessorFunctionalTests로 구성되어 있다. 전처리, 후처리에 따른 일부 메소드명을 제외한 대부분의 설정과 내용이 같으므로 작업 전처리 예제(EgovPreProcessorFunctionalTests)위주로 설명한다.&lt;/p>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>작업 전처리 예제의 Job 설정 파일인 preProcessorJob.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>작업 전처리 예제, 작업 후처리 예제에서는 &amp;lt;listener&amp;gt;를 적절히 이용하여 Pre/PostProcessor를 사용한다. 여기서 빈으로 등록된 각 SampleXXXProcessor 클래스들은 전자정부 표준프레임워크의 Processor를 상속받아 구현하였으며, 관련된 상세 내용은 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/batch-core-listener/">작업 전후처리 관리&lt;/a>


에서 확인할 수 있다.&lt;/p></description></item><item><title>Bean Definition Profiles</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean-definition-profiles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/ioc-container/ioc-container-bean-definition-profiles/</guid><description>&lt;h1 id="bean-definition-profiles">Bean Definition Profiles&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Bean의 Profile은 Spring f/w ver. 3.1부터 추가되었으며 동일한 id의 bean을 여러 개 정의하여 사용자의 설정으로 활성화시킨 Profile의 해당 bean이 Runtime시에 동작하도록 하는 기능이다. 보통 개발시점과 운영시점에 bean의 Profile설정 변경만으로 Spring Container에서 Bean적용이 달리 적용되도록 하는데 쓰인다.&lt;/p>
&lt;p>Profile설정 시, 반드시 Profile을 활성화해야만 사용가능하다. 만약 Profile만 설정하고 활성화하지 않으면 Exeption(NoSuchBeanDefinitionException)이 발생한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>아래에서 Profile을 설정하는 방법과 Profile을 활성화(Active Profile)하는 방법에 대하여 알아본다.&lt;/p>
&lt;h3 id="profile-설정-방법">Profile 설정 방법&lt;/h3>
&lt;p>Profile의 설정방법에는 XML설정과 Annotation설정으로 나뉜다.&lt;/p></description></item><item><title>프로그래밍 방식의 Transaction 관리</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/transaction/programmatic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/transaction/programmatic/</guid><description>&lt;h1 id="programmatic-transaction-management">Programmatic Transaction Management&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>프로그램에서 직접 트랜잭션을 관리하고자 할 때 사용할 수 있는 방법에 대해서 설명하고자 한다. TransactionTemplate를 사용하는 방법과 Trnasaction Manager를 사용하는 방법 두가지가 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="transactiontemplate를-사용하는-방법">TransactionTemplate를 사용하는 방법&lt;/h3>
&lt;p>TransactionTemplate를 정의하고 callback 메소드 정의를 이용하여 Transaction 관리를 할 수 있도록 하는 방법이다.&lt;/p>
&lt;p>&lt;b>Configuration&lt;/b>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;transactionTemplate&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.transaction.support.TransactionTemplate&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;transactionManager&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;transactionManager&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;transactionManager&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.jdbc.datasource.DataSourceTransactionManager&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>PROPERTIES&lt;/th>
 &lt;th>설 명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>transactionManager&lt;/td>
 &lt;td>트랜잭션매니저&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>dataSource&lt;/td>
 &lt;td>데이타소스&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>위의 설정에서 transactionTemplate를 정의하고 property로 transactionManager을 정의한다. Templeate를 이용한 샘플은 아래와 같다.&lt;/p></description></item><item><title>Property</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property/</guid><description>&lt;h1 id="property">Property&lt;/h1>
&lt;p>Property는 시스템의 설치 환경에 관련된 정보나, 잦은 정보의 변경이 요구되는 경우 외부에서 그 정보를 관리하게 함으로써 시스템의 유연성을 높이기 위해서 제공하는 것으로 Property Service와 Property Source를 제공하고 있다.
Property Service와 Property Source는 각각의 특성과 용도에 따라 시스템의 설정 정보를 관리한다.
이와 같은 기능을 통해 전자정부프레임워크는 시스템의 유연성과 확장성을 높여준다.&lt;/p>
&lt;ul>
&lt;li>Property Service&lt;/li>
&lt;li>특징: 코드 상에서 key를 통해 해당 값을 가져오는 방식으로, 외부 파일이 변경될 경우 이를 반영하여 값을 갱신할 수 있다.&lt;/li>
&lt;li>장점: 시스템 운영 중에도 설정 값을 동적으로 변경할 수 있어 유연성이 높다.&lt;/li>
&lt;li>사용 예시: 데이터베이스 연결 정보, API 키 등 자주 변경될 수 있는 설정 값 관리.&lt;/li>
&lt;li>Property Source&lt;/li>
&lt;li>특징: XML 또는 코드 상에서 key를 통해 값을 가져올 수 있지만, 외부 파일이 변경되어도 즉시 반영되지 않는다.&lt;/li>
&lt;li>단점: 설정 값 변경 시 시스템을 재시작해야 변경 사항이 반영됩니다.&lt;/li>
&lt;li>사용 예시: 상대적으로 변경이 적은 설정 값 관리, 예를 들어 애플리케이션의 기본 설정 값.&lt;/li>
&lt;li>Property 파일 사용 방법:&lt;/li>
&lt;li>별도의 Property 파일을 만들어 Spring Bean 설정 파일에 파일의 위치를 입력하여 사용할 수 있다.&lt;/li>
&lt;li>외부 설정 파일에 기재된 프로퍼티 내용은 어플리케이션 운영 중에 추가 및 변경이 가능하다.&lt;/li>
&lt;/ul></description></item><item><title>Property Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property/property-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property/property-service/</guid><description>&lt;h1 id="property-service">Property Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Property Service 는 시스템의 설치 환경에 관련된 정보나, 잦은 정보의 변경이 요구되는 경우 외부에서 그 정보를 관리하게 함으로써 시스템의 유연성을 높이기 위해서 제공하는 것으로 Spring Bean 설정 파일에 관리하고자 하는 정보를 입력(&lt;strong>Bean 설정 파일 사용&lt;/strong>) 하거나 외부 파일에 정보 입력 후에 Bean 설정 파일에서 그 파일 위치를 입력하여 이용(&lt;strong>외부 설정 파일 사용&lt;/strong>)할 수 있다.&lt;/p>
&lt;h2 id="bean-설정-파일-사용">Bean 설정 파일 사용&lt;/h2>
&lt;p>간단하게 설정하고자 할 때 사용할 수 있는 방법으로 별도의 외부파일을 두지 않고 Spring Bean 설정 파일을 이용할 수 있다. 하지만 어플리케이션 운영 중에 Property 정보 변경은 불가능 하고 변경처리 시 어플리케이션을 재기동해야 한다. 사용하기 위해서는 bean property의 Name에 &lt;strong>properties&lt;/strong>라고 입력하고 map entry의 &lt;strong>key&lt;/strong>에 관리하고자 하는 키, &lt;strong>value&lt;/strong>에 관리하고자 하는 값을 입력하여 설정한다.&lt;/p></description></item><item><title>Property Source</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property/property-source/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/property/property-source/</guid><description>&lt;h1 id="property-source">Property Source&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Property Source는 property place-holder를 이용하여 xml의 bean설정에서 key값을 통해 가져올 수 있으며 코드상에서는 Environment를 이용하여 해당값을 가져올 수 있다.&lt;/p>
&lt;p>기본적으로 properties파일을 통한 기능을 제공하고 있으며 추가적인 설정을 통해 DB의 테이블에서 property값을 가져오는 PropertySource를 제공하고 있다. 또한 사용자가 추가로 PropertySource를 정의할 수 있다.&lt;/p>
&lt;h2 id="property-placeholder와-propertysource">Property-placeholder와 PropertySource&lt;/h2>
&lt;h3 id="property-placeholder">Property-placeholder&lt;/h3>
&lt;p>bean을 정의할 때 &lt;code>${…}&lt;/code>의 내용을 property placeholder를 이용하여 대체할 수 있었다.
해당 코드는 다음과 같다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;context:property-placeholder&lt;/span> &lt;span style="color:#a6e22e">location=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com/bank/config/datasource.properties&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.apache.commons.dbcp.BasicDataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">destroy-method=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;close&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;driverClass&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${database.driver}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbcUrl&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${database.url}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${database.username}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${database.password}&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Spring 3.1이전에는 &lt;code>&amp;lt;context:property-placeholder&amp;gt;&lt;/code>를 정의하면 PropertyPlaceholderConfigurer를 사용하였다. 그러나 Spring 3.1이후부터 PropertySourcesPlaceholderConfigurer를 내부에서 사용하고 있으며 위에서 ${database.*}값을 datasource.properties에서 찾지 못하면 Environment의 Property를 사용하도록 하고 있다.
PropertySource는 Environment를 통해 접근 가능하다. 즉, 사용자가 정의한 PropertySource 또한 Spring 3.1부터 property-placeholder를 통해 사용할 수 있는 것이다.&lt;/p></description></item><item><title>pw_expiration_management</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/security/pw_expiration_management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/security/pw_expiration_management/</guid><description>&lt;h1 id="비밀번호-만료기간-관리">비밀번호 만료기간 관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>아이디 생성후 또는 비밀번호를 변경후 정해진 기간이 경과하면 비밀번호 변경을 요청한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>계정별 비밀번호 생성 또는 변경일시는 DB테이블의 컬럼에 저장되며 지정된 기간이 경과하면 로그인시 체크하여 변경을 요청한다.&lt;/p>
&lt;h3 id="관련소스">관련소스&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>유형&lt;/th>
 &lt;th>대상소스&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;th>비고&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Controller&lt;/td>
 &lt;td>egovframework.com.cmm.web.EgovComIndexController.java&lt;/td>
 &lt;td>초기 컨텐츠표시 Controller&lt;/td>
 &lt;td>시간관리 표시&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Service&lt;/td>
 &lt;td>egovframework.com.uat.uia.service.EgovLoginService&lt;/td>
 &lt;td>비밀번호 만료 및 로그인 관련 서비스 인터페이스&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ServiceImpl&lt;/td>
 &lt;td>egovframework.com.uat.uia.service.impl.EgovLoginServiceImpl&lt;/td>
 &lt;td>비밀번호 만료 및 로그인 관련 서비스 구현 클래스&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>DAO&lt;/td>
 &lt;td>egovframework.com.uat.uia.service.impl.EgovLoginServiceImpl&lt;/td>
 &lt;td>비밀번호 만료 및 로그인위한 데이터처리 클래스&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JSP&lt;/td>
 &lt;td>/WEB-INF/jsp/egovframework/com/cmm/EgovUnitContent.jsp&lt;/td>
 &lt;td>초기 컨텐츠표시 페이지&lt;/td>
 &lt;td>시간관리 표시 팝업호출&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JSP&lt;/td>
 &lt;td>/WEB-INF/jsp/egovframework/com/uat/uia/EgovExpirePwd.jsp&lt;/td>
 &lt;td>비밀번호 만료 안내 페이지&lt;/td>
 &lt;td>시간관리 표시 팝업&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Query XML&lt;/td>
 &lt;td>resources/egovframework/mapper/com/uat/uia/EgovLoginUsr_SQL_mysql.xml&lt;/td>
 &lt;td>비밀번호 만료 및 로그인을위한 MySQL용 Query XML&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Query XML&lt;/td>
 &lt;td>resources/egovframework/mapper/com/uat/uia/EgovLoginUsr_SQL_oracle.xml&lt;/td>
 &lt;td>비밀번호 만료 및 로그인을 위한 Oracle용 Query XML&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Query XML&lt;/td>
 &lt;td>resources/egovframework/mapper/com/uat/uia/EgovLoginUsr_SQL_tibero.xml&lt;/td>
 &lt;td>비밀번호 만료 및 로그인을 위한 Tibero용 Query XML&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Query XML&lt;/td>
 &lt;td>resources/egovframework/mapper/com/uat/uia/EgovLoginUsr_SQL_altibase.xml&lt;/td>
 &lt;td>비밀번호 만료 및 로그인을 위한 Altibase용 Query XML&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Query XML&lt;/td>
 &lt;td>resources/egovframework/mapper/com/uat/uia/EgovLoginUsr_SQL_cubrid.xml&lt;/td>
 &lt;td>비밀번호 만료 및 로그인을 위한 Cubrid용 Query XML&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Query XML&lt;/td>
 &lt;td>resources/egovframework/mapper/com/uat/uia/EgovLoginUsr_SQL_maria.xml&lt;/td>
 &lt;td>비밀번호 만료 및 로그인을 위한 Maria용 Query XML&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Query XML&lt;/td>
 &lt;td>resources/egovframework/mapper/com/uat/uia/EgovLoginUsr_SQL_postgres.xml&lt;/td>
 &lt;td>비밀번호 만료 및 로그인을 위한 Postgres용 Query XML&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Query XML&lt;/td>
 &lt;td>resources/egovframework/mapper/com/uat/uia/EgovLoginUsr_SQL_goldilocks.xml&lt;/td>
 &lt;td>비밀번호 만료 및 로그인을 위한 Goldilocks용 Query XML&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="관련테이블">관련테이블&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>테이블명&lt;/th>
 &lt;th>테이블명(영문)&lt;/th>
 &lt;th>비고&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>일반회원&lt;/td>
 &lt;td>COMTNGNRLMBER&lt;/td>
 &lt;td>일반회원 정보를 관리한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>주민등록번호(IHIDNUM) 컬럼이 존재하나 데이터 저장 및 조회 로직에서는 제외되어 있으므로&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>필요시 &lt;strong>암호화&lt;/strong>하여 구현해야 함&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>CHG_PWD_LAST_PNTTM 컴럼 사용(비밀번호 최초등록 또는 수정 일시 기록)&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>기업회원&lt;/td>
 &lt;td>COMTNENTRPRSMBER&lt;/td>
 &lt;td>기업회원 정보를 관리한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>신청인주민등록번호(APPLCNT_IHIDNUM) 컬럼이 존재하나 데이터 저장 및 조회 로직에서는 제외되어 있으므로,&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>필요시 &lt;strong>암호화&lt;/strong>하여 구현해야 함&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>CHG_PWD_LAST_PNTTM 컴럼 사용(비밀번호 최초등록 또는 수정 일시 기록)&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>업무사용자&lt;/td>
 &lt;td>COMTNEMPLYRINFO&lt;/td>
 &lt;td>업무사용자 정보를 관리한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>CHG_PWD_LAST_PNTTM 컴럼 사용(비밀번호 최초등록 또는 수정 일시 기록)&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="환경설정">환경설정&lt;/h2>
&lt;p>비밀번호 등록 또는 수정후 만료 기간을 설정할수 있다.&lt;/p></description></item><item><title>JPA Query Language</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-query-language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-query-language/</guid><description>&lt;h1 id="query-language">Query Language&lt;/h1>
&lt;p>JPA에는 별도의 Query Language를 제공함으로써 객체 지향 관점에서 특정 객체에 대한 조회와 DB 유형에 독립적인 Query 정의를 가능하도록 한다. 구성요소 및 작성 방법은 아래와 같다.&lt;/p>
&lt;h2 id="구성요소">구성요소&lt;/h2>
&lt;p>QL Statement 유형으로는 SELECT 문과 Update and Delete 문 두가지가 있다.&lt;/p>
&lt;ul>
&lt;li>SELECT문 : SELECT 절 + FROM 절 + WHERE 절(Option) + ORDER BY 절(Option) + GROUP BY 절(Option)&lt;/li>
&lt;li>UPDATE&amp;amp;DELETE문 : UPDATE/DELETE 절 + WHERE 절
각각의 절에 대해서 아래에서 알아보고자 한다.&lt;/li>
&lt;/ul>
&lt;h3 id="select-절">SELECT 절&lt;/h3>
&lt;p>조회 결과값을 구체적으로 명시하고자 할 경우 정의한다.&lt;/p></description></item><item><title>Query Method</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/jpa-spring-data/jpa-querymethod/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/jpa-spring-data/jpa-querymethod/</guid><description>&lt;h1 id="query-method">Query Method&lt;/h1>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h2 id="user-guide">User Guide&lt;/h2>
&lt;h3 id="query-method-1">Query Method&lt;/h3>
&lt;p>JPA 모듈은 문자열로 쿼리를 정의하거나 메서드에서 파생되어진 쿼리를 사용하는 방법을 지원한다.&lt;/p>
&lt;h4 id="쿼리생성">쿼리생성&lt;/h4>
&lt;p>스트링으로 쿼리를 정의하는 예시 :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">UserRepository&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Repository&lt;span style="color:#f92672">&amp;lt;&lt;/span>User, Long&lt;span style="color:#f92672">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>User&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">findByEmailAddressAndLastname&lt;/span>(String emailAddress, String lastname);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>JPA표준 API는 위의 스트링으로 정의된 쿼리를 다음 쿼리로 변경한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> u &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#66d9ef">User&lt;/span> u &lt;span style="color:#66d9ef">where&lt;/span> u.emailAddress &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> u.lastname &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="지원하는-메서드-명">지원하는 메서드 명&lt;/h4>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Keyword&lt;/th>
 &lt;th>Sample&lt;/th>
 &lt;th>JPQL snippet&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>And&lt;/code>&lt;/td>
 &lt;td>findByLastnameAndFirstname&lt;/td>
 &lt;td>… where x.lastname = ?1 and x.firstname = ?2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>Or&lt;/code>&lt;/td>
 &lt;td>findByLastnameOrFirstname&lt;/td>
 &lt;td>… where x.lastname = ?1 or x.firstname = ?2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>Between&lt;/code>&lt;/td>
 &lt;td>findByStartDateBetween&lt;/td>
 &lt;td>… where x.startDate between 1? and ?2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>LessThan&lt;/code>&lt;/td>
 &lt;td>findByAgeLessThan&lt;/td>
 &lt;td>… where x.age &amp;lt; ?1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>GreaterThan&lt;/code>&lt;/td>
 &lt;td>findByAgeGreaterThan&lt;/td>
 &lt;td>… where x.age &amp;gt; ?1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>After&lt;/code>&lt;/td>
 &lt;td>findByStartDateAfter&lt;/td>
 &lt;td>… where x.startDate &amp;gt; ?1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>Before&lt;/code>&lt;/td>
 &lt;td>findByStartDateBefore&lt;/td>
 &lt;td>… where x.startDate &amp;lt; ?1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>IsNull&lt;/code>&lt;/td>
 &lt;td>findByAgeIsNull&lt;/td>
 &lt;td>… where x.age is null&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>IsNotNull,NotNull&lt;/code>&lt;/td>
 &lt;td>findByAge(Is)NotNull&lt;/td>
 &lt;td>… where x.age not null&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>Like&lt;/code>&lt;/td>
 &lt;td>findByFirstnameLike&lt;/td>
 &lt;td>… where x.firstname like ?1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>NotLike&lt;/code>&lt;/td>
 &lt;td>findByFirstnameNotLike&lt;/td>
 &lt;td>… where x.firstname not like ?1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>StartingWith&lt;/code>&lt;/td>
 &lt;td>findByFirstnameStartingWith&lt;/td>
 &lt;td>… where x.firstname like ?1 (parameter bound with appended %)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>EndingWith&lt;/code>&lt;/td>
 &lt;td>findByFirstnameEndingWith&lt;/td>
 &lt;td>… where x.firstname like ?1 (parameter bound with prepended %)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>Containing&lt;/code>&lt;/td>
 &lt;td>findByFirstnameContaining&lt;/td>
 &lt;td>… where x.firstname like ?1 (parameter bound wrapped in %)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>OrderBy&lt;/code>&lt;/td>
 &lt;td>findByAgeOrderByLastnameDesc&lt;/td>
 &lt;td>… where x.age = ?1 order by x.lastname desc&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>Not&lt;/code>&lt;/td>
 &lt;td>findByLastnameNot&lt;/td>
 &lt;td>… where x.lastname &amp;lt;&amp;gt; ?1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>In&lt;/code>&lt;/td>
 &lt;td>findByAgeIn(Collection&lt;Age> ages)&lt;/td>
 &lt;td>… where x.age in ?1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>NotIn&lt;/code>&lt;/td>
 &lt;td>findByAgeNotIn(Collection&lt;Age> age)&lt;/td>
 &lt;td>… where x.age not in ?1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>True&lt;/code>&lt;/td>
 &lt;td>findByActiveTrue()&lt;/td>
 &lt;td>… where x.active = true&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>False&lt;/code>&lt;/td>
 &lt;td>findByActiveFalse()&lt;/td>
 &lt;td>… where x.active = false&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="using-query">Using @Query&lt;/h3>
&lt;p>Using named queries to declare queries for entities is a valid approach and works fine for a small number of queries. As the queries themselves are tied to the Java method that executes them you actually can bind them directly using the Spring Data JPA @Query annotation rather than annotating them to the domain class. This will free the domain class from persistence specific information and co-locate the query to the repository interface.&lt;/p></description></item><item><title>R2DBC</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-r2dbc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-r2dbc/</guid><description>&lt;h1 id="r2dbc">R2DBC&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>R2DBC(Relational Reactive Database Connectivity)는 Reactive 프로그래밍 모델을 기반으로 하는 비동기적인 방식으로 관계형 데이터베이스와 상호 작용하기 위한 자바 라이브러리로 Spring WebFlux와 함께 사용하여 비동기 논블로킹 방식의 애플리케이션을 구성할 수 있다. 이를 통해 리액티브 애플리케이션 스택에서 관계형 데이터 액세스 기술을 사용하는 Spring 기반 애플리케이션을 더 쉽게 빌드할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="데이터베이스-연동">데이터베이스 연동&lt;/h3>
&lt;p>R2DBC를 사용하여 데이터베이스에 액세스하기 위해 가장 먼저 해야 할 일은 JDBC의 DataSource와 비슷한 역할을 하는 ConnectionFactory 객체를 만드는 것이다.&lt;br>
ConnectionFactory를 생성하는 가장 간단한 방법은 ConnectionFactories 클래스를 사용하는 것인데 이 클래스에는 ConnectionFactoryOptions 객체를 받아 ConnectionFactory를 반환하는 정적 메서드가 있다.&lt;br>
ConnectionFactory의 인스턴스는 하나만 필요하며, 데이터베이스 종류 및 데이터베이스 드라이버에 따라 구현체가 다를 수 있으므로 공통으로 사용할 수 있게 실행환경에 구성하고 애플리케이션 구성에서 필요할 때마다 주입을 통해 사용할 수 있도록 제공한다.&lt;/p></description></item><item><title>Spring Data - Reactive</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/reactive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/reactive/</guid><description>&lt;h1 id="spring-data---reactive">Spring Data - Reactive&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring Data는 스프링 프레임워크의 하위 프로젝트 중 하나로, 데이터 액세스를 단순화하고 보다 쉽게 관리할 수 있도록 지원하는 도구 모음이다. 주로 데이터베이스와의 상호 작용을 다루며, 다양한 데이터 저장소 및 데이터 액세스 기술을 지원한다.&lt;br>
여기서는 NoSQL 데이터베이스인 R2DBC, Spring Data MongoDB, Cassandra, Redis와 Spring Reactive 연동에 전자정부 표준프레임워크에서 지원하는 라이브러리에 대해 설명한다.&lt;br>
자세한 내용은 아래 페이지에서 확인할 수 있다.&lt;/p>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-r2dbc/">R2DBC&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-mongodb/">MongoDB&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-cassandra/">Cassandra&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-redis/">Redis&lt;/a>


&lt;/li>
&lt;/ul></description></item><item><title>Reactive Core</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/web-reactive-reactive-core/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/web-reactive-reactive-core/</guid><description>&lt;h1 id="reactive-core">Reactive Core&lt;/h1>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>스프링-웹 모듈에는 반응형 웹 애플리케이션을 위한 다음과 같은 기본 지원이 포함되어 있다.&lt;/p>
&lt;ul>
&lt;li>서버 요청 처리에는 두 가지 수준을 지원한다.
&lt;ul>
&lt;li>HttpHandler: 논블로킹 I/O 및 리액티브 스트림 Back Pressure을 사용하는 HTTP 요청을 처리하며, Reactor Netty, Undertow, Tomcat, Jetty 및 모든 Servlet 3.1+ 컨테이너용 어댑터와 함께 사용한다.&lt;/li>
&lt;li>WebHandler API: 요청 처리를 위한 약간 더 높은 수준의 범용 웹 API로, 주석이 달린 컨트롤러 및 기능적 엔드포인트와 같은 구체적인 프로그래밍 모델로 작성되어 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>클라이언트 사이드에서는 논블로킹 I/O 및 리액티브 스트림 Back Pressure으로 HTTP 요청을 수행하는 기본 ClientHttpConnector 계약과 함께 Reactor Netty, 리액티브 Jetty HttpClient 및 Apache HttpComponents용 어댑터가 있다. 애플리케이션에 사용되는 상위 수준의 WebClient는 이를 기반으로 구축된다.&lt;/li>
&lt;li>클라이언트와 서버 모두 코덱으로 HTTP 요청 및 응답 콘텐츠의 직렬화 및 역직렬화를 한다.&lt;/li>
&lt;/ul>
&lt;h3 id="httphandler">HttpHandler&lt;/h3>
&lt;p>HttpHandler는 요청과 응답을 처리하는 메소드를 하나만 가지고 있다. 의도적으로 최소한의 기능을 제공하며, 주된 목적은 다양한 HTTP 서버 API에 대한 최소한의 추상화이다.
지원하는 서버의 API는 아래 표와 같다.&lt;/p></description></item><item><title>Redis</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-redis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/reactive/reactive-redis/</guid><description>&lt;h1 id="redis">Redis&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring Data Redis 프로젝트는 키-값 스타일 데이터 저장소를 사용하여 솔루션 개발에 핵심 Spring 개념을 적용하여 메시지를 주고받기 위한 높은 수준의 추상화 템플릿을 제공한다. Spring 프레임워크의 JDBC 지원과 유사하다는 것을 알 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="데이터베이스-연동">데이터베이스 연동&lt;/h3>
&lt;p>Spring Data Redis와 Spring WebFlux를 함께 사용하여 Redis 데이터베이스와의 비동기적인 상호 작용을 지원하기 위해 Spring Data Redis에서 제공하는 ReactiveRedisConnectionFactory 인터페이스의 구현클래스인 LettuceConnectionFactory 클래스를 사용한다. 해당 클래스를 사용하여 데이터베이스 연결을 설정하고, 세션을 관리하며 비동기 쿼리를 실행하고 결과를 처리할 수 있다.&lt;/p></description></item><item><title>Remote JobLauncher</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-execution-job_launcher/batch-execution-remote-job_launcher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-execution-job_launcher/batch-execution-remote-job_launcher/</guid><description>&lt;h1 id="remote-joblauncher">Remote JobLauncher&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Remote JobLauncher는 온라인 상에서 별도의 배치 서버의 Batch Job작업을 실행시키는 역할을 한다.
온라인 상의 Client와 Server를 이용하여 요청된 배치 작업을 수행한다.&lt;/p>
&lt;h2 id="구성">구성&lt;/h2>
&lt;p>온라인상의 Remote JobLauncher를 구현하기 위하여 Hessian Binary Web Service를 사용한다.
Hessian 웹서비스는 별도의 대형 프레임워크를 설치하지 않고도 간편하게 사용할 수 있은 웹서비스이며, HTTP기반의 경량 바이러리 프로토콜로 별도의 확장없이 바이너리 데이터를 전송하는데 적합하다.
또한, 스피링의 HessianProxyFactoryBean과 HessianServiceExporter를 사용하여 편리한 Integration을 지원한다.&lt;/p>
&lt;p>Hessian을 사용하기 위하여 아래와 같이 라이브러리 디펜던시를 설정한다.&lt;/p></description></item><item><title>Spring Web Flow의 뷰(View) 보여주기</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/swf-elements-rendering-views/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/swf-elements-rendering-views/</guid><description>&lt;h1 id="뷰view-보여주기">뷰(View) 보여주기&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>view-state는 flow 내에서 화면을 생성하는 요소이다.
여기서는 view-state 에 대해서 알아보도록 하자.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="뷰-상태view-state-정의하기">뷰 상태(view state) 정의하기&lt;/h3>
&lt;p>view-state는 기본적으로 해당 뷰를 생성하여 보여준 후, 사용자가 화면을 통해 응답을 하는 것을 기다린다.
아래는 view-state는 enterBookingDetails라는 ID 를 가지고 있으며 또한 별도의 view 설정이 없기 때문에 ID 가 곧 view를 뜻한다&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;view-state&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;enterBookingDetails&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;transition&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">to=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;reviewBooking&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/view-state&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>따라서. 디렉토리 상의&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/business-logic-layer/images/dir.jpg" alt="dir" >
&lt;/p>
&lt;p>booking.xml(or booking-flow.xml) 이 존재하는 디렉토리에 있는 enterBookingDetails.jsp 이 자동으로 view로 동작한다.
또는 절대 경로를 이용하여 명시적으로 view=”/WEB-INF/hotels/booking/enterBookingDetails.jsp” 설정할 수도 있다.
아래에서 다시 설명하겠다.&lt;/p></description></item><item><title>MongoDB Repositories</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/mongodb/mongodb-repositories3_5_1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/mongodb/mongodb-repositories3_5_1/</guid><description>&lt;h1 id="mongodb-repositories-351">MongoDB Repositories 3.5.1&lt;/h1>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Spring Data MongoDB도 Spring Data repository 추상화 인터페이스를 지원한다. 이에 대한 내용은 Spring Data JPA 가이드 중 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/jpa-spring-data/jpa-repository/">Repository&lt;/a>


 부분을 참조한다.&lt;/p>
&lt;h2 id="1-시작하기">1. 시작하기&lt;/h2>
&lt;p>MongoDB에 대한 repository를 사용하기 위해서는 다음과 같은 mongo schem의 repositories 설정이 필요하다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:mongo=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/data/mongo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;mongo:mongo-client&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">host=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;localhost&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">port=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;27017&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">credentials=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id:password@database&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/mongo:mongo-client&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;mongo:db-factory&lt;/span> &lt;span style="color:#a6e22e">dbname=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;database&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">mongo-ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mongo&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mongoTemplate&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.data.mongodb.core.MongoTemplate&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;constructor-arg&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mongoDbFactory&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mongoDbFactory&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- for Repository --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;mongo:repositories&lt;/span> &lt;span style="color:#a6e22e">base-package=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.data.mongodb.repository&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/beans&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="domain-object-생성">Domain Object 생성&lt;/h3>
&lt;p>일반적인 POJO를 통해 MongoDB에 문서를 저장한다.&lt;/p></description></item><item><title>저장소(Repository) 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-repository_mgmt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-repository_mgmt/</guid><description>&lt;h1 id="저장소repository-예제">저장소(Repository) 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 수행 시, 데이터 처리 대상(DB,File등)에 대한 설정을 보여주는 예제이다. EgovRepositoryFunctionalTests 예제는 리소스가 DB 인 jdbcCursorIoJob 과 리소스가 File인 delimitedIoJob의 수행과정을 보여주면서, 데이터가 DB에서 DB로 File 에서 File로 처리 된다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>저장소(Repository) 예제의 Job 설정 파일인 repositoryJob.xml 을 확인한다.&lt;/b>&lt;/p>
&lt;p>Job 의 구성을 보면 리소스 타입에 따라 두 개의 Job으로 구성되어 있고, 각 타입에 따른 Reader와 Writer를 사용하게 된다.&lt;/p>
&lt;ul>
&lt;li>jdbcCursorIoJob : 리소스가 DB인 Job&lt;/li>
&lt;li>delimitedIoJob : 리소스가 파일인 Job&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--resource가 DB일 경우 xml에 등록 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbcCursorIoJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbcCursorIoStep1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReaderDB&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">processor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemProcessor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemWriterDB&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--resource가 파일일 경우 xml에 등록 또는 JobParameter에 등록 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delimitedIoJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delimitedIostep1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReaderFile&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">processor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemProcessor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemWriterFile&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="junittest-구성-및-수행">JunitTest 구성 및 수행&lt;/h3>
&lt;h4 id="junittest-구성">JunitTest 구성&lt;/h4>
&lt;p>&lt;b>repositoryJob 설정과 관련 클래스들로 Junit Test를 수행한다. 이 때 배치가 수행되고, 관련된 내용을 확인할 수 있다.&lt;/b>&lt;/p></description></item><item><title>Resource 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/resource/</guid><description>&lt;h1 id="resource-서비스">Resource 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>리소스를 활용하여 가장 많이 사용하는 메시지 제공 서비스를 살펴본다. 메시지 제공 서비스는 미리 정의된 파일에서 메시지를 읽어 들인 후, 오류 발생시 또는 안내 메시지를 제공하기 위해 키값에 해당하는 메시지를 가져오는 기능을 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="message-basic">Message Basic&lt;/h3>
&lt;p>메시지를 활용하기 위한 기본 설정 및 활용에 대해서 예제를 중심으로 설명한다.&lt;/p>
&lt;h4 id="configuration">Configuration&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;messageSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.context.support.ResourceBundleMessageSource&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;useCodeAsDefaultMessage&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;value&amp;gt;&lt;/span>true&lt;span style="color:#f92672">&amp;lt;/value&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;basenames&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;list&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;value&amp;gt;&lt;/span>egovframework-message&lt;span style="color:#f92672">&amp;lt;/value&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/list&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위의 설정에서”egovframework-message” 로 지정한 파일은 실제로는 egovframework-message.properties 로 정의되어 있다. 파일의 위치를 지정하는 방법이 여러가지가 가능한데 그 설정에 대한 것은 



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/resource/#%ec%b0%b8%ea%b3%a0%ec%9e%90%eb%a3%8c">4.참고자료&lt;/a>


 참조.&lt;/p></description></item><item><title>Resource Variable</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/resource_variable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/resource_variable/</guid><description>&lt;h1 id="resource-variable">Resource Variable&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>사용자 정의 리소스 변수 선언 후 Setp에서 ItemReader, ItemWriter에서 사용자 정의 리소스를 사용할 수 있도록 EgovResourceVariable를 통해서 지원한다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/images/resource_variable_architecture7.png" alt="image" >
&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="egovresourcevariable-설정">EgovResourceVariable 설정&lt;/h3>
&lt;p>배치실행환경에서 제공하는 EgovResourceVariable 사용하여 사용자 정의 리소스를 설정한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovResourceVariable&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.bat.support.EgovResourceVariable&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pros&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;props&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;prop&lt;/span> &lt;span style="color:#a6e22e">key=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;input.resource&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>file:./src/main/resources/egovframework/batch/data/inputs/csvData.csv&lt;span style="color:#f92672">&amp;lt;/prop&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;prop&lt;/span> &lt;span style="color:#a6e22e">key=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;writer.resource&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>file:./target/test-outputs/csvOutput_ResourceVariable_#{new java.text.SimpleDateFormat(&amp;#39;yyyyMMddHHmmssSS&amp;#39;).format(new java.util.Date())}.csv&lt;span style="color:#f92672">&amp;lt;/prop&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/props&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="step-정의-시-리소스-사용">step 정의 시 리소스 사용&lt;/h3>
&lt;p>Setp에서 ItemReader, ItemWriter 사용시 사용자 정의 리소스 변수를 사용하여 resource 설정이 가능하다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delimitedToDelimitedJob-ResourceVariable.delimitedToDelimitedStep.delimitedItemReader&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.FlatFileItemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">scope=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;resource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#{egovResourceVariable.getVariable(&amp;#39;input.resource&amp;#39;)}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lineMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.bat.core.item.file.mapping.EgovDefaultLineMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lineTokenizer&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.bat.core.item.file.transform.EgovDelimitedLineTokenizer&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delimiter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;,&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;objectMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.bat.core.item.file.mapping.EgovObjectMapper&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;type&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						&lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.example.bat.domain.trade.CustomerCredit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;names&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name,credit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delimitedToDelimitedJob-ResourceVariable.delimitedToDelimitedStep.delimitedItemWriter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.FlatFileItemWriter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">scope=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;resource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#{egovResourceVariable.getVariable(&amp;#39;writer.resource&amp;#39;)}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lineAggregator&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.transform.DelimitedLineAggregator&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delimiter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;,&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fieldExtractor&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.bat.core.item.file.transform.EgovFieldExtractor&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;names&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name,credit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>재시도(Restart) 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-restart_mgmt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi-restart_mgmt/</guid><description>&lt;h1 id="restart-예제">Restart 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Job이 restart 되는 기능을 예제로 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>Restart 예제의 Job 설정파일인 restartFileSampleJob.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>job을 재실행할 수 있는지 여부를 Job 설정시 지정할 수 있다. 디폴트는 true이고 아래와 같이 restartable 설정에 따라 지정할 수 있다.&lt;/p>
&lt;p>&lt;b>재실행 가능&lt;/b>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;restartFileSampleJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;restartFileSampleStep1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">processor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemProcessor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemWriter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;b>재실행 불가능&lt;/b>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;restartFileSampleJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">restartable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;restartFileSampleStep1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">processor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemProcessor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemWriter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="junittest-구성-및-수행">JunitTest 구성 및 수행&lt;/h3>
&lt;h4 id="junittest-구성">JunitTest 구성&lt;/h4>
&lt;p>&lt;b>Restart 예제를 수행하고 배치작업 결과에 대한 검증을 위해 다음과 같이 @Test를 구성하였다.&lt;/b>&lt;/p></description></item><item><title>Restful</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/restful/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/restful/</guid><description>&lt;h1 id="restful">Restful&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring MVC를 통해 구현한 RESTful은 리소스에 대한 접근을 URI를 이용하며, HTTP의 PUT, GET, POST, DELETE 등과 같은 메소드의 의미를 그대로 사용하므로, 단순하게 접근 할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="webxml-설정">web.xml 설정&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-name&amp;gt;&lt;/span>action&lt;span style="color:#f92672">&amp;lt;/servlet-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>*.html&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-name&amp;gt;&lt;/span>action&lt;span style="color:#f92672">&amp;lt;/servlet-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>*.xml&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-name&amp;gt;&lt;/span>action&lt;span style="color:#f92672">&amp;lt;/servlet-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>*.json&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-name&amp;gt;&lt;/span>httpMethodFilter&lt;span style="color:#f92672">&amp;lt;/filter-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-class&amp;gt;&lt;/span>org.springframework.web.filter.HiddenHttpMethodFilter&lt;span style="color:#f92672">&amp;lt;/filter-class&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-name&amp;gt;&lt;/span>httpMethodFilter&lt;span style="color:#f92672">&amp;lt;/filter-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>/springrest/*&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>자세한 설명은 아래에 있다.&lt;/p>
&lt;h3 id="request-mapping">Request Mapping&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>설정&lt;/p>
&lt;p>REST 스타일의 URL은 &amp;lsquo;/cgr’, &amp;lsquo;/cgr/CATEGORY-00000000001&amp;rsquo; 처럼 계층 구조로 사용가능하도록 설계되었다. 따라서 web.xml에 DispatcherServlet을 정의하고 매핑할 URL 패턴을 &amp;lsquo;/&amp;lsquo;로 지정해야한다. &lt;strong>DispatcherServlet URL 매핑&lt;/strong> 샘플은 다음과 같다.&lt;/p></description></item><item><title>Restful 웹서비스 예제(Restful Web Service Example)</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/integration-layer/restful-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/integration-layer/restful-example/</guid><description>&lt;h1 id="restful-웹서비스-예제restful-web-service-example">Restful 웹서비스 예제(Restful Web Service Example)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring 3.0에서 새롭게 추가된 Restful 웹서비스 지원기능을 이용하여 주어진 데이터를 Restful 요청/응답을 통하여 화면 또는 각 파일 양식으로 출력시켜주는 기능의 예제이다. URL을 통하여 각 카테고리의 목록 또는 상세정보를 요청할 수 있으며, HTML, JSON, XML 형태의 출력을 지원한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;pre tabindex="0">&lt;code>1. 해당 예제를 실행하면 Restful 웹서비스기능을 이용한 카테고리 관리페이지를 볼 수 있다. 
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/integration-layer/images/restful-1.png" alt="restful-1" >
&lt;/p>
&lt;pre tabindex="0">&lt;code>2. [등록] 버튼을 누르면 카테고리 등록페이지를 호출하고 카테고리 등록이 가능하다.
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/integration-layer/images/restful-2.png" alt="restful-2" >
&lt;/p>
&lt;pre tabindex="0">&lt;code>3. 카테고리 관리페이지에서 [json으로 내보내기]버튼을 누르면 JSON형태로 카테고리목록을 출력한다.
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/integration-layer/images/restful-4.png" alt="restful-4" >
&lt;/p></description></item><item><title>resultMap</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-resultMap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-resultMap/</guid><description>&lt;h1 id="resultmap">resultMap&lt;/h1>
&lt;p>resultMap 은 SQL 문 외부에 정의한 매핑 요소로, result set 으로부터 어떻게 데이터를 뽑아낼지, 어떤 칼럼을 어떤 property로 매핑할지에 대한 상세한 제어를 가능케 해준다. resultMap 은 일반적으로 가장 많이 사용되는 중요한 매핑 요소로 resultClass 속성을 이용한 자동 매핑 접근법에 비교하여 칼럼 타입의 지시, null value 대체값, typeHandler 처리, complex property 매핑(다른 JavaBean, Collections 등을 포함하는 복합 객체) 등을 허용한다.&lt;/p>
&lt;h2 id="기본-resultmap-사용-방법">기본 resultMap 사용 방법&lt;/h2>
&lt;p>아래의 샘플 resultMap 정의를 참고하라.&lt;/p>
&lt;h3 id="sample-resultmap">Sample resultMap&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>	..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;typeAlias&lt;/span> &lt;span style="color:#a6e22e">alias=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;empVO&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.psl.dataaccess.vo.EmpVO&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;resultMap&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;empResult&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;empVO&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;result&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;empNo&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;EMP_NO&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">columnIndex=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">javaType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;decimal&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">jdbcType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;NUMERIC&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;result&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;empName&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;EMP_NAME&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">columnIndex=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">javaType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;string&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">jdbcType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;VARCHAR&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;result&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;job&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;JOB&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">columnIndex=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">javaType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;string&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">jdbcType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;VARCHAR&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;result&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mgr&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;MGR&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">columnIndex=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">javaType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;decimal&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">jdbcType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;NUMERIC&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;result&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hireDate&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;HIRE_DATE&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">columnIndex=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">javaType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;date&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">jdbcType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;DATE&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;result&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sal&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;SAL&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">columnIndex=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;6&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">javaType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;decimal&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">jdbcType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;NUMERIC&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;result&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;comm&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;COMM&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">columnIndex=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;7&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">javaType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;decimal&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">jdbcType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;NUMERIC&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">nullValue=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;result&lt;/span> &lt;span style="color:#a6e22e">property=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;deptNo&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">column=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;DEPT_NO&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">columnIndex=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#a6e22e">javaType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;decimal&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">jdbcType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;NUMERIC&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/resultMap&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;select&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;selectEmpUsingResultMap&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parameterClass=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;empVO&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">resultMap=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;empResult&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">&amp;lt;![CDATA[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			select EMP_NO,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 EMP_NAME,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 JOB,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 MGR,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 HIRE_DATE,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 SAL,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 COMM,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			 DEPT_NO
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			from EMP
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">			where EMP_NO = #empNo#
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">		]]&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위 sql 매핑 파일에서 resultMap 요소로 empResult 라는 id 를 부여하고 대상 결과 객체는 EmpVO 를 지정하고 있다. EmpVO 에 대한 상세 attribute (속성) 들에 대해 result 하위 요소로 매핑 정의를 하고 있는데 column 속성으로 result set 에서 얻을 수 있는 select 대상 칼럼(column alias 를 쓴 경우이면 해당 alias 명) 을 매핑하게 된다. 위에서는 추가적으로 columnIndex, javaType, jdbcType 에 대해 명시하였다. 위와 같이 타입을 명확하게 지시해주면 java 의 reflection 기술을 사용하여 대상 클래스의 개별 속성에 대한 type 을 구하는 것보다 성능상 이점이 있을 수 있다. columnIndex 를 지정하는 경우에는 rs.getString(“EMP_NAME”) → rs.getString(2)로 처리되는 사소한 성능상의 이점이 있지만, 순서의 지정이나 설정 자체의 번거로움으로 추천하지 않는 바이다. 또한 nullValue 속성을 지정한 property 에 대해서는 해당 값이 데이터베이스에서 null 로 읽혔을 때 nullValue 에 지정된 값으로 대체되어 JavaBeans property 에 설정된다. 이 외에도 result 하위 요소의 속성으로 select, resultMap 을 통해 다른 쿼리문의 결과나 complex property 의 처리를 위한 내포 객체에 대한 외부 resultMap 매핑요소를 참조할 수 있다. 또한 typeHandler 속성을 통해 iBATIS 의 기본 처리가 아닌 custom typeHandler 구현체를 지시할 수도 있다.&lt;/p></description></item><item><title>재시도(Retry) 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-retry_mgmt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-retry_mgmt/</guid><description>&lt;h1 id="재시도retry-예제">재시도(Retry) 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 수행 시, 데이터를 처리하는 과정에서 실패한 데이터처리를 재시도하는 과정을 보여주는 예제이다. EgovRetrySampleFunctionalTests 예제는 ItemProcessing, ItemWriting 에서 발생한 예외상황에 대해 정해진 설정대로 Retry를 수행하는 과정을 보여준다. 설정된 retry-limit 만큼 재시도를 허용함으로써 Job 전체의 실패를 줄일 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>재시도(Retry) 예제의 Job 설정 파일인 retrySample.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>Job 의 구성을 보면 Chunk 설정에 아래와 같은 설정이 있다.&lt;/p>
&lt;ul>
&lt;li>retry-limit : Retry 할 수 있는 최대 횟수를 지정한다.&lt;/li>
&lt;li>&amp;lt;retryable-exception-classes&amp;gt; : Exception 범위를 지정한다. Rollback을 유발하므로, 너무 많은 retry 는 성능저하를 주의해야 한다.&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> &amp;lt;include&amp;gt; : retry 해야하는 Exception 지정
 &amp;lt;exlclude&amp;gt; : include로 지정한 exception의 하위 exception 중, retry 하지 않을 Exception 지정
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;retrySample&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemGenerator&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemWriter&amp;#34;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		 &lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">retry-limit=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 &lt;span style="color:#f92672">&amp;lt;retryable-exception-classes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 	&lt;span style="color:#f92672">&amp;lt;include&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;java.lang.Exception&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 &lt;span style="color:#f92672">&amp;lt;/retryable-exception-classes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/chunk&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="junittest-구성-및-수행">JunitTest 구성 및 수행&lt;/h3>
&lt;h4 id="junittest-구성">JunitTest 구성&lt;/h4>
&lt;p>&lt;b>retrySample 설정과 관련 클래스들로 Junit Test를 수행한다. 이 때 배치가 수행되고, 관련된 내용을 확인할 수 있다.&lt;/b>&lt;/p></description></item><item><title>Run TestSuite</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-automation/run-testsuite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-automation/run-testsuite/</guid><description>&lt;h1 id="run-testsuite">Run TestSuite&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>작성된 TestSuite 클래스나, TestCase 들을 Ant나 Maven 같은 빌드도구를 사용하여 자동으로 수행할 수 있는 방법에 대해 설명한다.
테스트 결과 리포트가 생성되는데, 이는 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-automation/test-reporting/">Test Reporting&lt;/a>


에서 자세하게 설명하도록 한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>개발자가 단위테스트 클래스인 TestCase를 작성하고 나면, 개별적으로 테스트를 수행하여 결과를 볼 수 있다.
그러나, 일단 코드로 작성된 TestCase들은 빌드도구를 사용하여 자동화된 테스트를 수행할 수 있다.
빌드도구는 Ant와 Maven을 사용할 수 있으며, 이클립스에서는 각각 Ant와 Maven의 Plug-in을 사용하여 GUI 환경에서 테스트할 수 있고, CI 서버에 등록하면 동일한 프로세스를 서버단에서 수행한 뒤 CI 서버에서 리포트를 merge할 수 있도록 XML 파일을 제공할 수 있다.&lt;/p></description></item><item><title>배치 Runner 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-batch_runner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-batch_runner/</guid><description>&lt;h1 id="배치-runner-예제">배치 Runner 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 수행에 사용되는 EgovBatchRunner의 사용법을 보여주는 예제이다. 비동기 방식으로 실행하는 Job의 시작, 정지, 재시작 방법을 보여준다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="egovbatchrunner-설정">EgovBatchRunner 설정&lt;/h4>
&lt;p>EgovBatchRunner의 설정 방법은 



 


 








 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/batch-execution-job_runner/#egovbatchrunner">배치 Runner&lt;/a>


를 참고한다.&lt;/p>
&lt;h4 id="launcher-설정">Launcher 설정&lt;/h4>
&lt;p>&lt;strong>배치 Runner 예제의 Job 설정 파일인 batchRunnerTest.xml을 확인한다.&lt;/strong>&lt;/p>
&lt;p>본 예제에서는 비동기 방식으로 Job을 수행한다. 이를 위해 JobLauncher의 TaskExecutor에 SimpleAsyncTaskExecutor 클래스를 지정한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobLauncher&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.core.launch.support.SimpleJobLauncher&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobRepository&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobRepository&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskExecutor&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.core.task.SimpleAsyncTaskExecutor&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;strong>배치 Runner 예제의 Job 설정 파일인 batchRunnerTest.xml을 확인한다.&lt;/strong>&lt;/p>
&lt;p>✔ Job 재시작시, Job 시작에 사용되었던 JobParameter를 사용하기 위해 JobParametersIncrementer를 이용한다.&lt;br>
✔ batchRunnerTestJob에서 JobParametersIncrementer 클래스를 사용하기 위해 simpleJob을 상속받는다. 이때 simpleJob은 restartable이 true로 설정된다.&lt;br>
✔ Step도 simpleStep을 상속받아서 구현한다.&lt;/p></description></item><item><title>Scheduling 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/scheduling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/scheduling/</guid><description>&lt;h1 id="scheduling-서비스">Scheduling 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Scheduling 서비스는 어플리케이션 서버 내에서 주기적으로 발생하거나 반복적으로 발생하는 작업을 지원하는 기능으로서 유닉스의 크론(Cron) 명령어와 유사한 기능을 제공한다.&lt;br>
실행환경 Scheduling 서비스는 오픈소스 소프트웨어로 Quartz 스케쥴러를 사용한다. 본 장에서는 Quartz 스케쥴러의 기본 개념을 살펴본 후, IoC 서비스를 제공하는 Spring과 Quartz 스케쥴러를 통합하여 사용하는 방법을 살펴본다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="quartz-스케쥴러">Quartz 스케쥴러&lt;/h3>
&lt;p>Quartz 스케쥴러 실행과 관계된 주요 요소는 Scheduler, Job, JobDetail, Trigger 가 있다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Scheduler&lt;/strong> 는 Quartz 실행 환경을 관리하는 핵심 개체이다.&lt;/li>
&lt;li>&lt;strong>Job&lt;/strong> 은 사용자가 수행할 작업을 정의하는 인터페이스로서 Trigger 개체를 이용하여 스케쥴할 수 있다.&lt;/li>
&lt;li>&lt;strong>JobDetail&lt;/strong> 는 작업명과 작업그룹과 같은 수행할 Job에 대한 상세 정보를 정의하는 개체이다.&lt;/li>
&lt;li>&lt;strong>Trigger&lt;/strong> 는 정의한 Job 개체의 실행 스케쥴을 정의하는 개체로서 Scheduler 개체에게 Job 수행시점을 알려주는 개체이다.&lt;/li>
&lt;/ul>
&lt;p>Quartz 스케쥴러는 수행 작업을 정의하는 Job과 실행 스케쥴을 정의하는 Trigger를 분리함으로써 유연성을 제공한다. Job 과 실행 스케쥴을 정의한 경우, Job은 그대로 두고 실행 스케쥴만을 변경할 수 있다. 또한 하나의 Job에 여러 개의 실행 스케쥴을 정의할 수 있다.&lt;/p></description></item><item><title>Spring Web Flow에서 보안 적용</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-configuration-securing-flows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-configuration-securing-flows/</guid><description>&lt;h1 id="flow에-보안-적용하기securing-flows">Flow에 보안 적용하기(Securing Flows)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>보안은 어플리케이션 에서 매우 중요한 이슈이다.
Spring Security는 어플리케이션과 결합하여 여러 수준에서 보안을 책임지는 플랫폼의 기능을 수행한다.
여기서는 Web Flow에 적용되는 Spring Security에 대해 알아보겠다.&lt;/p>
&lt;h3 id="어떻게-flow를-안전하게-할-수-있을까">어떻게 Flow를 안전하게 할 수 있을까?&lt;/h3>
&lt;p>Flow 실행에 보안을 적용시키고 싶다면 다음 단계에 따르자.&lt;/p>
&lt;ol>
&lt;li>Spring Security에서 인증(authentication)과 권한(authorization) 규칙을 설정한다.&lt;/li>
&lt;li>secured 구성요소로 Flow 정의에 보안 규칙을 추가한다.&lt;/li>
&lt;li>보안 규칙을 처리해주는 SecurityFlowExecutionListener 추가한다.&lt;/li>
&lt;/ol>
&lt;h3 id="secured-구성요소">secured 구성요소&lt;/h3>
&lt;p>secured 구성 요소는 접근하기 전에 권한 확인을 적용해 주며, Flow 실행 단계마다 한 번 이상은 나올 수 없다.
Flow 실행에서 세 단계로 보안을 적용할 수 있다. Flow, state, transition에 보안 적용이 가능하다.
사용되는 문법은 동일하다. secured 구성요소는 보안이 적용되어야 하는 구성 요소 내에 위치하면 된다.
예를 들어 view state에 보안을 적용하고자 하면,&lt;/p></description></item><item><title>Security Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/security/</guid><description>&lt;h1 id="security-service">Security Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>인증, 권한 같은 일반적인(통상적인) 개념의 Security 서비스는 Spring Security를 활용한 공통기반 레이어에서 제공한다.
화면 처리 레이어의 Security 서비스는 입력값 유효성 검증 기능을 제공한다.
입력값 유효성 검증(validation)을 위한 기능은 Valang, Jakarta Commons, Spring 등에서 제공하는데, 여기서는 기반 오픈소스로 Jakarta Commons Validator를 선택했다.
MVC 프레임워크인 Spring MVC와 Jakarta Commons Validator의 연계와 활용방안을 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Jakarta Commons Validator는 필수값, 각종 primitive type(int,long,float…), 최대-최소길이, 이메일, 신용카드번호등의 값 체크등을 할 수 있도록 Template이 제공된다.
또한 client-side, server-side의 검증을 함께 할 수 있으며,
Configuration과 에러메시지를 client-side, server-side 별로 따로 하지 않고 한곳에 같이 쓰는 관리상의 장점이 있다.
자세한 설명은 아래의 문서를 참조하라.&lt;/p></description></item><item><title>Server Connection Management</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/server-connection-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/server-connection-management/</guid><description/></item><item><title>Server Security</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/</guid><description>&lt;h1 id="server-security-service">Server Security Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>웹을 통해 데이터를 주고받는 업무를 진행할 경우, 보안상의 문제가 발생하기 쉽다.&lt;br>
Security Service는 웹을 통한 서비스 이용 시 발생할 수 있는 다양한 보안상의 취약점들을 사전에 인지하고 대응함으로써, 서비스의 안정성을 확보한다.&lt;br>
Security Service는 사용자 정보를 DB에서 관리하여 인증을 거쳐야만 접근할 수 있는 &lt;strong>Authentication&lt;/strong>과 사용자 권한 정보를 계층화시켜서 화면 및 페이지, 또는 메소드에 접근할 수 있는 &lt;strong>Authorization&lt;/strong>이 포함된다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Server Security Service는 Spring Framework의 Spring Security를 확장하여 구현하였으며, 사용자 인증정보 및 권한정보를 DB에서 관리하고, Spring Security의 UserDetails 인터페이스를 확장하여 세션정보를 담을 수 있다.&lt;br>
Server Security의 주요기능은 다음과 같다.&lt;/p></description></item><item><title>Session 방식 접근제어 권한설정</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/session-based-access-control-permission-settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/session-based-access-control-permission-settings/</guid><description>&lt;h1 id="session-방식-접근제어-권한설정">Session 방식 접근제어 권한설정&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>표준프레임워크 3.9부터 Session 방식으로 접근제어 권한관리를 설정 할 수 있는 방법을 제공한다.
내부적으로 필요한 설정을 가지고 있고, XML Schema를 통해 필요한 설정만을 추가할 수 있도록 제공한다.
이 기능을 사용하기 위해서는 globals.properties 파일에서 Globals.Auth = session 로 설정한다.&lt;/p>
&lt;h2 id="환경설정">환경설정&lt;/h2>
&lt;h3 id="pomxml-dependency추가">pom.xml (dependency추가)&lt;/h3>
&lt;p>Session 방식의 접근제어 권한관리를 사용하기 위해서는 표준프레임워크 실행환경 구성요소중 org.egovframe.rte.fdl.access 라이브러리가 설치되어야 한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.egovframe.rte&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>org.egovframe.rte.fdl.access&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>${org.egovframe.rte.version}&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="xml-namespace-및-schema-설정">XML namespace 및 schema 설정&lt;/h3>
&lt;p>접근제어를 설정하기 위해서는 다음과 같은 xml 선언이 필요하다.&lt;/p></description></item><item><title>배치실행환경 예제 설치법</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-setup/</guid><description>&lt;h1 id="배치실행환경-예제-설치법">배치실행환경 예제 설치법&lt;/h1>
&lt;h2 id="설치-순서">설치 순서&lt;/h2>
&lt;h3 id="기본순서">기본순서&lt;/h3>
&lt;p>전자정부 표준프레임워크 홈페이지에서 배치실행환경 소스파일을 다운 받아 압축을 풀고, m2 이클립스가 설치되어 있다는 가정하에 설명한다.&lt;/p>
&lt;p>



 









 



&lt;a href="http://www.egovframe.go.kr/EgovRunEnvReleaseEdu.jsp?menu=3&amp;amp;submenu=1&amp;amp;leftsub=5">실행환경 예제 다운로드&lt;/a>


&lt;/p>
&lt;ol>
&lt;li>Package Explorer에서 오른쪽 마우스를 클릭하여 소스를 임포트한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/batch-layer/images/%ec%82%ac%ec%9a%a9%ec%9e%90_%ec%a7%80%ec%a0%95_3.jpg" alt="" >
&lt;/p>
&lt;ol start="2">
&lt;li>General&amp;gt;Existing Projects into Workspace를 선택하여 압축을 풀어놓은 폴더를 선택한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/batch-layer/images/%ec%82%ac%ec%9a%a9%ec%9e%90_%ec%a7%80%ec%a0%95_4.jpg" alt="" >
&lt;/p>
&lt;ol start="3">
&lt;li>배치실행예제에서는 HSQL DB를 제공하고 있으며 runHsqlDB.cmd 파일을 실행시켜 DB를 기동시킨다.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>egovframework.brte.example\database\db 폴더에서 오른쪽 마우스를 클릭하여 Path Tools&amp;gt;Commands Line Shell을 선택한다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/batch-layer/images/setup_cmd.png" alt="" >
&lt;/p>
&lt;ul>
&lt;li>명령프롬프트 창에 runHsqlDB를 입력하여 runHsqlDB.cmd 파일을 실행시킨다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/batch-layer/images/setup_cmd2.png" alt="" >
&lt;/p></description></item><item><title>건너뛰기(Skip) 기능 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-skip_mgmt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-skip_mgmt/</guid><description>&lt;h1 id="건너뛰기skip-기능-예제">건너뛰기(Skip) 기능 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 수행 중, 데이터를 처리하는 과정에서 에러가 발생한 데이터를 건너뛰고 다음 데이터를 처리하는 기능을 보여주는 예제이다. EgovSkipSampleFunctionalTests 예제는 ItemReading,ItemProcessing, ItemWriting 에서 발생한 예외상황에 대해 정해진 설정대로 Skip을 수행되는 과정을 보여준다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;b>건너뛰기(Skip) 기능 예제의 Job 설정 파일인 skipSample.xml을 확인한다.&lt;/b>&lt;/p>
&lt;p>✔ skipSample의 Step 흐름 참고&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/batch-layer/images/skip1.png" alt="skipSample의 Step 흐름" >
&lt;/p>
&lt;p>Job 의 구성을 보면 Chunk 설정에 아래와 같은 설정이 있다.&lt;/p>
&lt;ul>
&lt;li>skip-limit : Skip 할 수 있는 최대 횟수를 지정한다.&lt;/li>
&lt;li>&amp;lt;skippable-exception-classes&amp;gt; : Exception 범위를 지정한다.&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> &amp;lt;include&amp;gt; : skip 해야하는 Exception 지정
 &amp;lt;exclude&amp;gt; : include로 지정한 exception의 하위 exception 중, skip 하지 않을 Exception 지정
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;skipJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">incrementer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;incrementer&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parent=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;baseStep&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileItemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">processor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tradeProcessor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tradeWriter&amp;#34;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">skip-limit=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;skippable-exception-classes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;include&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.file.FlatFileParseException&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		 			&lt;span style="color:#f92672">&amp;lt;include&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.WriteFailedException&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;/skippable-exception-classes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/chunk&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>		
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;next&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">to=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step2&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;next&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;COMPLETED WITH SKIPS&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">to=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;errorPrint1&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;fail&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FAILED&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">exit-code=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FAILED&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;errorPrint1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">next=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step2&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;tasklet&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;errorLogTasklet&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parent=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;baseStep&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">next=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;skipCheckingDecision&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tradeSqlItemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">processor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tradeProcessorFailure&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemTrackingWriter&amp;#34;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#a6e22e">commit-interval=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">skip-limit=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;skippable-exception-classes&lt;/span> &lt;span style="color:#a6e22e">merge=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;include&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.validator.ValidationException&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#f92672">&amp;lt;include&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;java.io.IOException&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;/skippable-exception-classes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/chunk&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;no-rollback-exception-classes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#f92672">&amp;lt;include&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.item.validator.ValidationException&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;/no-rollback-exception-classes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;decision&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;skipCheckingDecision&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">decider=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;skipCheckingDecider&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;end&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;next&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;COMPLETED WITH SKIPS&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">to=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;errorPrint2&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;fail&lt;/span> &lt;span style="color:#a6e22e">on=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FAILED&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">exit-code=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;FAILED&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/decision&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;errorPrint2&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;tasklet&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;errorLogTasklet&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="junittest-구성-및-수행">JunitTest 구성 및 수행&lt;/h3>
&lt;h4 id="junittest-구성">JunitTest 구성&lt;/h4>
&lt;p>&lt;b>simple-job-launcher-context.xml 설정과 skipSample.xml 설정으로 이루어진 Junit Test를 수행한다. 이 때 배치가 수행되고, 관련된 내용을 확인할 수 있다.&lt;/b>&lt;/p></description></item><item><title>Skip/Retry/Repeat</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-skip_repeat_retry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-skip_repeat_retry/</guid><description>&lt;h1 id="skipretryrepeat">Skip/Retry/Repeat&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Skip, Retry, Repeat은 효율적인 배치수행을 위해 필요한 기능들이다. Repeat 정책에 따라 Step과 Chunk가 반복적으로 수행되면서 데이터 Read, Process, Write 과정이 일어나는데, 여기서 Skip과 Retry 이용해 배치작업을 효율적으로 수행할 수 있다. 각 기능이 쓰이는 위치는 다음 그림을 참고한다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/images/batch_core-skip_retry_repeat_all.png" alt="image" >
&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="skip">Skip&lt;/h3>
&lt;p>Skip은 데이터를 처리하는 동안 설정된 Exception이 발생했을 경우, 해당 데이터 처리를 건너뛰는 기능이다. 데이터의 사소한 오류에 대해 Step의 실패처리 대신 Skip을 함으로써, 배치수행의 빈번한 실패를 줄일 수 있게 한다.&lt;/p></description></item><item><title>SLF4J</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/logging-slf4j/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/logging-slf4j/</guid><description>&lt;h2 id="slf4j">SLF4J&lt;/h2>
&lt;h3 id="getting-started">Getting Started&lt;/h3>
&lt;p>SLF4J(Simple Logging Facade For Java)는 특정 Logging 서비스 구현체에 종속되지 않도록 추상화 계층을 제공하며,&lt;br>
Jakarta Commons Logging(JCL), Log4j, Logback 등과 함께 사용할 수 있다.&lt;br>
다음은 SLF4J 샘플 예제이다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.slf4j.Logger;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.slf4j.LoggerFactory;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Slf4JLoggerTest&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// SLF4J를 이용한 Logger 오브젝트 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Logger LOGGER &lt;span style="color:#f92672">=&lt;/span> LoggerFactory.&lt;span style="color:#a6e22e">getLogger&lt;/span>(Slf4JLoggerTest.&lt;span style="color:#a6e22e">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Parameterized logging - String 타입&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String message &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello, eGovFrame 3.0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String message2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Welcome to eGovFrame 3.0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOGGER.&lt;span style="color:#a6e22e">debug&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SLF4J Logger - {}&amp;#34;&lt;/span>, message); &lt;span style="color:#75715e">// 출력결과 - SLF4J Logger - Hello, eGovFrame 3.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOGGER.&lt;span style="color:#a6e22e">debug&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SLF4J Logger - {} and {}&amp;#34;&lt;/span>, message, message2); &lt;span style="color:#75715e">// 출력결과 - SLF4J Logger - Hello, eGovFrame 3.0 and Welcome to eGovFrame 3.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Parameterized logging - Object 타입&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Object&lt;span style="color:#f92672">[]&lt;/span> args &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Object&lt;span style="color:#f92672">[&lt;/span>3&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> args&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> args&lt;span style="color:#f92672">[&lt;/span>1&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Integer.&lt;span style="color:#a6e22e">valueOf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> args&lt;span style="color:#f92672">[&lt;/span>2&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Date().&lt;span style="color:#a6e22e">toString&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOGGER.&lt;span style="color:#a6e22e">debug&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SLF4J Logger - {}, {}, {}&amp;#34;&lt;/span>, args); &lt;span style="color:#75715e">// 출력결과 - SLF4J Logger - 1, 2, Fri Mar 23 11:08:28 KST 2014&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="1-slf4j-기본-설정">1. SLF4J 기본 설정&lt;/h4>
&lt;ol>
&lt;li>SLF4J API를 사용하기 위해 &lt;strong>slf4j-api.jar를 추가&lt;/strong>한다.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- SLF4J --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.slf4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>slf4j-api&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>x.x.x&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Logging 충돌 방지를 위해 Spring의 Default Logging Framework인 &lt;strong>commons-logging.jar를 제거&lt;/strong>하되,&lt;br>
기존 Commons Logging API가 적절하게 변환되어 처리될 수 있도록 SLF4j JCL Bridge인 &lt;strong>jcl-over-slf4j.jar를 추가&lt;/strong>한다.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- Exclude Commons Logging in favor of SLF4J --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>spring-context&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>${spring.maven.artifact.version}&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;exclusions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>commons-logging&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>commons-logging&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/exclusions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- SLF4J JCL Bridge --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.slf4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>jcl-over-slf4j&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>x.x.x&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="2-logging-구현체-설정">2. Logging 구현체 설정&lt;/h4>
&lt;ol>
&lt;li>SLF4J가 컴파일 시에 Logging 구현체를 사용할 수 있도록 구현체별 &lt;strong>SLF4J Binding jar와 Implementation jar를 추가&lt;/strong>한다.&lt;/li>
&lt;/ol>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Logging 구현체&lt;/th>
 &lt;th>SLF4J Binding jar&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Log4j 2&lt;/td>
 &lt;td>log4j-slf4j-impl.jar&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Log4j 1.2&lt;/td>
 &lt;td>slf4j-log4j12.jar&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JDK 1.x Logging&lt;/td>
 &lt;td>slf4j-jdk14.jar&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>NOP&lt;/td>
 &lt;td>slf4j-nop.jar&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JCL&lt;/td>
 &lt;td>slf4j-jcl.jar&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Logback&lt;/td>
 &lt;td>logback-classic.jar, logback-core.jar&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>Log4j 1.2 구현체 사용 시&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- SLF4J Log4j1.2 Binding --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.slf4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>slf4j-log4j12&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>x.x.x&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- Log4j 1.2 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>log4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>log4j&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Log4j 2 구현체 사용 시&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- Log4j2 SLF4J Binding --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.logging.log4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>log4j-slf4j-impl&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>x.x.x&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- Log4j 2 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.logging.log4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>log4j-api&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>x.x.x&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="3-slf4j-logger-객체-생성과-메서드-사용">3. SLF4J Logger 객체 생성과 메서드 사용&lt;/h4>
&lt;ol>
&lt;li>Logger 객체 생성&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Logger LOGGER &lt;span style="color:#f92672">=&lt;/span> LoggerFactory.&lt;span style="color:#a6e22e">getLogger&lt;/span>(Slf4JLoggerTest.&lt;span style="color:#a6e22e">class&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>로깅 메서드 호출&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// {}-placeholder를 이용한 Parameterized Logging&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String message &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello, eGovFrame 3.0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOGGER.&lt;span style="color:#a6e22e">debug&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SLF4J Logger - {}&amp;#34;&lt;/span>, message);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="migration-to-slf4j-from-legacy-apis">Migration to SLF4J from Legacy APIs&lt;/h3>
&lt;p>기존 Legacy API을 유지한 채 SLF4J를 함께 사용하려면, SLF4J와 레거시 API를 연결할 수 있는 Bridge jar가 필요하다.&lt;br>
아래에서는 Log4j 1.x와 JCL 레거시를 기준으로 설명한다.&lt;/p></description></item><item><title>SockJS Fallback Options</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/webSocket/websocket-sockjs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/webSocket/websocket-sockjs/</guid><description>&lt;h1 id="sockjs-fallback-options">SockJS Fallback Options&lt;/h1>
&lt;p>



 


 








 



&lt;a href="http://docs.spring.io/spring/docs/current/spring-framework-reference/html/websocket.html#websocket-fallback">http://docs.spring.io/spring/docs/current/spring-framework-reference/html/websocket.html#websocket-fallback&lt;/a>


&lt;/p>
&lt;p>WebSocket 이 아직까지 모든 브라우저에서 지원되지 않거나 네트워크 프락시 제약등으로 사용할 수 없는 경우가 있다. 이에 Spring 은 fallback 옵션을 제공하는데 이는 SockJS protocol 에 기반으로 WebSocket API 를 emulate 한다.&lt;/p>
&lt;h2 id="1-sockjs-개요">1. SockJS 개요&lt;/h2>
&lt;p>SockJS 는 application 으로 하여금 WebSocket API 를 사용하는데 있다. 만약 WebSocket 사용이 불가한 경우에도 이를 fallback option 으로 제공하여 어떠한 코드 변화없이 WebSocket API 를 사용토록 한다.&lt;/p>
&lt;h3 id="sockjs-구성">SockJS 구성&lt;/h3>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://github.com/sockjs/sockjs-protocol">SockJS protocol&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://github.com/sockjs/sockjs-client">SockJS client&lt;/a>


 - javascript library&lt;/li>
&lt;li>SockJS 서버 구현 - spring-websocket 모듈을 통해 제공&lt;/li>
&lt;/ul>
&lt;p>SockJS 는 여러가지 테크닉을 이용하여 다양한 브라우저 및 브라우저 버전을 지원한다. 전송 타입은 다음의 3가지로 분류된다.
&lt;strong>WebSocket, HTTP Streaming, HTTP Long Polling&lt;/strong>. 이들 각각을 살펴보려면 여기 를 참조한다.&lt;/p></description></item><item><title>Spring Expression Language(SpEL)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/spel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer-core/spel/</guid><description>&lt;h1 id="spring-expression-languagespel">Spring Expression Language(SpEL)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring 3.0에서 처음 소개된 스프링 전용 표현식 언어로 강력하고 유연하게 사용된다.&lt;br>
SpEL은 빈 오브젝트에 직접 접근할 수 있는 표현식을 이용해서 프로퍼티 값을 능동적으로 가져오는 방법이며 가장 기본적이다. 또한 jsp에서 &amp;lt;spring:eval&amp;gt;태그를 사용하여 SpEL을 적용 할 수도 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="빈-설정파일을-사용하여-spel적용">빈 설정파일을 사용하여 SpEL적용&lt;/h3>
&lt;p>빈 프로퍼티에 값을 설정하면, 다른 빈이나 프로퍼티에 접근 가능하다.&lt;/p>
&lt;ul>
&lt;li>다음의 &lt;strong>빈에서 접근&lt;/strong>하는 예제이다.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;springTest&amp;#34;&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">..&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Sample&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;testNames&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#{springTest.test}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>다음은 &lt;strong>&amp;lt;util:properties&amp;gt; 를 사용하여 프로퍼티에 접근&lt;/strong>하는 예제 이다.&lt;/li>
&lt;/ul>
&lt;p>globals.properties&lt;/p></description></item><item><title>SpEL 예제(Spring Expression Language Example)</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer-core/spel-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer-core/spel-example/</guid><description>&lt;h1 id="spel-예제spring-expression-language-example">SpEL 예제(Spring Expression Language Example)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring 3.0에 새롭게 추가된 SPeL 지원기능을 이용하여, JSP 파일상에서 Spring Expression Language를 사용하는 기능에 대한 예제를 제공한다. 이 예제에서는 입력된 데이터 값에 대하여 SPeL의 출력값 포맷팅 기능을 활용하여 출력값을 형식에 맞게 화면에 표시해주는 기능을 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;pre tabindex="0">&lt;code>1. 해당 예제를 실행하면 아래와 같은 예제페이지가 호출된다.
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer-core/images/spel-1.png" alt="spel-1" >
&lt;/p>
&lt;pre tabindex="0">&lt;code>2. 이름란과 통장 잔액란에 각각 이름과 잔액을 입력하고 [확인]을 누른다.
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer-core/images/spel-2.png" alt="spel-2" >
&lt;/p>
&lt;pre tabindex="0">&lt;code>3. SpEL을 적용하여 포맷팅을 적용한 값이 출력된다.
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer-core/images/spel-3.png" alt="spel-3" >
&lt;/p>
&lt;h2 id="참고자료">참고자료&lt;/h2>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer-core/spel/">SpEL 가이드&lt;/a>


&lt;/li>
&lt;/ul></description></item><item><title>N:1 파일 Partition 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi_process/batch-example-single_file_partition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-multi_process/batch-example-single_file_partition/</guid><description>&lt;h1 id="n1-파일-partition-예제">N:1 파일 Partition 예제&lt;/h1>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;strong>N:1 Partition 예제의 Job 설정 파일인 partitionFileToOneFileJob.xml을 확인한다.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>partitioner : 입력리소스 수 만큼 Master Step을 파티셔닝하는 MultiResourcePartitioner&lt;/li>
&lt;li>grid-size : 생성할 Context 수&lt;/li>
&lt;li>writer : scope=“step” 설정 해지로 여러 Slave Step 들이 공유하는 EgovPartitionFlatFileItemWriter 사용(타겟파일이 하나이므로, 다른 파티셔닝과 달리 출력정보를 다루는 EgovOutputFileListener 설정이 필요 없음)&lt;/li>
&lt;/ul>
&lt;p>✔ 이 예제는 여러 Slave Step 들이 하나의 Writer를 공유하는 과정에서 Thread Safe 하도록 구성되어 있다&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;partitionJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">restartable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>		
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;partition&lt;/span> &lt;span style="color:#a6e22e">step=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">partitioner=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;partitioner&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;handler&lt;/span> &lt;span style="color:#a6e22e">grid-size=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">task-executor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskExecutor&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/partition&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;partitioner&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.core.partition.support.MultiResourcePartitioner&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;resources&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;classpath:egovframework/data/input/delimited*.csv&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;tasklet&lt;/span> &lt;span style="color:#a6e22e">transaction-manager=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;transactionManager&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;chunk&lt;/span> &lt;span style="color:#a6e22e">writer=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemWriterPartition&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">reader=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader commit-interval=&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">3&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReader&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">scope=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">autowire-candidate=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parent=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemReaderParent&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;resource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#{stepExecutionContext[fileName]}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;itemWriterPartition&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.example.support.EgovPartitionFlatFileItemWriter&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;resource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;file:./target/test-outputs/partition/file/delimitedOneFile.csv&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="클래스-설정">클래스 설정&lt;/h4>
&lt;h5 id="multiresourcepartitioner">MultiResourcePartitioner&lt;/h5>
&lt;p>스프링에서 제공하는 MultiResourcePartitioner 를 사용하며 입력리소스의 수(입력파일 수)만큼 Context를 생성하고 출력위치를 셋팅하는 역할을 한다.(Context 생성으로 여러 Slave Step들을 사용할 수 있게 됨)&lt;/p></description></item><item><title>SpotBugs</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/spotbugs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/spotbugs/</guid><description>&lt;h1 id="find-security-bugs">Find Security Bugs&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>버그 및 보안취약점 등 정적 소스코드 분석이 가능한 오픈소스로 SpotBugs(구 FindSecurityBugs)를 추가할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>SpotBugs는 Philippe Arteau에서 만든 자바 웹 애플리케이션에 대한 보안 감사를 지원하는 플러그인이다.&lt;/p>
&lt;p>2024년 5월에 4.8.5 버전이 배포되었고, 특징은 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>823개 이상의 고유 API 시그니처를 가진 141개의 다른 취약성 유형을 검출 가능&lt;/li>
&lt;li>Spring-MVC, Struts, Tapestry등 다양한 소프트웨어 개발 프레임워크를 지원&lt;/li>
&lt;li>Eclipse, IntelliJ, Android Studio, NetBeans 등 통합개발환경(IDE) 도구에 플러그인으로 활용 가능, Ant와 Maven에선 커맨드라인으로 활용 가능&lt;/li>
&lt;li>Jenkins와 SonarQube와 같은 CI(Continuous Integration) 도구에서 활용 가능&lt;/li>
&lt;li>OWASP TOP 10과 CWE를 커버하는 광범위한 참조 제공&lt;/li>
&lt;li>SpotBugs는 오픈소스이며 contributions에 열려있음&lt;/li>
&lt;/ul>
&lt;p>공식 홈페이지인 



 









 



&lt;a href="https://github.com/spotbugs/spotbugs">https://github.com/spotbugs/spotbugs&lt;/a>


 를 통해 소프트웨어에 대한 소개와 튜토리얼을 제공하고 있으며, LGPL 공개소프트웨어 라이선스에 따라 소프트웨어 다운로드 기능을 제공한다.&lt;/p></description></item><item><title>Spring Data</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/jpa-spring-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/jpa-spring-data/</guid><description>&lt;h1 id="spring-data">Spring Data&lt;/h1>
&lt;p>Spring Data는 데이터베이스 관련 많은 하위 프로젝트를 포함하는 오픈 소스 프로젝트로, non-relational databases, map-reduce frameworks, and cloud based data services 등의 새로운 데이터 액세스 기술을 보다 쉽게 사용 할 수 있는 기능을 제공한다. 또한 관계형 데이터베이스 기술에 대한 향상된 지원도 제공한다.&lt;/p>
&lt;h3 id="spring-data-project">Spring Data Project&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Category&lt;/th>
 &lt;th>Sub-Project&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Relational Databases&lt;/td>
 &lt;td>JPA&lt;/td>
 &lt;td>Spring Data JPA - Simplifies the development of creating a JPA-based data access layer&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>JDBC Extensions&lt;/td>
 &lt;td>Support for Oracle RAC, Advanced Queuing, and Advanced datatypes. Support for using QueryDSL with JdbcTemplate.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Big Data&lt;/td>
 &lt;td>Apache Hadoop&lt;/td>
 &lt;td>The Apache Hadoop project is an open-source implementation of frameworks for reliable, scalable, distributed computing and data \storage.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Data-Grid&lt;/td>
 &lt;td>GemFire&lt;/td>
 &lt;td>VMware vFabric GemFire is a distributed data management platform providing dynamic scalability, high performance, and database-like \persistence. It blends advanced techniques like replication, partitioning, data-aware routing, and continuous querying.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>HTTP&lt;/td>
 &lt;td>REST&lt;/td>
 &lt;td>Spring Data REST - Perform CRUD operations of your persistence model using HTTP and Spring Data Repositories.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Key Value Stores&lt;/td>
 &lt;td>Redis&lt;/td>
 &lt;td>Redis is an open source, advanced key-value store.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Document Stores&lt;/td>
 &lt;td>MongoDB&lt;/td>
 &lt;td>MongoDB is a scalable, high-performance, open source, document-oriented database.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Graph Databases&lt;/td>
 &lt;td>Neo4j&lt;/td>
 &lt;td>Neo4j is a graph database, a fully transactional database that stores data structured as graphs.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Column Stores&lt;/td>
 &lt;td>HBase&lt;/td>
 &lt;td>Apache HBase is an open-source, distributed, versioned, column-oriented store modeled after Google&amp;rsquo; Bigtable. HBase functionality is part of the Spring for Apache Hadoop project.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Common Infrastructure&lt;/td>
 &lt;td>Commons&lt;/td>
 &lt;td>Provides shared infrastructure for use across various data access projects. General support for cross-database persistence is located here&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="참고자료">참고자료&lt;/h2>
&lt;ul>
&lt;li>



 









 



&lt;a href="http://projects.spring.io/spring-data">http://projects.spring.io/spring-data&lt;/a>


&lt;/li>
&lt;/ul></description></item><item><title>Spring Data - MongoDB</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/mongodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/mongodb/</guid><description/></item><item><title>Spring과 JPA 통합</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-spring_integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/orm/orm-spring_integration/</guid><description>&lt;h1 id="spring-integration">Spring Integration&lt;/h1>
&lt;p>Spring에서는 JPA 기반에서 DAO 클래스를 쉽게 구현할 수 있도록 하기 위해 JdbcTemplate,HibernateTemplate등처럼 &lt;strong>JpaTemplate&lt;/strong>을 제공한다. 하지만 JPA에 있어서는 Entity Manager의 Method를 직접 이용하는 것(&lt;strong>plain JPA&lt;/strong>)에 대한 것도 가이드한다. 이에 두가지 방법에 대한 설정 및 사용방법에 대해서 설명하고자 한다. 



 


 








 



&lt;a href="http://static.springframework.org/spring/docs/2.5.x/reference/orm.html#orm-jpa">Spring JPA&lt;/a>


&lt;/p>
&lt;h2 id="기본-설정">기본 설정&lt;/h2>
&lt;p>Spring 기반하에서 JPA를 쓰고자 할 때 필요한 설정은 persistence.xml과 ApplicationContext 파일 설정이 필요하다.&lt;/p>
&lt;h4 id="persistencexml-설정">persistence.xml 설정&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;persistence-unit&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;HSQLMUnit&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">transaction-type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;RESOURCE_LOCAL&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // 구현체는 Hibernate	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;provider&amp;gt;&lt;/span>org.hibernate.ejb.HibernatePersistence&lt;span style="color:#f92672">&amp;lt;/provider&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // Entity Class List
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;class&amp;gt;&lt;/span>egovframework.sample.model.bidirection.User&lt;span style="color:#f92672">&amp;lt;/class&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;class&amp;gt;&lt;/span>egovframework.sample.model.bidirection.Role&lt;span style="color:#f92672">&amp;lt;/class&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;class&amp;gt;&lt;/span>egovframework.sample.model.bidirection.Department&lt;span style="color:#f92672">&amp;lt;/class&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;exclude-unlisted-classes/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // DBMS별 다른 설정 여기는 HSQL 설정.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hibernate.dialect&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.hibernate.dialect.HSQLDialect&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hibernate.show_sql&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hibernate.format_sql&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hibernate.hbm2ddl.auto&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;create-drop&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/persistence-unit&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위에서 Entity Class List와 그에 따르는 &amp;lt;exclude-unlisted-classes/&amp;gt;는 프로젝트내에 있는 엔티티 클래스중에 리스트하는 것만을 엔티티로 인식하도록 설정하는 것이고 dialect설정은 DBMS별 별도 설정이다. 위의 예에서는 HSQL 설정.&lt;/p></description></item><item><title>스프링 시큐리티 예제(Spring Security Example)</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/spring-security-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/spring-security-example/</guid><description>&lt;h1 id="스프링-시큐리티-예제spring-security-example">스프링 시큐리티 예제(Spring Security Example)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring Security를 이용하여 로그인, 보안, 권한관리를 수행하는 기능에 대한 예제이다. 사용자의 로그인 및 권한 관리, 각 페이지에 대한 접근 및 출력 내용에 대한 통제등을 Spring Security 2.0.4를 이용하여 수행하며, 이에 대한 예제 기능을 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;ol>
&lt;li>해당 예제를 실행하면 로그인이 가능한 페이지가 호출된다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/security-1.png" alt="security-1" >
&lt;/p>
&lt;ol start="2">
&lt;li>[로그인] 버튼을 누르고 메인에 표시된 관리자 아이디와 패스워드를 이용하여 로그인한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/security-2.png" alt="security-2" >
&lt;/p>
&lt;ol start="3">
&lt;li>환영메세지가 출력되고 게시판과 카테고리 관리에 접근이 가능하다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/security-3.png" alt="security-3" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/security-5.png" alt="security-5" >
&lt;/p>
&lt;ol start="4">
&lt;li>로그인 하지않았거나 일반사용자 아이디로 로그인한 후 카테고리 관리에 접근하게 되면 미리 정의한 에러 페이지가 출력된다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/security-4.png" alt="security-4" >
&lt;/p></description></item><item><title>Spring Web Flow(SWF) 개요</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/</guid><description>&lt;h1 id="spring-web-flow">Spring Web Flow&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring Web Flow(SWF)는 웹 애플리케이션 내 페이지 흐름(flow)의 정의와 수행에 집중하는 Spring 프레임워크 웹 스택의 컴포넌트이다.&lt;/p>
&lt;p>시스템은 다른 위치에서 재사용될 수 있는 자족적 모듈처럼 웹 애플리케이션의 논리적 흐름(flow)을 획득하는 것을 허용한다.&lt;br>
이러한 흐름(flow)은 비즈니스 프로세스의 구현을 통해 단일 사용자를 안내하고 단일 사용자 대화를 표현한다.&lt;br>
흐름(flow)은 종종 HTTP 요청을 처리하고 상태를 가지며, 트랜잭션 특성을 보이고 동적이고/이거나 장시간 구동될 수 있다.&lt;/p>
&lt;p>Spring Web Flow는 추상화의 좀 더 높은 레벨에 존재하고 Struts, Spring MVC, Portlet MVC, 그리고 JSF와 같은 기본 프레임워크 내에서 자족적인 페이지 흐름(flow) 엔진(page flow engine)처럼 통합된다.&lt;br>
SWF는 선언적이고 높은 이식성을 가지며 뛰어난 관리능력을 가지는 형태로 명시적으로 애플리케이션의 페이지 흐름(flow)을 획득하는 기능을 제공한다.&lt;/p></description></item><item><title>Spring-iBATIS Integration</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-spring_ibatis_integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-ibatis/dataaccess-spring_ibatis_integration/</guid><description>&lt;h1 id="spring-ibatis-integration">Spring-iBATIS Integration&lt;/h1>
&lt;p>Spring 프레임워크는 iBATIS SQL Map 을 이미 잘 통합하고 있으며, JDBC/Hibernate 에 대한 연동과 동일하게 template 스타일 프로그래밍이 가능토록 지원한다. 이러한 지원으로 Spring 의 특징인 IoC 의 장점과 Exception 계층 구조의 처리가 iBATIS 통합 환경에서도 쉽게 사용되고 있으며, iBATIS 단독 사용 시에 트랜잭션 관리 및 DataSource 에 대한 설정 및 관리가 별도로 필요했던 것에 비해 Spring-iBATIS 통합 환경에서는 Spring 의 유연한 트랜잭션 처리와 dataSource 를 그대로 사용할 수 있다.&lt;/p></description></item><item><title>SQLite</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/intro/batch-core-sqllite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/intro/batch-core-sqllite/</guid><description>&lt;h1 id="sqlite">SQLite&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 처리시 경량화된 Repository를 사용을 위한 SQLite 처리를 지원한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="sqlite-pomxml-설정">SQLite pom.xml 설정&lt;/h3>
&lt;p>sqlite 라이브러리 사용을 위해 dependency를 추가 한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.xerial&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>sqlite-jdbc&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>x.x.x&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="sqlite-사용">SQLite 사용&lt;/h3>
&lt;p>SQLite 사용을 위해 데이터베이스 설정을 하고 repository 생성을 위한 기초데이터를 설정 한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- SQLite database 설정 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;driverClassName&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.sqlite.JDBC&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbc:sqlite:repository.sqlite&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- SQLite 기초데이터 설정 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;jdbc:initialize-database&lt;/span> &lt;span style="color:#a6e22e">data-source=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;jdbc:script&lt;/span> &lt;span style="color:#a6e22e">location=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org/springframework/batch/core/schema-drop-sqlite.sql&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;jdbc:script&lt;/span> &lt;span style="color:#a6e22e">location=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org/springframework/batch/core/schema-sqlite.sql&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/jdbc:initialize-database&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>SSO 연계 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/user-authentication/sso_service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/user-authentication/sso_service/</guid><description>&lt;h1 id="sso-연계-서비스">SSO 연계 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>SSO 연계 서비스는 독립된 사이트간의 인증 공유를 위해 3rd party SSO 솔루션을 활용할 수 있는 인터페이스를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>3rd party SSO 솔루션을 활용하여 인증 서비스를 구축할 때 SSO 에이전트와 표준프레임워크 인증 시스템간의 인터페이스를 정의한다. 3rd party SSO 솔루션은 인터페이스 구현을 통해 표준프레임워크에서 인증 공유를 위한 SSO에이전트 기능을 사용할 수 있게 해준다.&lt;/p>
&lt;h3 id="패키지-참조-관계">패키지 참조 관계&lt;/h3>
&lt;p>SSO 연게 서비스는 요소기술의 공통(cmm) 패키지와 일반 로그인 패키지(uat.uia)에 대해서만 직접적인 함수적 참조 관계를 가지며 일반 로그인 패키지(uat.uia)에 포함되어 배포된다.&lt;/p></description></item><item><title>Step</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-step/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-step/</guid><description>&lt;h1 id="step">Step&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Step은 Job 내부에 구성되어 실제 배치작업 수행을 위해 작업을 정의하고 제어한다. 즉, Step에서는 입력 자원을 설정하고 어떤 방법으로 어떤 과정을 통해 처리할지 그리고 어떻게 출력 자원을 만들 것인지에 대한 모든 설정을 포함한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Step은 Job의 독립적이고 순차적 단계를 캡슐화하는 도메인 객체다. 그러므로 모든 Job은 적어도 하나 이상의 Step으로 구성되며 Step에 실제 배치작업을 처리하고 제어하기 위해 필요한 모든 정보가 포함된다.
여러개의 Step 중 하나의 Step은 순차적으로 실행되는 과정 중 하나의 흐름으로 생각할 수 있다. Step에는 JobExecution에 대응되는 StepExecution이 있다.&lt;/p></description></item><item><title>Flow Control</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-flow_control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-flow_control/</guid><description>&lt;h1 id="flow-control">Flow Control&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Job 내부에는 여러 Step 들이 존재할 수 있고, 각 Step 사이의 흐름을 관리할 필요가 있다. Step 내의 next 설정과 Desision 설정으로 Job을 수행하다 한 Step의 처리결과에 따라 다른 Step을 선택하여 수행할 수 있고, 특정 Step의 실패가 Job 전체의 실패로 이어지지 않도록 구성할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="흐름-처리controlling-step-flow">흐름 처리(Controlling Step Flow)&lt;/h3>
&lt;h4 id="sequential-flow">Sequential Flow&lt;/h4>
&lt;p>가장 간단한 시나리오의 Job은 모든 Step을 순서대로 실행 하는 것이다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/images/sequential-flow.png" alt="sequential-flow" >
&lt;/p>
&lt;p>위와 같은 Job의 실행은 Step 엘리먼트의 &amp;rsquo;next&amp;rsquo; 어트리뷰트를 이용해서 설정할 수 있다.&lt;/p></description></item><item><title>Step Variable</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-step/batch-core-step_variable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-step/batch-core-step_variable/</guid><description>&lt;h1 id="step-variable">Step Variable&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>변수 선언 후 Listeners를 통해서 모든 Setp에서 사용자 정의 변수를 사용할 수 있도록 EgovStepVariableListener를 통해서 지원한다.
사용자가 변수를 정의하여 여러 step에서 해당 변수를 공유하여 사용 가능한 기능으로 이루어져있다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/batch-layer/images/step-variable-architecture6.png" alt="step-variable-architecture6" >
&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="step-variable-설정">Step Variable 설정&lt;/h3>
&lt;p>배치실행환경에서 제공하는 EgovJobVariableListener 사용하여 사용자 정의 변수를 설정한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovStepVariableListener&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.rte.bat.support.EgovStepVariableListener&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pros&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;props&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;prop&lt;/span> &lt;span style="color:#a6e22e">key=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;StepVariableKey1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>StepVariableValue1&lt;span style="color:#f92672">&amp;lt;/prop&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;prop&lt;/span> &lt;span style="color:#a6e22e">key=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;StepVariableKey2&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>StepVariableValue2&lt;span style="color:#f92672">&amp;lt;/prop&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;prop&lt;/span> &lt;span style="color:#a6e22e">key=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;StepVariableKey3&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>StepVariableValue3&lt;span style="color:#f92672">&amp;lt;/prop&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/props&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="job-step-설정">job, step 설정&lt;/h3>
&lt;p>step 설정시 listener를 사용하여 공유변수 서비스를 설정한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delimitedToDelimitedJob-StepVariable&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parent=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;eGovBaseJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;tasklet&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskletStep&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;listeners&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;listener&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovStepVariableListener&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/listeners&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="step에서-tasklet-선언시-step-variable-사용">step에서 tasklet 선언시 Step Variable 사용&lt;/h3>
&lt;p>setter 방식으로 공유변수 사용시 아래와 같이 응용하여 설정한다.&lt;/p></description></item><item><title>STOMP over WebSocket 개요 및 메시지 처리 흐름</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/webSocket/websocket-stomp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/webSocket/websocket-stomp/</guid><description>&lt;h1 id="stomp-over-websocket-messaging-architecture">STOMP Over WebSocket Messaging Architecture&lt;/h1>
&lt;p>



 


 








 



&lt;a href="http://docs.spring.io/spring/docs/current/spring-framework-reference/html/websocket.html#websocket-stomp">http://docs.spring.io/spring/docs/current/spring-framework-reference/html/websocket.html#websocket-stomp&lt;/a>


&lt;/p>
&lt;p>WebSocket protocol 은 content 를 정의하지 않은 채 2 가지 유형 (text, binary) 의 메시지로 분류했다. content 를 정의하지 않은 대신 client 와 서버는 sub-protocol (content 를 정의하는 고수준의 protocol) 을 사용하는 것을 합의해야 할 수도 있다. sub-protocol 을 사용하는 것은 option 이지만 client 와 server 모두 메시지를 어떻게 해석해야 할지를 이해하는 것이 필요하다.&lt;/p>
&lt;h2 id="1-stomp-개요">1. STOMP 개요&lt;/h2>
&lt;p>



 


 








 



&lt;a href="http://stomp.github.io/stomp-specification-1.2.html#Abstract">STOMP&lt;/a>


 는 Ruby, Python, Perl 과 같은 스크립트 언어를 위해 고안된 단순한 메시징 프로토콜이다. 그것은 메시징 프로토콜에서 일반적으로 사용되는 패턴들의 일부를 제공한다. STOMP 는 TCP 나 WebSocket 과 같은 신뢰성있는 양방향 streaming network protocol 상에 사용될 수 있다.&lt;/p></description></item><item><title>Cloud Data Stream</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/webservice/cloud-data-stream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/webservice/cloud-data-stream/</guid><description>&lt;h1 id="cloud-data-stream">Cloud Data Stream&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring Cloud Stream은 공유 메시징 시스템과 연결된 확장성이 뛰어난 이벤트 기반 마이크로서비스를 구축하기 위한 프레임워크이다.&lt;/p>
&lt;p>Spring Cloud Stream의 핵심 구성 요소는 다음과 같다.&lt;br/>&lt;/p>
&lt;ul>
&lt;li>대상 바인더 : 외부 메시징 시스템과의 통합을 담당하는 구성 요소이다.&lt;br/>&lt;/li>
&lt;li>대상 바인딩 : 외부 메시징 시스템과 최종 사용자가 제공하는 애플리케이션 코드(생산자/소비자) 사이를 연결한다.&lt;br/>&lt;/li>
&lt;li>메시지 : 생산자와 소비자가 대상 바인더(및 외부 메시징 시스템을 통한 다른 응용 프로그램)와 통신하는 데 사용하는 표준 데이터 구조이다.&lt;/li>
&lt;/ul>
&lt;p>Spring Cloud Stream은 Spring Integration의 메시지 처리 핵심 기능을 기반으로 사용한다.&lt;br/>
또한 Spring Boot를 기반으로 Binder 구현체를 제공하여 메시지 처리를 추상화 하여 동일 환경 뿐만 아니라 이기종의 시스템 또는 다른 환경 간에도 연계 메시지 처리를 지원한다.&lt;/p></description></item><item><title>String Util Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/string-util/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/string-util/</guid><description>&lt;h1 id="string-util-service">String Util Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>시스템을 개발할 때 필요한 문자열 데이터를 다루기 위해 다양한 기능을 사용하도록 서비스한다. 문자열을 다루는 &lt;strong>EgovStringUtil Service&lt;/strong>와 숫자를 다루는 &lt;strong>EgovNumericUtil Service&lt;/strong>, 날짜형식을 다루는 &lt;strong>EgovDateUtil Service&lt;/strong> 그리고 객체 생성 등의 &lt;strong>EgovObjectUtil Service&lt;/strong> 4가지가 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="1-egovstringutil-service">1. EgovStringUtil Service&lt;/h3>
&lt;h4 id="pattern-matching">Pattern matching&lt;/h4>
&lt;p>String이 특정 Pattern(정규표현식)에 부합하는지 검사한다.&lt;/p>
&lt;h5 id="sample-source">Sample Source&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">testPatternMatch&lt;/span>() &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// pattern match 성공&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String str &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;abc-def&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pattern &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*-*&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertTrue(EgovStringUtil.&lt;span style="color:#a6e22e">isPatternMatching&lt;/span>(str, pattern));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// pattern match 실패&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> str &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;abc&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertTrue(&lt;span style="color:#f92672">!&lt;/span>EgovStringUtil.&lt;span style="color:#a6e22e">isPatternMatching&lt;/span>(str, pattern));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="formatting">Formatting&lt;/h4>
&lt;p>다양한 타입의 데이터를 특정 String형식(Format)으로 변환한다.&lt;/p></description></item><item><title>Swagger</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/swagger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/swagger/</guid><description>&lt;h1 id="swagger">Swagger&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Swagger는 Restful 서비스 사용시 구현된 서비스에 대한 문서화를 지원하는 도구이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="목적">목적&lt;/h3>
&lt;p>Restful 서비스를 구현한 경우 해당 API서버가 어떤 스펙을 가지고 있고 어떤 데이터를 주고 받는지에 대한 문서작업은 꼭 필요하다.&lt;br/>
하지만 이런 문서작업은 상당한 시간을 사용하여 작성하여야 하고 API서버의 스펙이 변경되면 문서도 수정해 주어야 하기 때문에 관리가 여간 어려운게 아니다.&lt;br/>
따라서 API 서버의 서비스를 작성하는것외에 문서의 작성과 유지보수를 위해 많은 시간과 비용이 발생한다.&lt;br/>
Swagger는 이러한 Restful서비스의 문서작성과 유지보수에 대한 효율성을 높일수 있다.&lt;/p></description></item><item><title>SWF Configuration</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-configuration/</guid><description/></item><item><title>SWF Elements</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-elements/</guid><description/></item><item><title>SWF Getting Started</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-getting-started/</guid><description/></item><item><title>동기/비동기 처리 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-sync_async/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-sync_async/</guid><description>&lt;h1 id="동기비동기-처리-예제">동기/비동기 처리 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>일괄(배치)처리 작업 수행 시, 작업처리가 종료될 때까지 대기하는 동기방식 처리와 작업처리의 종료를 Callback매커니즘을 이용하여 전달받는 비동기처리에 대한 예제를 보여준다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="launcher-설정">Launcher 설정&lt;/h4>
&lt;p>&lt;strong>동기/비동기 처리 예제의 Launcher 설정파일인 skipSample-job-launcher-context.xml 을 확인한다.&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>sync : 동기처리시 사용할 클래스 설정&lt;/li>
&lt;li>async : 비동기처리시 사용할 클래스 설정&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobLauncher&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.core.launch.support.SimpleJobLauncher&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobRepository&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jobRepository&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskExecutor&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sync&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span> &lt;span style="color:#75715e">&amp;lt;!-- 비동기시 ref=&amp;#34;async&amp;#34; --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 동기 처리시 sync --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sync&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.core.task.SyncTaskExecutor&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 비동기 처리시 async --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;async&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.core.task.SimpleAsyncTaskExecutor&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;strong>동기/비동기 처리 예제의 Job 설정 파일인 delegatingJob.xml을 확인한다.&lt;/strong>&lt;/p></description></item><item><title>Spring MVC Tag Configuration</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-spring-mvc-tag-configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-spring-mvc-tag-configuration/</guid><description>&lt;h1 id="spring-mvc-tag-configuration">Spring MVC Tag Configuration&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Spring 3부터 mvc태그를 통하여 Controller처리를 위한 설정을 쉽게 하도록 Spring mvc 네임스페이스를 제공한다.&lt;/p>
&lt;ul>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-spring-mvc-tag-configuration/#mvcannotation-driven">



 









 



&lt;a href="#ZgotmplZ">mvc:annotation-driven&lt;/a>


&lt;/a>


&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-spring-mvc-tag-configuration/#mvcinterceptors">



 









 



&lt;a href="#ZgotmplZ">mvc:interceptors&lt;/a>


&lt;/a>


&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-spring-mvc-tag-configuration/#mvcview-controller">



 









 



&lt;a href="#ZgotmplZ">mvc:view-controller&lt;/a>


&lt;/a>


&lt;/li>
&lt;/ul>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="mvcannotation-driven">mvc:annotation-driven&lt;/h3>
&lt;p>Spring 3.0부터 제공하는 mvc 태그 설정이다. Annotation기반의 Controller호출 설정과 필요한 bean설정을 편리하게 하도록 만들어졌다. 그러나 내부 수정이 어렵기 때문에 mvc:annotation-driven에서 제공하는 기능에 대하여 잘 숙지하고 변경이 불가능 한 경우에는 mvc:annotation-driven을 쓰지 않고 필요한 bean을 수동으로 넣어줘야하는 경우도 있다.
mvc:annotation-driven에서 쓰는 bean설정을 중복으로 쓰지 않도록 주의한다.&lt;/p>
&lt;h4 id="mvcannotation-driven에서-제공하는-기능">mvc:annotation-driven에서 제공하는 기능&lt;/h4>
&lt;ul>
&lt;li>RequestMappingHandlerMapping bean등록(기존 DefaultAnnotationHandlerMapping)&lt;/li>
&lt;li>RequestMappingHandlerAdapter bean등록(기존 AnnotationMethodHandlerAdapter)
&lt;ul>
&lt;li>customArgumentResolvers, customReturnValueHandlers 추가 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>JSR-303의 검증용 어노테이션(@Valid)를 사용할 수 있도록 LocalValidatorFactoryBean bean설정 (JSR-303지원 라이브러리 존재 시)&lt;/li>
&lt;li>RequestMappingHandlerAdapter의 messageConverters프로퍼티로 메시지 컨버터들 등록&lt;/li>
&lt;/ul>
&lt;p>(다음 설정과 동일한 동작을 한다.)&lt;/p></description></item><item><title>단순처리(Tasklet) 예제</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-tasklet_mgmt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/batch-layer/batch-example-tasklet_mgmt/</guid><description>&lt;h1 id="단순처리tasklet-예제">단순처리(Tasklet) 예제&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>배치 수행 시, Job의 실행중 itemReader와 ItemWriter 등의 인터페이스 사용이 필요없는 단순처리되는 작업(파일이동 등)을 보여주는 예제이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="설정">설정&lt;/h3>
&lt;h4 id="job-설정">Job 설정&lt;/h4>
&lt;p>&lt;strong>단순처리(Tasklet) 예제의 Job 설정 파일인 taskletJob.xml 을 확인한다.&lt;/strong>&lt;/p>
&lt;p>Job 의 구성을 보면 다른 Job과 달리 Chunk 설정이 없고, &amp;lt;tasklet&amp;gt;에서 참조하는 adapter 빈에서 jobParameters로 설정된 값을 targetObject 프로퍼티 값으로 넘겨주는 것을 확인할 수 있다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;job&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;loopJob&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/batch&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;tasklet&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;adapter&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;transaction-attributes&lt;/span> &lt;span style="color:#a6e22e">propagation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;REQUIRED&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/job&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;adapter&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.batch.core.step.tasklet.MethodInvokingTaskletAdapter&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;targetObject&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;value&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;targetMethod&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;execute&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;value&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;egovframework.brte.sample.example.test.EgovTaskletJobFunctionalTests$TestBean&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">scope=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;step&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;value&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;#{jobParameters[value]}&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="junittest-구성-및-수행">JunitTest 구성 및 수행&lt;/h3>
&lt;h4 id="junittest-구성">JunitTest 구성&lt;/h4>
&lt;p>&lt;strong>taskletJob 설정과 관련 클래스들로 Junit Test를 수행한다. 이 때 배치가 수행되고, 관련된 내용을 확인할 수 있다.&lt;/strong>&lt;/p></description></item><item><title>Test Automation</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-automation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-automation/</guid><description>&lt;h1 id="test-automation">Test Automation&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>



 









 



&lt;a href="http://en.wikipedia.org/wiki/Test_automation">Test Automation&lt;/a>


은 개발자가 작성한 다수의 단위테스트 클래스를 자동으로 테스트하고 그 결과 리포트를 생성하는 기능을 제공하는 것을 말한다. Test Automation의 개념과 방법에 대해 알아본다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>&lt;strong>Test Automation&lt;/strong>은 &lt;strong>지속적인 통합&lt;/strong>(



 









 



&lt;a href="http://www.martinfowler.com/articles/continuousIntegration.html">Continuous Integration - CI&lt;/a>


)를 실천하기 위한 방안 중 하나인 &amp;ldquo;



 


 








 



&lt;a href="http://www.martinfowler.com/articles/continuousIntegration.html#MakeYourBuildSelf-testing">Make Your Build Self-Testing&lt;/a>


&amp;rdquo; 개념에서 나온 것으로 개발자 코드에 대해 작성된 단위테스트 클래스들을 자동으로 테스트를 수행하도록 하고, 매일 지속적으로 테스트를 수행하고 그 결과를 확인함으로써 지속적인 통합의 이점을 극대화시키고자 하는 목적을 갖고 있다.&lt;/p></description></item><item><title>Test Case</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/unit-test/test-case/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/unit-test/test-case/</guid><description>&lt;h1 id="junit-test-case">JUnit Test Case&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>JUnit 을 이용하여 Unit Test Case 를 작성하고 실행하는 방법을 안내한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Unit Test Case 를 작성하기 위해 알아야 할 기본적인 내용은 다음과 같다.
자세한 사용법과 예제 프로그램은 본 문서 아래 부분에서 설명하도록 한다.
추가적으로, Mocking 이나 DAO 테스트 관련하여서는 각각 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/unit-test/mock-support/">Mock Support&lt;/a>


, 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/unit-test/db-support/">DB Support&lt;/a>


 를 참조하도록 한다.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>테스트 종류&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;th>비고&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/unit-test/test-case/#constructor-test">Constructor Test&lt;/a>


&lt;/td>
 &lt;td>단순한 로직의 경우 굳이 테스트하지 않는다. 단, 값을 초기화하거나 Load 하는 경우가 있는 때에는 테스트를 수행한다.&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/unit-test/test-case/#setter--getter-test">Setter/Getter Test&lt;/a>


&lt;/td>
 &lt;td>단순한 Set/Get 은 굳이 테스트 하지 않는다. 로직이 있는 경우에는 로직을 별도의 메소드로 분리하고 이를 테스트하는 것이 바람직하다.&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/unit-test/test-case/#boundary-test">Boundary Test&lt;/a>


&lt;/td>
 &lt;td>Null 에 대한 확인, Default 값에 대한 확인, 범위가 있는 경우 MIN/MAX 값에 대한 확인이 목적이다. 이 경우 결국엔 NullPointer 가 발생하지 않도록 방어로직 혹은 검증 로직을 보완하는 것이 바람직하다.&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Exception Test&lt;/td>
 &lt;td>예상한 Exception 이 발생하는지 확인&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/unit-test/test-case/#equality-test">Equality Test&lt;/a>


&lt;/td>
 &lt;td>value, reference, 숫자, 리스트/배열, Value Object 간의 비교 등이 목적이다. 여기서 중요한 것은 Override 된 equals method 를 제대로 작성 했는지 확인하는 것이다.&lt;/td>
 &lt;td>이것은 오로지 JUnit4 에만 해당함&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/unit-test/test-case/#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%88%98%ed%96%89-%ec%a0%84%ed%9b%84-%ec%b2%98%eb%a6%ac">테스트 수행 전후 처리&lt;/a>


&lt;/td>
 &lt;td>메소드 혹은 클래스 단위로 테스트 수행 전후처리&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/unit-test/test-case/#parameterized-test">Parameterized Test&lt;/a>


&lt;/td>
 &lt;td>파라미터 값만 바꿔가면서 동일한 테스트를 반복해서 수행&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/unit-test/test-case/#timeout-test">Timeout Test&lt;/a>


&lt;/td>
 &lt;td>테스트에 걸리는 시간을 지정하여, 해당 시간이 넘은 경우 Fail 처리할 수 있다.&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/unit-test/test-case/#test-ignore">Test Ignore&lt;/a>


&lt;/td>
 &lt;td>메소드 혹은 클래스 단위로 테스트를 Skip 할 수 있다.&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="환경설정">환경설정&lt;/h2>
&lt;p>Maven Project 인 경우에는 아래와 같은 dependency 를 설정하면 된다.&lt;/p></description></item><item><title>Test Coverage</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-coverage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-coverage/</guid><description>&lt;h1 id="test-coverage">Test Coverage&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Test Coverage는 개발자가 작성한 테스트 코드가 대상 소스 코드에 대해 테스트하는 코드를 작성했는지 그 커버하는 정도를 백분률과 코드 라인을 통해 알려주는 것을 말하며, Test Coverage를 분석하고 그 결과를 리포팅하는 것에 대해 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Test Coverage는 개발자가 작성한 코드에 대해 상응하는 테스트를 갖는 소스 코드의 비율을 평가하는 작업으로 다음과 같은 개념을 이해하는 것이 좋다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>instrument&lt;/strong> : 테스트 대상 코드를 실행하거나 JUnit Test를 수행하거나(EMMA), 컴파일을 수행하는(Cobertura) 동안 대상 코드에 테스트 코드 정보를 삽입하는 작업을 일컫는다.&lt;/li>
&lt;li>&lt;strong>Test Coverage report&lt;/strong> : Test Coverage 결과 리포팅 (XML, HTML 등)
기본적으로 XML과 HTML 형식을 지원하며, EMMA는 TXT, XML, HTML 형식을 모두 지원한다.&lt;/li>
&lt;/ul>
&lt;h3 id="test-coverage-tool">Test Coverage Tool&lt;/h3>
&lt;p>Test Coverage를 수행하는 데는 다양한 툴이 있고, 각각 평가하는 나름의 로직을 갖고 있으며, 리포팅 또한 그 로직에 상응하는 형태라고 볼 수 있다. 따라서, 필요에 맞는 도구를 잘 선택하면 된다.&lt;/p></description></item><item><title>Test Reporting</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-automation/test-reporting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-automation/test-reporting/</guid><description>&lt;h1 id="test-reporting">Test Reporting&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Test Automation 수행 후에는 테스트 결과를 갖는 txt, XML 파일을 읽어 통계와 의미있는 테스트 결과를 보여주는 리포팅이 중요하다.
여기에서는 테스트 결과 생성된 txt나 XML 파일을 읽고 HTML, Excel 형식의 리포트를 생성하는 방법에 대해 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>테스트 수행한 결과를 의미있는 리포트를 만드는 데에도 Ant와 Maven 빌드도구를 사용한다.
다만, 리포트를 생성하는 기능을 수행하는 Ant Task와 Maven Plug-in이 있어야 하는데, HTML 형식은 오픈소스에서 제공한다.
각각 JUnit Report Task와 maven-surefire-report-plugin 이라는 라이브러리가 그것이다.
그리고, Excel 형식의 리포트를 생성하는 기능은 전자정부 표준 프레임워크 개발환경에서 추가했는데, Ant Task와 Maven plugin으로 제공된다.&lt;/p></description></item><item><title>Tomcat 한글 설정하기</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/file-download/file-download-service-tomcat-encoding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/file-download/file-download-service-tomcat-encoding/</guid><description>&lt;h1 id="tomcat-한글-설정하기">Tomcat 한글 설정하기&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Tomcat에서 문자셋 인코딩을 하여 한글이 깨지는 문제를 해결할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>일반적으로 웹 어플리케이션이 GET과 POST 방식으로 파라미터를 넘겨 받을 때 request.setCharacterEncoding()을 통한 문자셋 인코딩이 필요하다.&lt;/p>
&lt;h4 id="tomcat-4x">Tomcat 4.x&lt;/h4>
&lt;pre tabindex="0">&lt;code>단순히 JSP 혹은 서블릿의 최 상단에 request.setCharacterEncoding(&amp;#34;euc-kr&amp;#34;);을 하면 된다. 

GET과 POST 방식에 상관없이 인코딩을 해준다. 
&lt;/code>&lt;/pre>&lt;h4 id="tomcat-5x">Tomcat 5.x&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>POST 방식은 request.setCharacterEncoding(&amp;#34;euc-kr&amp;#34;);로 계속 하면된다. 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>하지만 GET 방식은 server.xml의 &lt;span style="color:#f92672">&amp;lt;Connector&amp;gt;&lt;/span> 설정 부분을 바꿔줘야만 한다. 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Connector&lt;/span> &lt;span style="color:#a6e22e">port=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;8080&amp;#34;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">maxThreads=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;150&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">minSpareThreads=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;25&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">maxSpareThreads=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;75&amp;#34;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">enableLookups=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">redirectPort=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;8443&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">acceptCount=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100&amp;#34;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">debug=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">connectionTimeout=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20000&amp;#34;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">disableUploadTimeout=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">URIEncoding=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;euc-kr&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>위에서 URIEncoding=&amp;#34;euc-kr&amp;#34; 부분이다.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>결론적으로 Tomcat 4.x와 Tomcat 5.x 는 모두 request.setCharacterEncoding()이 필요하다는 사실에는 변함이 없다.&lt;/p></description></item><item><title>Transaction 서비스</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/transaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/transaction/</guid><description>&lt;h1 id="transaction-서비스">Transaction 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>트랜잭션 서비스는 Spring 트랜잭션 서비스를 채택하여 가이드한다. 트랜잭션 서비스에는 여러가지가 있지만 여기서는 DataSource Transaction Service, JTA Transaction Service, JPA Transaction Service에 대해서 설명하고 트랜잭션 활용에 대해서는 설정 및 Annotation을 통해서 활용할 수 있는 Declaration Transaction Management와 프로그램에서 직접 API를 호출하여 쓸 수 있도록 하는 Programmatic Transaction Management 두가지에 대해서 설명한다.&lt;/p>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/transaction/declarative/">Declarative Transaction Management&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/persistence-layer/transaction/programmatic/">Programmatic Transaction Management&lt;/a>


&lt;/li>
&lt;/ul>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="datasource-transaction-service">DataSource Transaction Service&lt;/h3>
&lt;p>DataSource를 사용하여 Local Transaction을 관리할 수 있다. 아래에서 예를 들어서 설정 방법과 사용법을 설명한다.&lt;/p></description></item><item><title>UI Adaptor Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/ui-adaptor-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/ui-adaptor-service/</guid><description>&lt;h1 id="ui-adaptor-service">UI Adaptor Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크와 UI 솔루션(Rich Internet Application) 연동에 대해 살펴 본다.
UI Adaptor를 적용하는 방식은 특정한 하나의 방법을 표준화하기 어렵다.
보통 Web Framework 과 UI 솔루션과의 연동을 하는 방법 중 가장 많이 사용하는 방식은
Controller 역할을 수행하는 Servlet 객체에서 업무 로직을 호출 전 데이터를 DTO 형태로 변화하여 업무 로직으로 넘기는 방식이다.&lt;/p>
&lt;p>전자정부 표준프레임워크에서는 Spring MVC Annotation 기반으로 개발 시 요청되는 URI 와 Controller 클래스내의 메소드를 매핑하고 있다.
따라서 메소드의 파라미터로 넘어오는 객체가 request 객체가 아닌 업무용 DTO 클래스로 넘어올 수 있도록 가이드 하는 방식을 선택했다.
(사실 @ModelAttribute 를 이용하는 것과 같다.)
하지만 프로젝트 별로 비기능 요구사항의 특성을 고려하여 적합한 구조를 정의하여 적용하는 것이 필요하다.&lt;/p></description></item><item><title>UI 어댑터 예제(UI Adapter Example)</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/presentation-layer/ui-adaptor-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/presentation-layer/ui-adaptor-example/</guid><description>&lt;h1 id="ui-어댑터-예제ui-adapter-example">UI 어댑터 예제(UI Adapter Example)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>외부 UI 도구를 표준프레임워크에 활용하기 위하여 데이터를 주고 받기 위한 UI 어댑터에 대한 예제이다. 이 예제는 MiPlatform을 이용하여 화면을 구성하고 전자정부 표준프레임워크를 활용하여 해당 화면을 연결하여 기초적인 CRUD 작업을 수행하는 기능을 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/presentation-layer/images/ui-adaptor-1.png" alt="ui-adaptor-1" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/presentation-layer/images/ui-adaptor-2.png" alt="ui-adaptor-2" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/presentation-layer/images/ui-adaptor-3.png" alt="ui-adaptor-3" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/presentation-layer/images/ui-adaptor-4.png" alt="ui-adaptor-4" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/presentation-layer/images/ui-adaptor-5.png" alt="ui-adaptor-5" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/presentation-layer/images/ui-adaptor-6.png" alt="ui-adaptor-6" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/presentation-layer/images/ui-adaptor-7.png" alt="ui-adaptor-7" >
&lt;/p>
&lt;h2 id="참고자료">참고자료&lt;/h2></description></item><item><title>UML Editor</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/uml-editor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/implementation-tool/editor/uml-editor/</guid><description/></item><item><title>Unit Test</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/unit-test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/unit-test/</guid><description>&lt;h1 id="unit-test">Unit Test&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>개발한 대상 코드에 대해 테스트하고자 개발자가 작성한 테스트를 위한 코드로서의 Unit Test 에 대해 가이드한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Unit Test란 대상 코드에 대해 테스트하고자 개발자가 작성한 코드로서, 주로 특정 메소드를 실행해서 그 결과가 기대값과 일치하는지 확인하는 형태이며, Unit Test는 서로 독립적으로 수행되어야 한다.&lt;/p>
&lt;ul>
&lt;li>효과
&lt;ul>
&lt;li>작성한 코드의 설계 개선 작업 시, 코드 품질에 대한 확신&lt;/li>
&lt;li>코드 수정 시 버그를 쉽게 찾을 수 있게 해줌&lt;/li>
&lt;li>자동화된 회귀 테스트 (Regression Test)를 가능하게 해주는 Source가 됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>작성범위
&lt;ul>
&lt;li>주요 흐름에 대한 테스트 (the happy path)&lt;/li>
&lt;li>또 다른 주요 흐름에 대한 테스트 (the main alternative path)&lt;/li>
&lt;li>경계 조건에 대한 테스트 (null 인자 체크 등)&lt;/li>
&lt;li>Exception 테스트 (Exception 발생하는 조건에 대한 테스트)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>제공하는 테스트 도구는 Unit Test, Mock, DB Test Framework을 통해 TestCase 작성을 지원하고, Test Automation, Test Coverage, Test Reporting 등의 기능을 제공한다.&lt;/p></description></item><item><title>Unit Test 작성을 위한 pom.xml dependency 설정</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/pom-dependency-for-write-unittest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/pom-dependency-for-write-unittest/</guid><description>&lt;h2 id="unit-test-작성을-위한-pomxml-dependency-설정">Unit Test 작성을 위한 pom.xml dependency 설정&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> . . . 중략 . . .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>junit&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>junit&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>4.4&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.easymock&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>easymock&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.4&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.easymock&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>easymockclassextension&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.4&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.dbunit&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>dbunit&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.4.3&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.unitils&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>unitils&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.slf4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>slf4j-api&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.5.6&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.slf4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>slf4j-nop&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.5.6&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>runtime&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#f92672">&amp;lt;optional&amp;gt;&lt;/span>true&lt;span style="color:#f92672">&amp;lt;/optional&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> . . . 중략 . . .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Spring의 Validator 인터페이스와 유효성 검증</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/web-servlet-validation/</guid><description>&lt;h1 id="validation">Validation&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>객체의 유효성 검증을 위해 스프링 프레임워크는 org.springframework.validation.Validator라는 인터페이스를 제공한다.
Validator는 특정 계층에 종속적인 구조가 아니라서, web이나 data-access등 어떤 계층의 객체라도 유효성 검증이 가능하게 한다.
Jakarta Commons Validator나 Valang 같은 외부 Validator들도 Spring 프레임워크에서 사용할 수 있다.
Spring Modules를 이용한 Jakarta Commons Validator 사용 방법에 대해서는 Spring Framework에서 Commons Validator 사용 을 참고하라.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>부서 정보를 수정하는 페이지에서 커맨드 객체인 부서 정보 클래스를 유효성 검증하는 코드를 작성해 보자.
부서 클래스인 Department 클래스는 아래와 같다.&lt;/p></description></item><item><title>Commons Validator에 validation rule 추가하기</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/security/security-validationa-add-rules-in-common-validator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/security/security-validationa-add-rules-in-common-validator/</guid><description>&lt;h1 id="commons-validator에-validation-rule-추가하기">Commons Validator에 validation rule 추가하기&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Commons Validator는 primitive type, 필수값, 이메일등 흔히 사용되는 유형에 대한 validation rule을 template으로 제공하지만,
프로젝트의 특성에 따라 공통으로 사용되는 validation rule이 발생되고 이를 추가해야할 필요가 생길 수 있다.
공공프로젝트에서 흔히 사용되는 주민등록번호 validator를 추가해 봄으로써, validation rule을 추가하는 방법을 알아보고자 한다.&lt;br>
예제는 easycompany를 이용했다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Spring Module을 이용해서 Commons Validator를 사용한다면 아래와 같은 내용을 validation rule 정의 파일(validator-rules.xml 같은)에서 보았을 것이다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--필수값 체크 validation rule--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;validator&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;required&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">classname=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springmodules.validation.commons.FieldChecks&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">method=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;validateRequired&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">methodParams=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;java.lang.Object,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> org.apache.commons.validator.ValidatorAction,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> org.apache.commons.validator.Field,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> org.springframework.validation.Errors&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">msg=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;errors.required&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;javascript&amp;gt;&lt;/span>&lt;span style="color:#75715e">&amp;lt;![CDATA[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ]]&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/javascript&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/validator&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>validator 태그의 각각의 attribute는 다음과 같은 의미를 같는다.&lt;/p></description></item><item><title>View</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/</guid><description>&lt;h1 id="view">View&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Controller가 요청에 대한 처리를 하고, View 이름과 데이터(Model)를 ModelAndView에 저장해 DispatcherServlet에 반환(return)하면,
DispatcherServlet은 View 이름을 가지고 ViewResolver에게서 실제 View 객체를 얻고, 이 View는 Controller가 저장한 Model 객체의 정보를 출력한다.
여기서는 View와 ViewResolver, 그리고 JSP에서 편리한 데이터 출력을 위해 스프링이 제공하는 Spring form tag library에 대해서 설명한다.&lt;/p>
&lt;ul>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/#view">View&lt;/a>



&lt;ul>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/#%ea%b0%9c%ec%9a%94">개요&lt;/a>


&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/#%ec%84%a4%eb%aa%85">설명&lt;/a>



&lt;ul>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/#viewresolver">ViewResolver&lt;/a>



&lt;ul>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/#internalresourceviewresolverurlbasedviewresolver">InternalResourceViewResolver/UrlBasedViewResolver&lt;/a>


&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/#view-1">View&lt;/a>


&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/#spring-tag-library">Spring Tag Library&lt;/a>



&lt;ul>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/#meassage-tagspringmessage">meassage tag(&lt;code>&amp;lt;spring:message&amp;gt;&lt;/code>)&lt;/a>


&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/#form-tagformformforminput">form tag(&lt;code>&amp;lt;form:form&amp;gt;,&amp;lt;form:input&amp;gt;,...&lt;/code>)&lt;/a>


&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/#%ec%a0%84%ec%9e%90%ec%a0%95%eb%b6%80%ed%94%84%eb%a0%88%ec%9e%84%ec%9b%8c%ed%81%ac-tag-library">전자정부프레임워크 Tag Library&lt;/a>


&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>



 


 




 





 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet-declarative-validation/web-servlet-view/#%ec%b0%b8%ea%b3%a0%ec%9e%90%eb%a3%8c">참고자료&lt;/a>


&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="viewresolver">ViewResolver&lt;/h3>
&lt;p>Controller는 코드내에서 실제 View 객체를 생성하지 않고 View 이름만을 결정할 수 있는데, 이로써 Controller와 View의 분리(decoupling)를 가능하게 한다.&lt;/p></description></item><item><title>스프링 WebFlux와 기존 스프링 웹 프레임워크 비교</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/</guid><description>&lt;h1 id="web-reactive">Web Reactive&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>스프링 프레임워크, 스프링 웹 MVC를 포함한 기존 웹 프레임워크는 서블릿 API와 서블릿 컨테이너를 위해 개발되었다. 스프링 WebFlux는 5.0 버전부터 추가된 리액티브 스택 웹 프레임워크로서, 서블릿 API와 서블릿 컨테이너를 개발하기 위한 스프링 프레임워크이다.
스프링 웹 MVC를 포함한 기존의 웹 프레임워크와 달리 완전한 논블로킹으로 동작하며 Reactive Streams back pressure를 지원하고 Netty, Undertow, 서블릿 3.1+ 컨테이너 서버에서 실행된다. 웹 프레임워크 모두 스프링 프레임워크에 포함되어 있으며, 원하는 모듈을 선택하여 개발할 수 있다.&lt;/p></description></item><item><title>MVC 패턴의 구조와 장점</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-servlet/</guid><description>&lt;h1 id="web-servlet">Web Servlet&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/presentation-layer/images/web-servlet.jpg" alt="MVC(Model-View-Controller) 패턴" >
&lt;/p>
&lt;p>&lt;strong>MVC(Model-View-Controller) 패턴&lt;/strong>은 코드를 기능(역할)에 따라 &lt;strong>Model, View, Controller&lt;/strong> 3가지 요소로 분리한다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Model&lt;/strong> : 애플리케이션의 데이터와 비즈니스 로직을 담는 객체이다.&lt;/li>
&lt;li>&lt;strong>View&lt;/strong> : Model의 정보를 사용자에게 표시한다. 하나의 Model을 다양한 View에서 사용할 수 있다.&lt;/li>
&lt;li>&lt;strong>Controller&lt;/strong> : Model과 View의 중계 역할을 한다. 사용자의 요청을 받아 Model에 변경된 상태를 반영하고, 응답을 위한 View를 선택한다.&lt;/li>
&lt;/ul>
&lt;p>MVC 패턴은 &lt;strong>UI 코드와 비즈니스 코드를 분리&lt;/strong>함으로써 &lt;u>종속성을 줄이고, 재사용성을 높이고, 보다 쉬운 변경이 가능&lt;/u>하도록 한다.&lt;/p></description></item><item><title>스프링 WebFlux의 WebClient와 논블로킹 처리</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/web-reactive-webclient/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/web-reactive/web-reactive-webclient/</guid><description>&lt;h1 id="webclient">WebClient&lt;/h1>
&lt;p>스프링 WebFlux는 리액티브, 논블로킹 HTTP 요청을 위한 WebClient를 제공한다. 웹 클라이언트는 리액티브 타입을 사용하는 함수형 API이기 때문에 선언적인(declarative) 프로그래밍이 가능하다. 웹플럭스 클라이언트와 서버는 동일한 논블로킹 코덱으로 요청, 응답을 인코딩, 디코딩한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>WebClient는 요청을 수행하기 위해 HTTP 클라이언트 라이브러리에 처리를 위임하며 아래와 같은 기능을 기본으로 제공한다.&lt;/p>
&lt;ul>
&lt;li>Reactor Netty&lt;/li>
&lt;li>Jetty Reactive HttpClient&lt;/li>
&lt;li>Apache HttpComponents&lt;/li>
&lt;li>Others can be plugged via ClientHttpConnector.&lt;/li>
&lt;/ul>
&lt;h3 id="configuration">Configuration&lt;/h3>
&lt;p>WebClient는 가장 간단하게는 스태틱 팩토리 메소드로 만들 수 있다.&lt;/p>
&lt;ul>
&lt;li>WebClient.create()&lt;/li>
&lt;li>WebClient.create(String baseUrl)&lt;/li>
&lt;/ul>
&lt;p>위 메소드는 디폴트 세팅으로 Reactor Netty HttpClient를 사용하므로 클래스패스에 io.projectreactor.netty:reactor-netty가 있어야 한다.&lt;/p></description></item><item><title>WebService</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/webservice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/integration-layer/webservice/</guid><description>&lt;h1 id="webservice">WebService&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>WebService는 전자정부 개발프레임워크 Integration 서비스 표준에 따라 WebService를 요청하고 제공하기 위한 Library이다.&lt;/p>
&lt;h3 id="주요-개념">주요 개념&lt;/h3>
&lt;h4 id="web-services">Web Services&lt;/h4>
&lt;p>W3C는 Web Service를 “네트워크 상에서 발생하는 컴퓨터 간의 상호작용을 지원하기 위한 소프트웨어 시스템”으로 정의하고 있다. 일반적으로 Web Service는 인터넷과 같은 네트워크 상에서 접근되고, 요청된 서비스를 제공하는 원격 시스템에서 수행되는 Web APIs이다.&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/images/web_service_wbg.png" alt="WebService" >
&lt;/p>
&lt;ul>
&lt;li>참조 : 



 









 



&lt;a href="https://en.wikipedia.org/wiki/Web_service">https://en.wikipedia.org/wiki/Web_service&lt;/a>


&lt;/li>
&lt;/ul>
&lt;h3 id="사용-오픈소스">사용 오픈소스&lt;/h3>
&lt;h4 id="apache-cxf">Apache CXF&lt;/h4>
&lt;p>WebService는 Web Service 구현하기 위해서 



 









 



&lt;a href="https://cxf.apache.org/">Apache CXF&lt;/a>


를 사용한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>WebService는 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/integration-layer/integration-service/">Integration Service&lt;/a>


 표준에 따라 구현한 Library이므로, 본 장에서는 API 등의 사용 방식은 설명하지 않는다. 본 장은 WebService 만을 위한 추가적인 설정 정보를 설명하고, 설정 방법을 가이드한다.&lt;/p></description></item><item><title>WebSocket</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/webSocket/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/webSocket/</guid><description>&lt;h1 id="websocket">WebSocket&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>WebSocket 은 HTTP 환경에서 소켓 통신을 지원하기 위한 Spring 기술이다. Spring 은 기본적으로 WebSocket sub-protocol 로 STOMP 를 사용한다.&lt;/p>
&lt;p>(RFC6455는 웹 어플리케이션을 위한 새 기능으로 WebSocket protocol을 정의한다. 서버와 클라이언트간 양방향 통신(full-duplex)을 지원하는데, 이것은 웹을 좀 더 인터랙티브하게 만들기 위해 사용하였던 java applet, XMLHttpRequest, Flash, ActiveX 등의 기술을 대체하기 위한 중요한 기능이 될 수 있다.)&lt;/p>
&lt;p>HTTP 는 초기 handshake (protocol upgrade or switch 요청이고 서버가 동의하는 경우 101 응답을 내려 줌)를 위해서만 사용되며, handshake 가 성공하면 HTTP upgrade 요청에 기인하는 TCP 소켓이 open 된 채 서버와 클라이언트간 통신을 처리한다.&lt;/p></description></item><item><title>Write TestSuite</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-automation/write-testsuite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-automation/write-testsuite/</guid><description>&lt;h1 id="write-testsuite">Write TestSuite&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Test Automation을 위해 기존에 작성된 다수의 TestCase 들을 몇 개 그룹으로 묶는 방법을 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>&lt;strong>TestSuite&lt;/strong>은 개발자가 작성한 다수의 TestCase를 그룹으로 묶거나 모아서 한꺼번에 테스트를 수행할 수 있도록 JUnit 3.8에서 제공하던 클래스이다.
JUnit4에서는 TestSuite 클래스를 더이상 지원하지 않으며, 단지 다수의 TestCase를 특징에 따라 한꺼번에 수행할 수 있도록 그룹으로 묶는 개념으로 생각하는 것이 좋겠다.
따라서, JUnit3.8에서는 TestSuite Class를 작성하곤 했지만, JUnit4에서는 작성할 수는 있지만 잘 쓰지 않고, 빌드도구를 사용하는 방법을 많이 사용한다.&lt;/p></description></item><item><title>XML Manipulation Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/xml-manipulation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/xml-manipulation/</guid><description>&lt;h1 id="xml-manipulation-service">XML Manipulation Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>XML Manipulation 서비스는 XML을 생성하고, 읽고, 쓰는 등과 같은 기능과 조작 기능을 제공하는 서비스이다.
XML(Extensible Markup Language)은 W3C에서 다른 특수 목적의 마크업 언어를 만드는 용도에서 권장되는 다목적 마크업 언어이다.XML은 SGML의 단순화된 부분집합이지만, 수많은 종류의 데이터를 기술하는데 적용할 수 있다.XML은 주로 다른 시스템, 특히 인터넷에 연결된 시스템끼리 데이터를 쉽게 주고받을 수 있게 하여 HTML의 한계를 극복할 목적으로 만들어졌다. XML은 W3C에서 다른 특수 목적의 마크업 언어를 만드는 용도에서 권장되는 다목적 마크업 언어이다. XML은 SGML의 단순화된 부분집합이지만, 수많은 종류의 데이터를 기술하는데 적용할 수 있다.&lt;/p></description></item><item><title>개발자 개발환경 설치가이드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/install-guide/developer-environment-install-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/install-guide/developer-environment-install-guide/</guid><description>&lt;h1 id="개발자-개발환경-설치가이드">개발자 개발환경 설치가이드&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>본 가이드는 전자정부 표준프레임워크에서 제공하는 개발자 개발환경의 사용 방법을 제공한다.&lt;/p>
&lt;h2 id="step-1-개발환경-설치">Step 1. 개발환경 설치&lt;/h2>
&lt;h3 id="개발자-개발환경-다운로드">개발자 개발환경 다운로드&lt;/h3>
&lt;ol>
&lt;li>인터넷 웹브라우저를 통해 



 









 



&lt;a href="https://www.egovframe.go.kr/">eGovFrame 홈페이지&lt;/a>


에 접속하여 사이트 상위메뉴를 통해 &amp;ldquo;다운로드 &amp;gt; 개발환경&amp;gt; 4.x 다운로드&amp;quot;으로 이동한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/install-guide/images/dev-env-download-1.png" alt="개발환경 다운로드 1" >
&lt;/p>
&lt;ol start="2">
&lt;li>운영체제에 따라 다운받을 개발환경 게시물을 선택한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/install-guide/images/dev-env-download-2.png" alt="개발환경 다운로드 2" >
&lt;/p>
&lt;ol start="3">
&lt;li>첨부된 파일을 다운로드받아 압축을 해제한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/install-guide/images/dev-env-download-3.png" alt="개발환경 다운로드 3" >
&lt;/p>
&lt;h3 id="개발자-개발환경-실행">개발자 개발환경 실행&lt;/h3>
&lt;ol>
&lt;li>eclipse를 실행한다.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;strong>중요 사항&lt;/strong>&lt;/p>
&lt;p>✔ Fail to create Java Virtual Machine 오류가 발생할 경우 eclipse가 설치된 디렉토리의 &lt;strong>eclipse.ini&lt;/strong> 파일에 &lt;strong>JVM 경로&lt;/strong>를 지정해 주도록 한다.
개발자 개발환경을 사용하기 위해서는 해당 이클립스의 자바 버전이 설치되어야 한다.
&lt;strong>이클립스 버전별 지원 자바 버전은 환경 설정에서 확인 가능하다.&lt;/strong>&lt;/p></description></item><item><title>개발자 개발환경 소개</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/development-intro/developer-environment-introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/development-intro/developer-environment-introduction/</guid><description>&lt;h1 id="개발자-개발환경">개발자 개발환경&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크를 사용하는 개발자를 위한 개발환경에 대해 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>개발자용 개발환경에서는 필수 기능으로 구성된 경량 개발환경과 필수 기능, 선택 기능 모두로 구성된 통합 개발환경을 제공한다.&lt;/p>
&lt;h3 id="경량-개발환경">경량 개발환경&lt;/h3>
&lt;p>전자정부 표준프레임워크에서는 개발환경을 경량화하기 위해 개발자들이 필수적으로 사용하는 기능을 선별하여 선별된 기능만이 설치되어 있는 경량 개발환경을 제공한다. 또한 필수 기능 이외의 기능들은 맞춤형 개발 도구를 통해 선택적으로 구성할 수 있도록 한다.&lt;/p>
&lt;h4 id="구성도">구성도&lt;/h4>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/development-intro/images/lightweight-environment.jpg" alt="경량 개발환경 구성도" >
&lt;/p>
&lt;p>Implementation Tool과 Test Tool에서 제공하는 전체 기능 중 개발자들이 필수적으로 사용하는 기능은 SourceCode Editor, IDE, Common Component, Customize Development Tool, Code Generation, Code Inspection, Server Connection Management, Unit Test, Test Automation 이다. 경량 개발환경은 위의 기능들로 구성되어 있다.&lt;/p></description></item><item><title>개발프레임워크 개발환경 소개</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/development-intro/development-framework-introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/development-intro/development-framework-introduction/</guid><description>&lt;h1 id="개발프레임워크-개발환경-소개">개발프레임워크 개발환경 소개&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크의 개발환경에 대해 전체적인 개요를 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="개발환경-목표">개발환경 목표&lt;/h3>
&lt;p>전자정부 표준프레임워크 개발환경은 비즈니스 프로그램 개발, 버전관리, 단위 테스트, 빌드 등의 개발 Life-Cycle 전반에 대한 지원 도구를 제공한다.&lt;/p>
&lt;ul>
&lt;li>Implementation Tool&lt;/li>
&lt;li>Test Tool&lt;/li>
&lt;li>Configuration &amp;amp; Change Management Tool&lt;/li>
&lt;li>Deployment Tool&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/development-intro/images/development-environment-architecture.jpg" alt="개발환경 구성도" >
&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>구성요소&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Implementation Tool&lt;/td>
 &lt;td>프로그램 개발, 테스트, 디버그 등 개발자 개별 개발환경을 제공&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Test Tool&lt;/td>
 &lt;td>개발 프로그램에 대한 단위 테스트용 프로그램 작성 및 개별 배치 테스트 지원&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Conf. &amp;amp; Change &amp;amp; Batch Mgt. Tool&lt;/td>
 &lt;td>개발 프로그램에 대한 형상 식별, 버전관리, 이슈 관리 및 모니터링 도구 제공&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Deployment Tool&lt;/td>
 &lt;td>CI (Continuous Integration)와 서버 이관 관련 도구 제공&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="개발자-개발환경과-서버-개발환경">개발자 개발환경과 서버 개발환경&lt;/h3>
&lt;h4 id="개발자-개발환경">개발자 개발환경&lt;/h4>
&lt;p>개발자 개발환경은 Implementation Tool(Editor, Debug, IDE, Common Component, Mobile IDE, Batch IDE)과 Test Tool(Test Reporting, Unit Test, Batch Test)로 구성되어있다.&lt;/p></description></item><item><title>개발환경 구성 가이드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/individual-install-guide/individual-install-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/individual-install-guide/individual-install-guide/</guid><description>&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 개발자 개발환경은 기본적으로 &lt;strong>Windows 64 Bit&lt;/strong> 기반으로 제공되나 이 이외의 환경에서도 사용 가능하다.
Windows 64 Bit 이외의 환경에서 개발환경을 사용할 필요가 있을 경우 본 가이드를 참고하여 설치 가능하다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>개발환경을 개별적으로 구성해야 할 필요가 있을 경우 환경에 맞는 eclipse를 다운로드 받아 다음의 순서에 맞게 설치하도록 한다.
설치 소프트웨어 간 dependency 정보가 있으므로 반드시 아래의 순서를 따르도록 한다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>주의&lt;/strong> 설치가이드 플러그인 [자동설치/업데이트주소]는 최신버전을 다운로드 받을 수 있는 주소 입니다. 개발환경에 설치된 &lt;strong>버전과의 차이&lt;/strong>가 있을 수 있습니다.&lt;/li>
&lt;li>&lt;strong>주의&lt;/strong> 설치가이드 플러그인 [자동설치/업데이트주소]는 해당 플러그인을 공식적으로 받을 수 있는 저작자의 배포 주소 입니다. &lt;strong>주소가 변경되거나 상황에 따라서 다운로드가 안될 수&lt;/strong> 있습니다.&lt;/li>
&lt;/ul>
&lt;h2 id="설치가이드">설치가이드&lt;/h2>
&lt;h3 id="eclipse-2024-03431-packages-이용-시-설치가이드">Eclipse 2024-03(4.31) Packages 이용 시 설치가이드&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>소프트웨어&lt;/th>
 &lt;th>버전&lt;/th>
 &lt;th>자동설치/업데이트주소&lt;/th>
 &lt;th>필수여부&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Eclipse&lt;/td>
 &lt;td>4.31.0&lt;/td>
 &lt;td>



 









 



&lt;a href="https://www.eclipse.org/downloads/packages/release/2024-03/r">https://www.eclipse.org/downloads/packages/release/2024-03/r&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → Eclipse IDE for Enterprise Java and Web Developers 다운로드&lt;/td>
 &lt;td>필수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Spring Tools&lt;/td>
 &lt;td>4.22.1&lt;/td>
 &lt;td>



 









 



&lt;a href="https://cdn.spring.io/spring-tools/release/TOOLS/sts4/update/4.22.1.RELEASE/e4.31/">https://cdn.spring.io/spring-tools/release/TOOLS/sts4/update/4.22.1.RELEASE/e4.31/&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>Spring Tools&lt;/strong> : Spring Boot Language Server Feature, Spring IDE Boot Microservices Dash, Spring Tool Suite 4 main Feature &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>Spring Tools - Developer Resources&lt;/strong> : Spring Boot Language Server Feature Developer Resources, Spring IDE Boot Microservices Dash Developer Resources, Spring Tool Suite 4 main Feature Developer Resources&lt;/td>
 &lt;td>필수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>UML2 Extension&lt;/td>
 &lt;td>5.5.3&lt;/td>
 &lt;td>



 









 



&lt;a href="https://download.eclipse.org/releases/2023-09/">https://download.eclipse.org/releases/2023-09/&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>Modeling&lt;/strong> : UML2 Extender SDK&lt;/td>
 &lt;td>필수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Subversive SVN Team Provider&lt;/td>
 &lt;td>4.8.0&lt;/td>
 &lt;td>



 









 



&lt;a href="https://download.eclipse.org/technology/subversive/4.8/release/latest/">https://download.eclipse.org/technology/subversive/4.8/release/latest/&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>Subversive&lt;/strong> : Subversive SVN Team Provider&lt;/td>
 &lt;td>필수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Subversive SVN Connectors&lt;/td>
 &lt;td>6.0.4&lt;/td>
 &lt;td>



 









 



&lt;a href="https://osspit.org/eclipse/subversive-connectors/">https://osspit.org/eclipse/subversive-connectors/&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>Subversive SVN Connectors&lt;/strong> : Subversive SVN Connectors, SVNKit 1.10.x Implementation&lt;/td>
 &lt;td>필수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>MyBatipse&lt;/td>
 &lt;td>1.3.0&lt;/td>
 &lt;td>



 









 



&lt;a href="https://harawata.github.io/eclipse-site/">https://harawata.github.io/eclipse-site/&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>MyBatipse&lt;/strong> : MyBatipse&lt;/td>
 &lt;td>선택&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>PMD&lt;/td>
 &lt;td>7.4&lt;/td>
 &lt;td>



 









 



&lt;a href="https://pmd.github.io/pmd-eclipse-plugin-p2-site/">https://pmd.github.io/pmd-eclipse-plugin-p2-site/&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>PMD for Eclipse&lt;/strong> : PMD Plug-in&lt;/td>
 &lt;td>선택&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Properties Editor&lt;/td>
 &lt;td>6.0.5&lt;/td>
 &lt;td>



 









 



&lt;a href="http://propedit.sourceforge.jp/eclipse/updates/">http://propedit.sourceforge.jp/eclipse/updates/&lt;/a>


 또는 



 









 



&lt;a href="http://osdn.net/projects/propedit/storage/eclipse/updates">http://osdn.net/projects/propedit/storage/eclipse/updates&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>PropertiesEditor&lt;/strong> : Properties Editor v6.0.5, ropertiesEditor_Asian_NLS v6.0.0 &lt;code>&amp;lt;br&amp;gt;&lt;/code> * 위 url로 연결이 안 되는 경우가 잦음&lt;/td>
 &lt;td>선택&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>SpotBugs&lt;/td>
 &lt;td>4.8.5&lt;/td>
 &lt;td>



 









 



&lt;a href="https://spotbugs.github.io/eclipse/">https://spotbugs.github.io/eclipse/&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>SpotBugs&lt;/strong> : SpotBugs&lt;/td>
 &lt;td>선택&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Lombok&lt;/td>
 &lt;td>1.18.34&lt;/td>
 &lt;td>



 









 



&lt;a href="https://projectlombok.org/p2">https://projectlombok.org/p2&lt;/a>


 → &lt;strong>Lombok&lt;/strong> : Lombok&lt;/td>
 &lt;td>선택&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Grep Console&lt;/td>
 &lt;td>3.7.0&lt;/td>
 &lt;td>



 









 



&lt;a href="http://eclipse.schedenig.name/">http://eclipse.schedenig.name&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>Grep Console&lt;/strong> : Grep Console&lt;/td>
 &lt;td>선택&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Eclipse Docker Tooling&lt;/td>
 &lt;td>5.14.0&lt;/td>
 &lt;td>



 









 



&lt;a href="https://download.eclipse.org/linuxtools/update-docker">https://download.eclipse.org/linuxtools/update-docker&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>Linux Tools&lt;/strong> : Docker Tooling&lt;/td>
 &lt;td>선택&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Amateras Modeler&lt;/td>
 &lt;td>2.2.0&lt;/td>
 &lt;td>



 









 



&lt;a href="https://takezoe.github.io/amateras-update-site/">https://takezoe.github.io/amateras-update-site/&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>Amateras Modeler&lt;/strong> : Amateras Modeler &lt;code>&amp;lt;br&amp;gt;&lt;/code> * 설치 후 eclipse.ini 에 –add-opens=java.desktop/java.beans=ALL-UNNAMED 추가&lt;/td>
 &lt;td>필수&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>eGovFrame&lt;/td>
 &lt;td>4.3.0&lt;/td>
 &lt;td>



 









 



&lt;a href="https://maven.egovframe.go.kr/update_4.3/">https://maven.egovframe.go.kr/update_4.3/&lt;/a>


 &lt;code>&amp;lt;br&amp;gt;&lt;/code> → &lt;strong>eGovFrame Plug-ins&lt;/strong> : 필요 기능 설치&lt;/td>
 &lt;td>필수&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>개발환경 운영 가이드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/operation-guide/operation-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/operation-guide/operation-guide/</guid><description>&lt;h1 id="운영자-가이드">운영자 가이드&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 프레임워크 개발환경 구현도구의 기능을 추가하거나 개선하는 등의 변경 작업 이후 사용자에게 다시 배포하는 방법을 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>전자정부 프레임워크 개발환경 구현도구 소스는 여러 개의 단위 플러그인 프로젝트로 구성되어 있으며, 이를 배포하기 위하여 피처 프로젝트, 업데이트 사이트 프로젝트를 사용한다.&lt;/p>
&lt;ul>
&lt;li>피처 프로젝트 : 여러개의 단위 플러그인을 묶어서 플러그인 묶음을 하나의 단위로 쉽게 로딩하고 관리하기 위한 프로젝트이다.&lt;/li>
&lt;li>업데이트 사이트 프로젝트 : 플러그인 묶음을 카테고리 단위로 분류하고 빌드하여 사용자에게 배포하기 위한 프로젝트이다.&lt;/li>
&lt;/ul>
&lt;p>전자정부 프레임워크 개발환경 구현도구에 기능을 추가하거나 개선한 이후에는 해당 단위 플러그인 프로젝트에 대한 버전을 변경하여 사용자가 버전이 변경되었음을 알 수 있도록 해야 한다. 그리고, update site 를 사용하여 update를 할 수 있도록 Feature 단위로 묶고 Build 하여 재배포를 해야 한다. 그러므로 수정후 재배포 순서는 다음과 같다.&lt;/p></description></item><item><title>개인화</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/personalization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/personalization/</guid><description/></item><item><title>게시물 통계</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/statistics-reporting/post_statistics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/statistics-reporting/post_statistics/</guid><description>&lt;h1 id="게시물-통계">게시물 통계&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>게시물 통계 기능은 각종 게시물 현황에 대한 통계자료를 게시판 유형, 게시판 템플릿, 게시판 속성에 따라 기간별(연도별, 월별, 일별)로 그래프와 텍스트 형태 두가지 방식으로 제공한다.&lt;/p>
&lt;ul>
&lt;li>기능흐름&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>기능명&lt;/th>
 &lt;th>기능 흐름&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>게시물통계 집계&lt;/td>
 &lt;td>&lt;em>&lt;strong>&lt;strong>게시물정보 요약 배치수행&lt;/strong>&lt;/strong>&lt;/em> → &lt;em>&lt;strong>&lt;strong>게시물요약정보 집계&lt;/strong>&lt;/strong>&lt;/em>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>게시물통계 검색&lt;/td>
 &lt;td>검색조건 입력 → 조건별 게시물 통계 검색&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>게시물 통계 수치를 특정 검색 조건에 따라 생성글수, 총조회수, 평균조회수, 최고/최소조회수 게시글 정보, 최고게시자 정보를 조회하는 기능이다.&lt;/p>
&lt;h3 id="패키지-참조-관계">패키지 참조 관계&lt;/h3>
&lt;p>게시물통계 패키지는 요소기술의 공통(cmm) 패키지와 리포팅 공통(sts.com) 패키지에 대해서 직접적인 함수적 참조 관계를 가진다. 하지만, 컴포넌트 배포 시 오류 없이 실행되기 위하여 패키지 간의 참조관계에 따라 달력 패키지와 함께 배포 파일을 구성한다.&lt;/p></description></item><item><title>게시판</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/board/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/board/</guid><description/></item><item><title>공통코드관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/common-code-manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/common-code-manage/</guid><description/></item><item><title>구현도구 플러그인(Buildship)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/gradle/gradle-buildship/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/gradle/gradle-buildship/</guid><description>&lt;h1 id="구현도구-플러그인buildship">구현도구 플러그인(Buildship)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 개발 프레임워크의 개발환경 IDE에서는 Gradle 빌드 플러그인으로 Buildship을 사용하고 있다.
Buildship 플러그인은 Eclipse에서 제공하는 플러그인으로서 Gradle 프로젝트 개발의 편의성을 제공하고 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="buildship의-특징">Buildship의 특징&lt;/h3>
&lt;ol>
&lt;li>이클립스에서 gradle을 운영할 모듈 설정&lt;/li>
&lt;li>Gradle 프로젝트 생성(craete), 등록(import) 위자드(wizards) 제공&lt;/li>
&lt;li>이클립스에서의 gradle build 실행 및 Task 조회(View), 실행(Execution) 등의 기능 제공&lt;/li>
&lt;/ol>
&lt;h3 id="buildship의-설치">Buildship의 설치&lt;/h3>
&lt;p>eclipse에서 제공하는 Buildship은 Help &amp;gt; Install New Software 에서 아래 업데이트 사이트를 이용해 설치한다.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Eclipse Mars update site : 



 









 



&lt;a href="http://download.eclipse.org/buildship/updates/e45/releases/1.0">http://download.eclipse.org/buildship/updates/e45/releases/1.0&lt;/a>


&lt;/p></description></item><item><title>구현도구 플러그인(m2eclipse)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/maven/build-m2eclipse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/maven/build-m2eclipse/</guid><description>&lt;h1 id="구현도구-플러그인m2eclipse">구현도구 플러그인(m2eclipse)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 개발 프레임워크의 개발환경 IDE에서는 메이븐 통합 플러그인으로 m2eclipse을 사용하고 있으며
m2eclipse를 통한 보다 효율적인 Maven 프로젝트 개발 편의성을 제공하고 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="m2eclipse의-특징">m2eclipse의 특징&lt;/h3>
&lt;ol>
&lt;li>이클립스에서의 maven build 실행&lt;/li>
&lt;li>pom.xml에 기반한 이클립스 빌드 패스의 의존성(dependency) 관리&lt;/li>
&lt;li>리모트 리포지토리로부터 pom.xml에서 선언한 dependency의 자동 다운로드&lt;/li>
&lt;li>Maven 프로젝트 생성 위자드(wizards) 제공&lt;/li>
&lt;li>Maven 리포트 리포지토리 연동을 통한 dependency quick search 기능 제공&lt;/li>
&lt;/ol>
&lt;h2 id="환경-설정">환경 설정&lt;/h2>
&lt;p>전자정부 개발 프레임워크의 개발환경 IDE에 메이븐 통합 플러그인인 m2eclipse가 설치되어 있다.
구현 도구의 IDE 참조: 



 









 



&lt;a href="https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:dev2:imp:editor:ide">IDE&lt;/a>


&lt;/p></description></item><item><title>권한관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/security/authority-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/security/authority-management/</guid><description>&lt;h1 id="권한관리">권한관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>시스템 구축시 스프링의 보안 메카니즘을 적용하기 위해 Spring Security 에서 관리하는 &lt;strong>권한(Authority)&lt;/strong> 을 정의하는 컴포넌트이다. 당 컴포넌트를 이용하여 담당자는 시스템 사용자에게 부여하는 권한을 정의하여 관리할 수 있다. 표준프레임워크 3.9부터는 &lt;strong>Session 방식 권한처리&lt;/strong> 기능을 추가하여 Spring Security 를 사용하지 않고도 당 컴포넌트를 이용하여 접근제어가 가능하도록 하였다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>&lt;strong>권한관리&lt;/strong>는 사용자별 권한을 관리하기 위한 목적으로 &lt;strong>등록&lt;/strong>, &lt;strong>수정&lt;/strong>, &lt;strong>삭제&lt;/strong>, &lt;strong>조회&lt;/strong>, &lt;strong>목록조회&lt;/strong>의 기능을 수반한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> ① 권한등록 : 시스템 담당자는 시스템 사용자에게 권한을 부여하기 위한 정의한 권한정보를 등록한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ② 권한수정 : 시스템 담당자는 시스템 사용자에게 권한을 부여하기 위한 정의한 권한정보를 수정한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ③ 권한삭제 : 시스템 담당자는 시스템 사용자에게 권한을 부여하기 위한 정의한 권한정보를 삭제한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ④ 권한조회 : 시스템 담당자는 시스템 사용자에게 권한을 부여하기 위한 정의한 권한정보를 조회한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ⑤ 권한목록 : 시스템 담당자는 시스템 사용자에게 권한을 부여하기 위한 정의한 권한정보 목록을 조회한다.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="환경설정">환경설정&lt;/h3>
&lt;h4 id="권한-기본-설정">권한 기본 설정&lt;/h4>
&lt;h5 id="-스프링에서-제공하는-기본-권한authority">* 스프링에서 제공하는 기본 권한(Authority)&lt;/h5>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>AUTHORITI&lt;/th>
 &lt;th>DESCRIPTION&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ROLE_ANONYMOUS&lt;/td>
 &lt;td>모든 사용자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>IS_AUTHENTICATED_ANONYMOUSLY&lt;/td>
 &lt;td>익명 사용자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>IS_AUTHENTICATED_FULLY&lt;/td>
 &lt;td>인증된 사용자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>IS_AUTHENTICATED_REMEMBERED&lt;/td>
 &lt;td>REMEMBERED 사용자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ROLE_RESTRICTED&lt;/td>
 &lt;td>제한된 사용자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ROLE_USER&lt;/td>
 &lt;td>일반 사용자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ROLE_ADMIN&lt;/td>
 &lt;td>관리자&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h4 id="권한-추가-설정">권한 추가 설정&lt;/h4>
&lt;h5 id="-업무적으로-필요에-의해-추가한-권한authority">* 업무적으로 필요에 의해 추가한 권한(Authority)&lt;/h5>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>AUTHORITI&lt;/th>
 &lt;th>DESCRIPTION&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>ROLE_SYM&lt;/td>
 &lt;td>시스템 업무 담당자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ROLE_COP&lt;/td>
 &lt;td>협업 담당자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ROLE_USS&lt;/td>
 &lt;td>사용자지원 담당자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ROLE_USER_MANAGER&lt;/td>
 &lt;td>업무사용자 관리자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ROLE_SEC&lt;/td>
 &lt;td>보안 업무 담당자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ROLE_ENTRPRSMBER_MANAGER&lt;/td>
 &lt;td>기업회원 관리자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ROLE_MBER_MANAGER&lt;/td>
 &lt;td>일반회원 관리자&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h4 id="권한롤-상속구조-정의roles_hierarchy">권한(롤) 상속구조 정의(ROLES_HIERARCHY)&lt;/h4>
&lt;h5 id="-정의된-하위-권한의-롤을-상속하기-위해-comtnroles_hierarchy-table에-상속구조를-정의한다">* 정의된 하위 권한의 롤을 상속하기 위해 COMTNROLES_HIERARCHY Table에 상속구조를 정의한다.&lt;/h5>
&lt;p>ROLE_ANONYMOUS → IS_AUTHENTICATED_ANONYMOUSLY → IS_AUTHENTICATED_FULLY → IS_AUTHENTICATED_REMEMBERED → ROLE_USER → ROLE_ADMIN&lt;/p></description></item><item><title>권한그룹관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/security/authority-group-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/security/authority-group-management/</guid><description>&lt;h1 id="권한-그룹-관리">권한 그룹 관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>&lt;strong>권한그룹관리&lt;/strong>는 시스템 사용을 위해 사용자의 특성에 따라 그룹을 설정하고, 특정 그룹을 선택한 뒤 해당 그룹에 속한 사용자에게 일괄적으로 권한을 부여할 수 있는 관리기능을 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>&lt;strong>권한그룹관리&lt;/strong>는 그룹단위로 사용자권한을 관리하기 위한 목적으로 &lt;strong>등록, 수정, 삭제, 목록조회&lt;/strong>의 기능을 수반한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> ① 권한그룹 등록 : 그룹별 사용자를 조회하여 권한정보를 일괄 및 개별 등록한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ② 권한그룹 수정 : 그룹별 사용자에게 할당된 권한정보를 일괄 및 개별 수정한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ③ 권한그룹 삭제 : 그룹별 사용자에게 할당된 권한정보를 일괄 및 개별 삭제한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ④ 권한그룹 목록 : 그룹별 사용자에게 할당된 권한정보를 조회한다.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="패키지-참조-관계">패키지 참조 관계&lt;/h3>
&lt;p>권한그룹관리 패키지는 권한관리 패키지와 요소기술의 공통 패키지(cmm)에 대해서만 직접적인 함수적 참조 관계를 가진다. 하지만, 컴포넌트 배포 시 오류 없이 실행되기 위하여 패키지 간의 참조관계에 따라 부서권한관리, 그룹관리, 롤관리, 스프링시큐리티, 사용자통합인증, 요소기술(유틸리티) 시스템, 웹에디터, 메일연동 인터페이스 패키지와 함께 배포 파일을 구성한다.&lt;/p></description></item><item><title>그룹관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/security/group-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/security/group-management/</guid><description>&lt;h1 id="그룹-관리">그룹 관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>&lt;strong>그룹관리&lt;/strong>는 시스템을 사용하는 목적별 사용자 그룹을 생성하여 그룹에 해당하는 사용자에게 권한을 일괄적으로 할당하기 위해 그룹을 정의한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>&lt;strong>그룹관리&lt;/strong>는 시스템을 사용하는 목적별 사용자 그룹을 생성하여 그룹에 해당하는 사용자에게 권한을 일괄적으로 할당하기위한 목적으로 그룹의 &lt;strong>등록, 수정, 삭제, 조회, 목록조회&lt;/strong>의 기능을 수반한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> ① 그룹등록 : 시스템을 사용하는 목적별 사용자 그룹정보를 등록한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ② 그룹수정 : 시스템을 사용하는 목적별 사용자 그룹정보를 수정한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ③ 그룹삭제 : 시스템을 사용하는 목적별 사용자 그룹정보를 삭제한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ④ 그룹조회 : 시스템을 사용하는 목적별 사용자 그룹정보를 조회한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ⑤ 그룹목록 : 시스템을 사용하는 목적별 사용자 그룹정보목록을 조회한다.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="설명-1">설명&lt;/h2>
&lt;h3 id="패키지-참조-관계">패키지 참조 관계&lt;/h3>
&lt;p>그룹관리 패키지는 요소기술의 공통 패키지(cmm)에 대해서만 직접적인 함수적 참조 관계를 가진다. 하지만, 컴포넌트 배포 시 오류 없이 실행되기 위하여 패키지 간의 참조관계에 따라 권한관리, 부서권한관리, 권한그룹관리, 롤관리, 스프링시큐리티, 사용자통합인증, 요소기술(유틸리티) 시스템, 웹에디터, 메일연동 인터페이스 패키지와 함께 배포 파일을 구성한다.&lt;/p></description></item><item><title>달력</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/calendar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/calendar/</guid><description/></item><item><title>대시보드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-dashboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-dashboard/</guid><description>&lt;h1 id="대시보드">대시보드&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>본인이 속해있는 스페이스별로 등록된 이슈상태를 조회하는 기능이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="대시보드-1">대시보드&lt;/h3>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/configuration-management-tool/images/issue-dashboard.jpg" alt="대시보드" >
&lt;/p>
&lt;ol>
&lt;li>스페이스별 이슈상태를 조회한다.&lt;/li>
&lt;li>보고한 이슈, 할당된 이슈, 전체 이슈를 조회한다.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>스페이스 : 본인이 속해있는 스페이스&lt;/li>
&lt;li>이슈생성 : 이슈등록 화면으로 이동&lt;/li>
&lt;li>이슈검색 : 이슈검색 화면으로 이동&lt;/li>
&lt;li>상태 : 스페이스별로 상태가 다르며, 각 상태별 이슈 건수를 조회&lt;/li>
&lt;li>보고한 이슈 : 본인이 등록한 이슈 건수&lt;/li>
&lt;li>할당된 이슈 : 본인이 담당자로 할당된 이슈 건수. 즉, 본인이 처리해야할 이슈 건수를 의미&lt;/li>
&lt;li>전체 이슈 : 전체 이슈 건수&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>&amp;lsquo;이슈등록&amp;rsquo; 버튼을 클릭하여 이슈등록 화면으로 이동한다.&lt;/li>
&lt;li>&amp;lsquo;이슈검색&amp;rsquo; 버튼을 클릭하여 이슈검색 화면으로 이동한다.&lt;/li>
&lt;/ol></description></item><item><title>데이터 엑세스 예제(Data Access Example)</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/persistence-layer/dataaccess-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/persistence-layer/dataaccess-example/</guid><description>&lt;h1 id="데이터-엑세스-예제data-access-example">데이터 엑세스 예제(Data Access Example)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>iBatis를 사용하여 Database에 데이터를 조회, 생성, 수정, 삭제하는 기능에 대한 예제를 제공한다. SQL Mapping을 통하여 쿼리 및 데이터 매핑을 정의하고, 스프링의 Data Source를 사용하여 Connection을 획득한 뒤, DAO 클래스에서 주어진 메소드를 사용하여 CRUD 작업을 수행한다. 조회 결과를 화면에 출력하거나 화면에서 작성된 입력 내용을 데이터베이스에 반영하는 기능의 예제를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;ol>
&lt;li>해당 예제를 설치하고 실행하면 iBatis로 구현한 공시게시판이 나타난다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/persistence-layer/images/dataacess-1.png" alt="dataacess-1" >
&lt;/p>
&lt;ol start="2">
&lt;li>[등록] 버튼을 눌러 공시 등록페이지를 호출하고, 내용을 작성한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/persistence-layer/images/dataacess-2.png" alt="dataacess-2" >
&lt;/p></description></item><item><title>디지털원패스</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/user-authentication/digital-one-pass/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/user-authentication/digital-one-pass/</guid><description>&lt;h1 id="디지털원패스">디지털원패스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>디지털원패스는 하나의 아이디로 본인이 선택한 인증수단을 사용하여 안전하고 편리하게 여러 전자정부 서비스를 이용할 수 있는 인증서비스이다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>전자정부 서비스 이용 시 웹사이트마다 아이디를 일일이 기억할 필요없이 하나의 디지털원패스 아이디를 통해 여러 전자정부 서비스를 이용할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>디지털원패스는 모바일인증(지문/안면/공인인증서/간편번호(PIN)/패턴), 공인인증서, 문자(SMS)인증의 인증수단을 지원한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>디지털원패스는 행정안전부(디지털안전정책과), 한국지역정보개발원(정보인증부)로 공문을 통해 신청 후 연계모듈을 제공받아야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>디지털원패스 



 









 



&lt;a href="https://www.onepass.go.kr/">홈페이지&lt;/a>


&lt;/p>
&lt;/li>
&lt;li>
&lt;p>표준프레임워크는 연계모듈을 이용한 애플리케이션 개발에 활용할 수 있는 예제를 제공한다.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="관련소스">관련소스&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>유형&lt;/th>
 &lt;th>대상소스명&lt;/th>
 &lt;th>비고&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>연계용 환경설정&lt;/td>
 &lt;td>onepass.properties&lt;/td>
 &lt;td>디지털원패스 환경설정 파일&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>연계용 모듈&lt;/td>
 &lt;td>egovframework/onepass/onepass.jks&lt;/td>
 &lt;td>디지털원패스 SSL 인증서 키 체인 스토어(연계모듈에 포함)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>연계용 모듈&lt;/td>
 &lt;td>egovframework/onepass/pubkey_share.der&lt;/td>
 &lt;td>디지털원패스 서명검증 파일(공개키)(연계모듈에 포함)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>연계용 모듈&lt;/td>
 &lt;td>WEB-INF/lib/onepass-client-2.0.0.jar&lt;/td>
 &lt;td>디지털원패스 라이브러리(연계모듈에 포함)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Controller&lt;/td>
 &lt;td>egovframework.com.uss.umt.onepass.web.EgovOnepassController.java&lt;/td>
 &lt;td>디지털원패스 연동 처리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Controller&lt;/td>
 &lt;td>egovframework.com.uss.umt.web.EgovMberManageController.java&lt;/td>
 &lt;td>디지털원패스 연동해지 처리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Controller&lt;/td>
 &lt;td>egovframework.com.uss.umt.web.EgovEntrprsManageController.java&lt;/td>
 &lt;td>디지털원패스 연동해지 처리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Service&lt;/td>
 &lt;td>egovframework.com.uss.umt.onepass.service.EgovOnepassService.java&lt;/td>
 &lt;td>디지털원패스 연동 처리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>ServiceImpl&lt;/td>
 &lt;td>egovframework.com.uss.umt.onepass.serviceImpl.EgovOnepassServiceImpl.java&lt;/td>
 &lt;td>디지털원패스 연동 처리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>DAO&lt;/td>
 &lt;td>egovframework.com.uss.umt.onepass.serviceImpl.EgovOnepassDAO.java&lt;/td>
 &lt;td>디지털원패스 연동 처리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Property&lt;/td>
 &lt;td>egovframework/message/com/uss/umt/onepass/message_en.properties&lt;/td>
 &lt;td>디지털원패스 메시지처리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Property&lt;/td>
 &lt;td>egovframework/message/com/uss/umt/onepass/message_ko.properties&lt;/td>
 &lt;td>디지털원패스 메시지처리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>XML&lt;/td>
 &lt;td>egovframework/mapper/com/uat/uia/EgovOnepass_SQL_altibase.xml&lt;/td>
 &lt;td>디지털원패스 인증 회원 조회&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>XML&lt;/td>
 &lt;td>egovframework/mapper/com/uat/uia/EgovOnepass_SQL_cubrid.xml&lt;/td>
 &lt;td>디지털원패스 인증 회원 조회&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>XML&lt;/td>
 &lt;td>egovframework/mapper/com/uat/uia/EgovOnepass_SQL_maria.xml&lt;/td>
 &lt;td>디지털원패스 인증 회원 조회&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>XML&lt;/td>
 &lt;td>egovframework/mapper/com/uat/uia/EgovOnepass_SQL_mysql.xml&lt;/td>
 &lt;td>디지털원패스 인증 회원 조회&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>XML&lt;/td>
 &lt;td>egovframework/mapper/com/uat/uia/EgovOnepass_SQL_oracle.xml&lt;/td>
 &lt;td>디지털원패스 인증 회원 조회&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>XML&lt;/td>
 &lt;td>egovframework/mapper/com/uat/uia/EgovOnepass_SQL_tibero.xml&lt;/td>
 &lt;td>디지털원패스 인증 회원 조회&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>XML&lt;/td>
 &lt;td>egovframework/mapper/com/uat/uia/EgovOnepass_SQL_postgres.xml&lt;/td>
 &lt;td>디지털원패스 인증 회원 조회&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>XML&lt;/td>
 &lt;td>egovframework/mapper/com/uat/uia/EgovOnepass_SQL_goldilocks.xml&lt;/td>
 &lt;td>디지털원패스 인증 회원 조회&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JSP&lt;/td>
 &lt;td>WEB-INF/jsp/egovframework/com/cmm/error/onepassAccessDenied.jsp&lt;/td>
 &lt;td>디지털원패스 에러페이지&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JSP&lt;/td>
 &lt;td>WEB-INF/jsp/egovframework/com/uat/uia/EgovLoginUsr.jsp&lt;/td>
 &lt;td>로그인 화면&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JSP&lt;/td>
 &lt;td>WEB-INF/jsp/egovframework/com/uss/umt/onepass/onepassLogin.jsp&lt;/td>
 &lt;td>디지털원패스 로그인/로그아웃 모듈&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JSP&lt;/td>
 &lt;td>WEB-INF/jsp/egovframework/com/uss/umt/onepass/onepassResult.jsp&lt;/td>
 &lt;td>디지털원패스 결과 메시지 출력 후 메인화면으로 이동&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JSP&lt;/td>
 &lt;td>WEB-INF/jsp/egovframework/com/uss/umt/EgovEntrprsMberSelectUpdt.jsp&lt;/td>
 &lt;td>디지털원패스 연동해지 처리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JSP&lt;/td>
 &lt;td>WEB-INF/jsp/egovframework/com/uss/umt/EgovMberSelectUpdt.jsp&lt;/td>
 &lt;td>디지털원패스 연동해지 처리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>CSS&lt;/td>
 &lt;td>css/egovframework/com/com.css&lt;/td>
 &lt;td>디지털원패스 에러페이지 css 추가&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Image&lt;/td>
 &lt;td>images/egovframework/com/uat/uia/onepass.png&lt;/td>
 &lt;td>디지털원패스 로그인 이미지&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="환경설정">환경설정&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>위키가이드의 



 









 



&lt;a href="https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:dev4.3:imp:editor:common_component">공통컴포넌트 시작하기&lt;/a>


를 참고하여 공통컴포넌트를 설치한다.&lt;/p></description></item><item><title>로그관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/log-manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/log-manage/</guid><description/></item><item><title>로그인 시간관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/security/login_session_management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/security/login_session_management/</guid><description>&lt;h1 id="로그인-시간관리">로그인 시간관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>로그인후 만료시간까지의 남은 시간을 표시한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>세션에 객체 정보 저장, 취득, 제거의 기능을 갖으며 HttpServletRequest 객체의 HttpSession 정보를 사용하여 처리된다.&lt;/p>
&lt;h3 id="관련소스">관련소스&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>유형&lt;/th>
 &lt;th>대상소스&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;th>비고&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Filter&lt;/td>
 &lt;td>egovframework.com.cmm.filter.SessionTimeoutCookieFilter.java&lt;/td>
 &lt;td>시간관리 필터&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Controller&lt;/td>
 &lt;td>egovframework.com.cmm.web.EgovComIndexController.java&lt;/td>
 &lt;td>상단프레임 Controller&lt;/td>
 &lt;td>시간관리 표시&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Controller&lt;/td>
 &lt;td>egovframework.com.uat.uia.web.EgovLoginController.java&lt;/td>
 &lt;td>로그인시간 연장 Controller&lt;/td>
 &lt;td>시간연장&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>JSP&lt;/td>
 &lt;td>/WEB-INF/jsp/egovframework/com/cmm/EgovUnitTop.jsp&lt;/td>
 &lt;td>상단프레임 페이지&lt;/td>
 &lt;td>시간관리 표시&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="필터-쿠키값-설정">필터 쿠키값 설정&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>쿠키명&lt;/th>
 &lt;th>변수타입&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;th>내용&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>egovLatestServerTime&lt;/td>
 &lt;td>long&lt;/td>
 &lt;td>서버의 최근 시간&lt;/td>
 &lt;td>시스템의 최근 시간을 밀리초 단위의 Epoch시간(Unix time, POSIX time)으로 기록한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>egovExpireSessionTime&lt;/td>
 &lt;td>long&lt;/td>
 &lt;td>세션 객체 생성&lt;/td>
 &lt;td>HttpSession에서 만료 시간을 밀리초 단위의 Epoch시간(Unix time, POSIX time)으로 기록한다.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="output">Output&lt;/h3>
&lt;ul>
&lt;li>String, long : 필터를 통해 쿠키명(String)에 값(long)형태로 저장된다.&lt;/li>
&lt;/ul>
&lt;h2 id="환경설정">환경설정&lt;/h2>
&lt;p>세션 만료 시간을 적절하게 설정하여야 한다.&lt;br>
너무 짧으면 사용시 불편을 초래할수 있고, 너무 길면 보안상 좋지 않으며 서버에 세션정보가 누적되어 성능저하나 오동작을 유발할수 있다.&lt;/p></description></item><item><title>로그인정책관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/user-authentication/access-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/user-authentication/access-policy/</guid><description>&lt;h1 id="로그인정책-관리">로그인정책 관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>&lt;strong>로그인정책관리&lt;/strong>는 특정 IP에 대한 로그인 제한과 같은 사용자 로그인 정책을 정의하고, 정의된 정책에 맞게 로그인을 제한하는 기능을 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>&lt;strong>로그인정책관리&lt;/strong>는 로그인정책정보를 등록하여 모든 사용자에게 로그인에 대한 정책을 관리하기 위한 목적으로 로그인정책정보의 &lt;strong>등록, 수정, 삭제, 조회, 목록조회&lt;/strong>의 기능을 수반한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> ① 로그인정책목록조회 : 사용자 로그인 정책으로 정의된 정보를 최근 등록 순서대로 조회하고, 그 결과를 화면에 반영한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ② 로그인정책등록 : 사용자 로그인 정책으로 정의된 항목을 입력하고, 정합성을 체크한 뒤 저장한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ③ 로그인정책수정 : 정의된 사용자 로그인 정책에 대한 변경항목을 수정 후 저장한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ④ 로그인정책삭제 : 기 등록된 사용자 로그인 정책을 삭제한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ⑤ 로그인정책반영결과조회 : 등록된 사용자 로그인 정책을 운영시스템에 반영하고 그 결과를 조회한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="패키지-참조-관계">패키지 참조 관계&lt;/h3>
&lt;p>로그인정책관리 패키지는 요소기술의 공통(cmm) 패키지와 로그인 패키지에 대해서 직접적인 함수적 참조 관계를 가진다. 하지만, 컴포넌트 배포 시 오류 없이 실행되기 위하여 패키지 간의 참조관계에 따라 패키지와 포맷/날짜/계산, 메일연동 인터페이스, 시스템 패키지와 함께 배포 파일을 구성한다.&lt;/p></description></item><item><title>롤관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/security/role-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/security/role-management/</guid><description>&lt;h1 id="롤-관리">롤 관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>&lt;strong>롤관리&lt;/strong>는 시스템을 사용하는 사용자 혹은 사용자 그룹별로 부여된 권한정보에 준하여 시스템에 접근할 수 있는 권한을 제어하는 기능을 제공하고, 그와 관련한 롤 정보를 관리할 수 있는 기능을 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>&lt;strong>롤관리&lt;/strong>는 사용자 권한별 롤 정보를 관리하기 위한 목적으로 롤의 &lt;strong>등록, 수정, 삭제, 조회, 목록조회&lt;/strong>의 기능을 수반한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> ① 롤등록 : 시스템 메뉴 및 기능화면에 따른 접근권한, 데이터 입력, 수정, 삭제의 접근 정보를 등록한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ② 롤수정 : 시스템 메뉴 및 기능화면에 따른 접근권한, 데이터 입력, 수정, 삭제의 접근 정보를 수정한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ③ 롤삭제 : 시스템 메뉴 및 기능화면에 따른 접근권한, 데이터 입력, 수정, 삭제의 접근 정보를 삭제한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ④ 롤조회 : 시스템 메뉴 및 기능화면에 따른 접근권한, 데이터 입력, 수정, 삭제의 접근 정보를 조회한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ⑤ 롤목록 : 시스템 메뉴 및 기능화면에 따른 접근권한, 데이터 입력, 수정, 삭제의 접근 정보 목록을 조회한다.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="설명-1">설명&lt;/h2>
&lt;h3 id="패키지-참조-관계">패키지 참조 관계&lt;/h3>
&lt;p>롤관리 패키지는 요소기술의 공통 패키지(cmm)와 권한관리 패키지에 대해서 직접적인 함수적 참조 관계를 가진다. 하지만, 컴포넌트 배포 시 오류 없이 실행되기 위하여 패키지 간의 참조관계에 따라 부서권한관리, 권한그룹관리, 그룹관리, 스프링시큐리티, 사용자통합인증, 요소기술(유틸리티) 시스템, 웹에디터, 메일연동 인터페이스 패키지와 함께 배포 파일을 구성한다.&lt;/p></description></item><item><title>메뉴관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/menu-manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/menu-manage/</guid><description/></item><item><title>메시지 처리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/message-process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/message-process/</guid><description/></item><item><title>UX/UI Controller Component</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/uxui-controller-component/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/uxui-controller-component/</guid><description>&lt;h1 id="uxui-controller-component">UX/UI Controller Component&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부에서 효율적인 스마트 전자정부 기반시스템의 구축•운영을 통해 전자정부의 서비스 품질 UX 레이어는 UI/UX Controller Component, JavaScript Module App Framework, HTML5, CSS3 서비스를 제공한다. 오픈소스는 JQuery Mobile을 채택하였으며 jQuery Mobile은 html5, CSS3, javascript를 제공한다. 오픈 소스를 Customizing 하여 UI레이어의 기능을 사용 하며 내용은 아래와 같다 UI/UX Controller Component 모바일 웹 사용자 환경(UX/UI)에 대한 유연한 대응을 위해 Touch Optimized 된 필수 UI 컨트롤러 컴포넌트를 제공한다. HTML5는 모바일 웹 페이지 구성 시 사용 할 수 있는 마크업 언어로서 모바일 특화 태그 밑 디바이스 API를 제공한다. CSS3는 모바일 기기 및 브라우저에 따라 적합한 컴포넌트가 보여지는 기능을 제공한다. 또한 JavaScript Module App Framework UX/UI controller component의 효율성을 보장하는 javascript 밑 Json 구조를 제공한다.&lt;/p></description></item><item><title>문자메세지</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/sms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/sms/</guid><description/></item><item><title>배치관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/batch-manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/batch-manage/</guid><description/></item><item><title>공통컴포넌트 배포 파일의 구성</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/common-intro/deployment-structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/common-intro/deployment-structure/</guid><description>&lt;h1 id="공통컴포넌트-배포파일의-구성">공통컴포넌트 배포파일의 구성&lt;/h1>
&lt;h2 id="배포파일-패키지-테이블-간-관계">배포파일, 패키지, 테이블 간 관계&lt;/h2>
&lt;p>배포파일을 구성할 때에 패키지간의 종속성과 업무적 연관성을 포함하여 구성하였다. 한 개의 배포파일은 독립적으로 설치하여 동작할 수 있으며, 2개 이상의 배포파일을 설치할 때에는 환경설정에 유의하여야 한다. 배포파일, 배포파일에 포함된 패키지, 그리고 패키지에 포함되어 있는 소스코드들이 사용하는 테이블 정보는 아래의 표에서 보는 바와 같다. 배포파일에는 소스코드와 테이블 생성 스크립트가 함께 제공된다.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>번호&lt;/th>
 &lt;th>컴포넌트명&lt;/th>
 &lt;th>패키지&lt;/th>
 &lt;th>배포파일명&lt;/th>
 &lt;th>포함패키지&lt;/th>
 &lt;th>포함 테이블&lt;/th>
 &lt;th>비고&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>1&lt;/td>
 &lt;td>인증서로그인&lt;/td>
 &lt;td>egovframework.com.utl.sec&lt;/td>
 &lt;td>egovframework-certlogin-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.sec &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHEMAILDSPTCHMANAGE&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>2 &lt;br> 3&lt;/td>
 &lt;td>일반로그인 &lt;br> 디지털원패스&lt;/td>
 &lt;td>egovframework.com.uat.uia&lt;/td>
 &lt;td>egovframework-gnrlogin-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uat.uia &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNAUTHORINFO &lt;br> COMTNAUTHORROLERELATE &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNFILESYSMNTRNG &lt;br> COMTNFILESYSMNTRNGLOGINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNLOGINPOLICY &lt;br> COMTNORGNZTINFO &lt;br> COMTNROLEINFO &lt;br> COMVNUSERMASTER&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>4&lt;/td>
 &lt;td>로그인정책관리&lt;/td>
 &lt;td>egovframework.com.uat.uap&lt;/td>
 &lt;td>egovframework-loginpolicy-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uat.uap &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMTNGNRLMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNLOGINPOLICY&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>8 &lt;br> 9 &lt;br> 10 &lt;br> 11 &lt;br> 12&lt;/td>
 &lt;td>권한관리 &lt;br> 권한그룹관리 &lt;br> 그룹관리 &lt;br> 롤관리 &lt;br> 부서권한관리&lt;/td>
 &lt;td>egovframework.com.sec.ram &lt;br> egovframework.com.sec.rgm &lt;br> egovframework.com.sec.gmt &lt;br> egovframework.com.sec.rmt &lt;br> egovframework.com.sec.drm&lt;/td>
 &lt;td>egovframework-authormanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sec.ram &lt;br> egovframework.com.sec.drm &lt;br> egovframework.com.sec.gmt &lt;br> egovframework.com.sec.rgm &lt;br> egovframework.com.sec.rmt &lt;br> egovframework.com.sec.security &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNEMPLYRSCRTYESTBS &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNAUTHORINFO &lt;br> COMTNROLES_HIERARCHY &lt;br> COMTNROLEINFO &lt;br> COMTNAUTHORROLERELATE &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHEMAILDSPTCHMANAGE&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>13&lt;/td>
 &lt;td>암호화/복호화&lt;/td>
 &lt;td>egovframework.com.sec.pki&lt;/td>
 &lt;td>egovframework-cryptodecrypto-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sec.pki&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>14&lt;/td>
 &lt;td>게시물통계&lt;/td>
 &lt;td>egovframework.com.sts.bst&lt;/td>
 &lt;td>egovframework-bbsstats-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sts.bst &lt;br> egovframework.com.sts.com &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNTMPLATINFO &lt;br> COMTSBBSSUMMARY &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNBBSMASTER &lt;br> COMTNBBS &lt;br> COMTNBLOG &lt;br> COMTNBLOGUSER&lt;/td>
 &lt;td>게시판의 부가기능 컴포넌트&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>15&lt;/td>
 &lt;td>사용자통계&lt;/td>
 &lt;td>egovframework.com.sts.ust&lt;/td>
 &lt;td>egovframework-userstats-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sts.ust &lt;br> egovframework.com.sts.com &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTSUSERSUMMARY &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER&lt;/td>
 &lt;td>사용자관리 부가기능&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>16&lt;/td>
 &lt;td>접속통계&lt;/td>
 &lt;td>egovframework.com.sts.cst&lt;/td>
 &lt;td>egovframework-conectstats-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sts.com &lt;br> egovframework.com.sts.cst &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uat.sso &lt;br> egovframework.com.uat.uia &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNLOGINLOG &lt;br> COMTSSYSLOGSUMMARY &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE&lt;/td>
 &lt;td>로그인의 부가기능&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>17&lt;/td>
 &lt;td>화면통계&lt;/td>
 &lt;td>egovframework.com.sts.sst&lt;/td>
 &lt;td>egovframework-scrinstats-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sts.com &lt;br> egovframework.com.sts.sst &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.sym.mnu.mcm &lt;br> egovframework.com.sym.mnu.mpm &lt;br> egovframework.com.sym.prm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNEMPLYRSCRTYESTBS &lt;br> COMTSWEBLOGSUMMARY &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNAUTHORINFOv &lt;br> COMTNPROGRMLIST &lt;br> COMTHPROGRMCHANGEDTLS &lt;br> COMTNMENUINFO &lt;br> COMTNSITEMAP &lt;br> COMTNMENUCREATDTLS &lt;br> COMTHEMAILDSPTCHMANAGE &lt;br> COMTNFILE&lt;/td>
 &lt;td>메뉴관리의 부가기능&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>18&lt;/td>
 &lt;td>보고서통계&lt;/td>
 &lt;td>egovframework.com.sts.rst&lt;/td>
 &lt;td>egovframework-reprtstats-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sts.rst &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNREPRTSTATS &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>19&lt;/td>
 &lt;td>자료이용현황통계&lt;/td>
 &lt;td>egovframework.com.sts.dst&lt;/td>
 &lt;td>egovframework-dtausestats-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sts.dst &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNDTAUSESTATS &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNBBSMASTER &lt;br> COMTNBBS &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>게시판의 부가기능&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>20 &lt;br> 21 &lt;br> 22 &lt;br> 23 &lt;br> 24 &lt;br> 25 &lt;br> 26&lt;/td>
 &lt;td>게시판 &lt;br> 게시판생성관리 &lt;br> 공지사항관리 &lt;br> 디자인템플릿 &lt;br> 유효게시판 &lt;br> 익명게시판 &lt;br> 자료실관리&lt;/td>
 &lt;td>egovframework.com.cop.bbs &lt;br> egovframework.com.cop.tpl&lt;/td>
 &lt;td>egovframework-bbsmanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.bbs &lt;br> egovframework.com.cop.cmt &lt;br> egovframework.com.cop.cmy &lt;br> egovframework.com.cop.com &lt;br> egovframework.com.cop.stf &lt;br> egovframework.com.cop.tpl &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim &lt;br> egovframework.com.utl.wed&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNTMPLATINFO &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNBBSMASTER &lt;br> COMTNBBSUSE &lt;br> COMTNBBS &lt;br> COMTNCMMNTY &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNCLUB &lt;br> COMTNBBSMASTEROPTN &lt;br> COMTNBLOG &lt;br> COMTNBLOGUSER&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>27&lt;/td>
 &lt;td>댓글관리 &lt;br> (게시판 포함)&lt;/td>
 &lt;td>egovframework.com.cop.cmt &lt;br> egovframework.com.cop.bbs &lt;br> egovframework.com.cop.tpl&lt;/td>
 &lt;td>egovframework-replymanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.bbs &lt;br> egovframework.com.cop.cmy &lt;br> egovframework.com.cop.com &lt;br> egovframework.com.cop.stf &lt;br> egovframework.com.cop.tpl &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim &lt;br> egovframework.com.utl.wed&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNTMPLATINFO &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNBBSMASTER &lt;br> COMTNBBSUSE &lt;br> COMTNBBS &lt;br> COMTNCMMNTY &lt;br> COMTNCOMMENT &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNCLUB &lt;br> COMTNBBSMASTEROPTN &lt;br> COMTNBLOG &lt;br> COMTNBLOGUSER&lt;/td>
 &lt;td>게시판의 부가기능&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>28&lt;/td>
 &lt;td>스크랩기능 &lt;br> (게시판 포함)&lt;/td>
 &lt;td>egovframework.com.cop.scp &lt;br> egovframework.com.cop.bbs &lt;br> egovframework.com.cop.tpl&lt;/td>
 &lt;td>egovframework-scrapmanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.bbs &lt;br> egovframework.com.cop.cmt &lt;br> egovframework.com.cop.cmy &lt;br> egovframework.com.cop.com &lt;br> egovframework.com.cop.scp &lt;br> egovframework.com.cop.stf &lt;br> egovframework.com.cop.tpl &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTNSCRAP &lt;br> COMTNTMPLATINFO &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNBBSMASTER &lt;br> COMTNBBSUSE &lt;br> COMTNBBS &lt;br> COMTNCMMNTY &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNCLUB &lt;br> COMTNBBSMASTEROPTN &lt;br> COMTNBLOG &lt;br> COMTNBLOGUSER&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>29&lt;/td>
 &lt;td>만족도조사 &lt;br> (게시판 포함)&lt;/td>
 &lt;td>egovframework.com.cop.stf &lt;br> egovframework.com.cop.bbs &lt;br> egovframework.com.cop.tpl&lt;/td>
 &lt;td>egovframework-satisfaction-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.bbs &lt;br> egovframework.com.cop.cmt &lt;br> egovframework.com.cop.cmy &lt;br> egovframework.com.cop.com &lt;br> egovframework.com.cop.stf &lt;br> egovframework.com.cop.tpl &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim &lt;br> egovframework.com.utl.wed&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNTMPLATINFO &lt;br> COMTNSTSFDG &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNBBSMASTER &lt;br> COMTNBBSUSE &lt;br> COMTNBBS &lt;br> COMTNCMMNTY &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNCLUB &lt;br> COMTNBBSMASTEROPTN &lt;br> COMTNBLOG &lt;br> COMTNBLOGUSER&lt;/td>
 &lt;td>게시판의 부가기능&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>30 &lt;br> 31 &lt;br> 32 &lt;br> 33&lt;/td>
 &lt;td>커뮤니티관리 &lt;br> 커뮤니티방명록 &lt;br> 커뮤니티사진첩 &lt;br> 블로그관리&lt;/td>
 &lt;td>egovframework.com.cop.cmy &lt;br> egovframework.com.cop.clb &lt;br> egovframework.com.cop.bbs &lt;br> egovframework.com.cop.tpl&lt;/td>
 &lt;td>egovframework-communityclub-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.bbs &lt;br> egovframework.com.cop.clb &lt;br> egovframework.com.cop.cmt &lt;br> egovframework.com.cop.cmy &lt;br> egovframework.com.cop.com &lt;br> egovframework.com.cop.stf &lt;br> egovframework.com.cop.tpl &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNTMPLATINFO &lt;br> COMTHCONFMHISTORY &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNBBSMASTER &lt;br> COMTNBBSUSE &lt;br> COMTNBBS &lt;br> COMTNCMMNTY &lt;br> COMTNCMMNTYUSER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNCLUB &lt;br> COMTNCLUBUSER &lt;br> COMTNBBSMASTEROPTN &lt;br> COMTNBLOG &lt;br> COMTNBLOGUSER&lt;/td>
 &lt;td>생성/소멸 관계임&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>게시판통합&lt;/td>
 &lt;td>egovframework.com.cop.bbs&lt;/td>
 &lt;td>egovframework-unitybbsmanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.bbs &lt;br> egovframework.com.cop.cmt &lt;br> egovframework.com.cop.cmy &lt;br> egovframework.com.cop.com &lt;br> egovframework.com.cop.stf &lt;br> egovframework.com.cop.tpl &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim &lt;br> egovframework.com.utl.wed&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNTMPLATINFO &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNBBSMASTER &lt;br> COMTNBBSUSE &lt;br> COMTNBBS &lt;br> COMTNCMMNTY &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNCLUB &lt;br> COMTNBBSMASTEROPTN &lt;br> COMTNBLOG &lt;br> COMTNBLOGUSER&lt;/td>
 &lt;td>게시판 통합 기능 제공&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>34&lt;/td>
 &lt;td>문자메시지서비스&lt;/td>
 &lt;td>egovframework.com.cop.sms&lt;/td>
 &lt;td>egovframework-smsinfo-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.sms&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNSMS &lt;br> COMTNSMSRECPTN&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>35 &lt;br> 36 &lt;br> 37 &lt;br> 38&lt;/td>
 &lt;td>부서일정관리 &lt;br> 일정관리 &lt;br> 일지관리 &lt;br> 전체일정&lt;/td>
 &lt;td>egovframework.com.cop.smt.sdm &lt;br> egovframework.com.cop.smt.sim &lt;br> egovframework.com.cop.smt.dsm&lt;/td>
 &lt;td>egovframework-schedulemanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.smt &lt;br> egovframework.com.cop.smt.dsm &lt;br> egovframework.com.cop.smt.sam &lt;br> egovframework.com.cop.smt.sdm &lt;br> egovframework.com.cop.smt.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTNMTGINFO &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNSCHDULINFO &lt;br> COMTNDIARYINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>39&lt;/td>
 &lt;td>메일연동 인터페이스&lt;/td>
 &lt;td>egovframework.com.cop.ems&lt;/td>
 &lt;td>egovframework-sndngmail-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.ems &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHEMAILDSPTCHMANAGE&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>40&lt;/td>
 &lt;td>명함관리&lt;/td>
 &lt;td>egovframework.com.cop.ncm&lt;/td>
 &lt;td>egovframework-namecardlistmanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.ncm &lt;br> egovframework.com.sym.ccm.zip&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCZIP &lt;br> COMTRDNMADRZIP &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNNCRD &lt;br> COMTNNCRDUSER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>41&lt;/td>
 &lt;td>주소록관리&lt;/td>
 &lt;td>egovframework.com.cop.adb&lt;/td>
 &lt;td>egovframework-addressbook-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.adb&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMTNNCRD &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNADBKMANAGE &lt;br> COMTNADBK&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>42&lt;/td>
 &lt;td>간부일정관리&lt;/td>
 &lt;td>egovframework.com.cop.smt.lsm&lt;/td>
 &lt;td>egovframework-leaderschdulmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.smt.lsm &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNLEADERSTTUS &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNLEADERSCHDUL &lt;br> COMTNLEADERSCHDULDE&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>43&lt;/td>
 &lt;td>부서업무함관리&lt;/td>
 &lt;td>egovframework.com.cop.smt.djm&lt;/td>
 &lt;td>egovframework-deptjobbxmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.smt.djm&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNDEPTJOB &lt;br> COMTNDEPTJOBBX &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>44&lt;/td>
 &lt;td>주간/월간보고관리&lt;/td>
 &lt;td>egovframework.com.cop.smt.wmr&lt;/td>
 &lt;td>egovframework-wikmnthngreprtmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.smt.wmr &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNWIKMNTHNGREPRT&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>45&lt;/td>
 &lt;td>메모/할일관리&lt;/td>
 &lt;td>egovframework.com.cop.smt.mtm&lt;/td>
 &lt;td>egovframework-memotodomanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.smt.mtm &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNMEMOTODO &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>46&lt;/td>
 &lt;td>메모보고&lt;/td>
 &lt;td>egovframework.com.cop.smt.mrm&lt;/td>
 &lt;td>egovframework-memoreprtmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.cop.smt.mrm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.wed&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNMEMOREPRT&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>47&lt;/td>
 &lt;td>약식결재&lt;/td>
 &lt;td>egovframework.com.uss.ion.ism&lt;/td>
 &lt;td>egovframework-infrmlsanctn-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.ism &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNINFRMLSANCTN &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>48 &lt;br> 49 &lt;br> 50&lt;/td>
 &lt;td>기업회원관리 &lt;br> 사용자관리 &lt;br> 회원관리&lt;/td>
 &lt;td>egovframework.com.uss.umt&lt;/td>
 &lt;td>egovframework-membermanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sec.rnc &lt;br> egovframework.com.sym.ccm.zip &lt;br> egovframework.com.uss.umt &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCZIP &lt;br> COMTRDNMADRZIP &lt;br> COMTNSTPLATINFO &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHEMPLYRINFOCHANGEDTLS&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>51&lt;/td>
 &lt;td>출퇴근관리&lt;/td>
 &lt;td>egovframework.com.uss.cmt&lt;/td>
 &lt;td>egovframework-cmtmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.cmt &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHEMAILDSPTCHMANAGE &lt;br> COMTNGNRLMBER &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMTNAUTHORINFO &lt;br> COMTNROLES_HIERARCHY &lt;br> COMTNROLEINFO &lt;br> COMTNAUTHORROLERELATE &lt;br> COMTNCOMMUTE&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>52&lt;/td>
 &lt;td>마이페이지&lt;/td>
 &lt;td>egovframework.com.uss.mpe&lt;/td>
 &lt;td>egovframework-mypage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.mpe&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNINDVDLPGECNTNTS &lt;br> COMTNINDVDLPGEESTBS &lt;br> COMTNCNTNTSLIST&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>53&lt;/td>
 &lt;td>약관관리&lt;/td>
 &lt;td>egovframework.com.uss.sam.stp&lt;/td>
 &lt;td>egovframework-stipulationmanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.sam.stp&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNSTPLATINFO &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>54&lt;/td>
 &lt;td>저작권보호정책&lt;/td>
 &lt;td>egovframework.com.uss.sam.cpy&lt;/td>
 &lt;td>egovframework-rightmanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.sam.cpy&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNCPYRHTINFO &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>55&lt;/td>
 &lt;td>개인정보보호정책확인&lt;/td>
 &lt;td>egovframework.com.uss.sam.ipm&lt;/td>
 &lt;td>egovframework-privacypolicy-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.sam.ipm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.wed &lt;br> egovframework.com.utl.wed.fiter&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNINDVDLINFOPOLICY &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>56&lt;/td>
 &lt;td>도움말&lt;/td>
 &lt;td>egovframework.com.uss.olh.hpc&lt;/td>
 &lt;td>egovframework-onlinehelp-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.olh.hpc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNHPCMINFO &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>57&lt;/td>
 &lt;td>용어사전&lt;/td>
 &lt;td>egovframework.com.uss.olh.wor&lt;/td>
 &lt;td>egovframework-wordbook-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.olh.wor&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNWORDDICARYINFO &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>58&lt;/td>
 &lt;td>FAQ관리&lt;/td>
 &lt;td>egovframework.com.uss.olh.faq&lt;/td>
 &lt;td>egovframework-faq-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.olh.faq&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNFAQINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>59&lt;/td>
 &lt;td>Q&amp;amp;A관리&lt;/td>
 &lt;td>egovframework.com.uss.olh.qna&lt;/td>
 &lt;td>egovframework-qna-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.olh.qna &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNQAINFO &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>60&lt;/td>
 &lt;td>행정전문용어사전관리&lt;/td>
 &lt;td>egovframework.com.uss.olh.awm&lt;/td>
 &lt;td>egovframework-administrationdic-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.olh.awm&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNADMINISTRATIONWORD &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>61&lt;/td>
 &lt;td>온라인매뉴얼&lt;/td>
 &lt;td>egovframework.com.uss.olh.omm&lt;/td>
 &lt;td>egovframework-onlinemanual-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.olh.omm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.wed&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNONLINEMANUAL &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>62&lt;/td>
 &lt;td>상담관리&lt;/td>
 &lt;td>egovframework.com.uss.olp.cns&lt;/td>
 &lt;td>egovframework-onlineconsultation-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.olp.cns &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNCNSLTLIST &lt;br> COMTNQAINFO &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>63 &lt;br> 64 &lt;br> 65 &lt;br> 66 &lt;br> 67 &lt;br> 68&lt;/td>
 &lt;td>설문관리 &lt;br> 설문조사 &lt;br> 설문템플릿관리 &lt;br> 응답자관리 &lt;br> 질문관리 &lt;br> 항목관리&lt;/td>
 &lt;td>egovframework.com.uss.olp.qmc &lt;br> egovframework.com.uss.olp.qri &lt;br> egovframework.com.uss.olp.qtm &lt;br> egovframework.com.uss.olp.qrm &lt;br> egovframework.com.uss.olp.qqm &lt;br> egovframework.com.uss.olp.qim&lt;/td>
 &lt;td>egovframework-onlineparticipation-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.olp.qim &lt;br> egovframework.com.uss.olp.qmc &lt;br> egovframework.com.uss.olp.qqm &lt;br> egovframework.com.uss.olp.qri &lt;br> egovframework.com.uss.olp.qrm &lt;br> egovframework.com.uss.olp.qtm&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNQUSTNRTMPLAT &lt;br> COMTNQESTNRINFO &lt;br> COMTNQUSTNRRESPONDINFO &lt;br> COMTNQUSTNRQESITM &lt;br> COMTNQUSTNRRSPNSRESULT &lt;br> COMTNQUSTNRIEM&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>69&lt;/td>
 &lt;td>회의관리&lt;/td>
 &lt;td>egovframework.com.uss.olp.mgt&lt;/td>
 &lt;td>egovframework-meetmanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.olp.mgt&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTNMTGINFO &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>70&lt;/td>
 &lt;td>온라인poll관리&lt;/td>
 &lt;td>egovframework.com.uss.olp.opm&lt;/td>
 &lt;td>egovframework-onlinepoll-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.olp.opm &lt;br> egovframework.com.uss.olp.opp &lt;br> egovframework.com.uss.olp.opr &lt;br> egovframework.com.uss.olp.opr &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNONLINEPOLLMANAGE &lt;br> COMTNONLINEPOLLIEM &lt;br> COMTNONLINEPOLLRESULT&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>71&lt;/td>
 &lt;td>뉴스관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.nws&lt;/td>
 &lt;td>egovframework-news-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.nws&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNNEWSINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>72&lt;/td>
 &lt;td>사이트관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.sit&lt;/td>
 &lt;td>egovframework-sitemanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.sit&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNSITELIST &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>74&lt;/td>
 &lt;td>추천사이트관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.rec&lt;/td>
 &lt;td>egovframework-recommendedsitemanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.rec&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTNRECOMENDSITEINFO &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>75&lt;/td>
 &lt;td>행사/이벤트/캠페인&lt;/td>
 &lt;td>egovframework.com.uss.ion.ecc&lt;/td>
 &lt;td>egovframework-infomationoffer-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.ecc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNEVENTINFO &lt;br> COMTNEXTRLHRINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>76&lt;/td>
 &lt;td>팝업창관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.pwm&lt;/td>
 &lt;td>egovframework-popupwindow-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.pwm&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTNPOPUPMANAGE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>77&lt;/td>
 &lt;td>정보알림이&lt;/td>
 &lt;td>egovframework.com.uss.ion.noi&lt;/td>
 &lt;td>egovframework-notification-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.noi&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNNTFCINFO &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>78&lt;/td>
 &lt;td>배너관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.bnr&lt;/td>
 &lt;td>egovframework-banner-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.bnr&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNBANNER &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>79&lt;/td>
 &lt;td>로그인화면이미지관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.lsi&lt;/td>
 &lt;td>egovframework-loginimage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.lsi&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNLOGINSCRINIMAGE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>80&lt;/td>
 &lt;td>최근검색어 조회&lt;/td>
 &lt;td>egovframework.com.uss.ion.rsm&lt;/td>
 &lt;td>egovframework-currentsearchword-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.rsm&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNRECENTSRCHWRDMANAGE &lt;br> COMTNRECENTSRCHWRD&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>81&lt;/td>
 &lt;td>메인이미지관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.msi&lt;/td>
 &lt;td>egovframework-mainimage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.msi&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNMAINIMAGE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>82&lt;/td>
 &lt;td>통합링크관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.ulm&lt;/td>
 &lt;td>egovframework-totallink-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.ulm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.wed&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNUNITYLINK &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>83&lt;/td>
 &lt;td>사용자부재관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.uas&lt;/td>
 &lt;td>egovframework-userabsence-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.uas&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNUSERABSNCE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>84&lt;/td>
 &lt;td>인터넷서비스안내및관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.isg&lt;/td>
 &lt;td>egovframework-serviceguide-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.isg &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.wed&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNINTNETSVC &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>85&lt;/td>
 &lt;td>Wiki기능&lt;/td>
 &lt;td>egovframework.com.uss.ion.wik.bmk&lt;/td>
 &lt;td>egovframework-wikibkmk-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.wik.bmk&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNTWITTER &lt;br> COMTNWIKIBKMK&lt;/td>
 &lt;td>소스받아서 설치하며, &lt;br> 이패키지는 위키북마크임&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>86&lt;/td>
 &lt;td>RSS태그관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.rss&lt;/td>
 &lt;td>egovframework-rssmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.rsn &lt;br> egovframework.com.uss.ion.rss&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRSS &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>87&lt;/td>
 &lt;td>Twitter연동&lt;/td>
 &lt;td>egovframework.com.uss.ion.tir&lt;/td>
 &lt;td>egovframework-twitterlinkage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.tir&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNTWITTER&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>88&lt;/td>
 &lt;td>쪽지관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.ntm&lt;/td>
 &lt;td>egovframework-notemanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.ntm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.wed&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNNOTE &lt;br> COMTNNOTETRNSMIT &lt;br> COMTNNOTERECPTN&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>89&lt;/td>
 &lt;td>받은쪽지함관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.ntr&lt;/td>
 &lt;td>egovframework-noterecptnmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.ntr &lt;br> egovframework.com.uss.ion.nts&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNNOTE &lt;br> COMTNNOTETRNSMIT &lt;br> COMTNNOTERECPTN&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>90&lt;/td>
 &lt;td>보낸쪽지함관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.nts&lt;/td>
 &lt;td>egovframework-notetrnsmitmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.nts&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNNOTE &lt;br> COMTNNOTETRNSMIT &lt;br> COMTNNOTERECPTN&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>91 &lt;br> 92&lt;/td>
 &lt;td>회의실관리 &lt;br> 회의실 예약 관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.mtg&lt;/td>
 &lt;td>egovframework-mtgplacemanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.mtg &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNMTGPLACEMANAGE &lt;br> COMTNFXTRSMANAGE &lt;br> COMTNMTGPLACEFXTRS &lt;br> COMTNMTGPLACERESVE&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>93&lt;/td>
 &lt;td>직원경조사관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.ctn&lt;/td>
 &lt;td>egovframework-ctsnnmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.ctn &lt;br> egovframework.com.uss.ion.ism &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNCTSNNMANAGE &lt;br> COMTNINFRMLSANCTN &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>94&lt;/td>
 &lt;td>휴가관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.vct&lt;/td>
 &lt;td>egovframework-vcatnmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.ism &lt;br> egovframework.com.uss.ion.vct &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNINFRMLSANCTN &lt;br> COMTNVCATNMANAGE &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNTWITTER &lt;br> COMTNINDVDLYRYCMANAGE&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>95&lt;/td>
 &lt;td>당직관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.bnt&lt;/td>
 &lt;td>egovframework-bndtmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.uss.ion.bnt &lt;br> egovframework.com.uss.ion.ism &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>96&lt;/td>
 &lt;td>포상관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.rwd&lt;/td>
 &lt;td>egovframework-rwardmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.ism &lt;br> egovframework.com.uss.ion.rwd &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRWARDMANAGE &lt;br> COMTNINFRMLSANCTN &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>97&lt;/td>
 &lt;td>기념일관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.ans&lt;/td>
 &lt;td>egovframework-anniversarymanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.ans &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNANNVRSRYMANAGE &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>98 &lt;br> 99&lt;/td>
 &lt;td>행사신청관리 &lt;br> 행사접수관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.evt&lt;/td>
 &lt;td>egovframework-eventmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.evt &lt;br> egovframework.com.uss.ion.ism &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNINFRMLSANCTN &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNEVENTMANAGE &lt;br> COMTNEVENTATDRN&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>100&lt;/td>
 &lt;td>약도관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.rmm&lt;/td>
 &lt;td>egovframework-roughmap-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.ans &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNANNVRSRYMANAGE &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>101&lt;/td>
 &lt;td>페이스북 연동&lt;/td>
 &lt;td>egovframework.com.uss.ion.fbk&lt;/td>
 &lt;td>egovframework-facebook-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.ans &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNANNVRSRYMANAGE &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>102&lt;/td>
 &lt;td>개인연차 관리&lt;/td>
 &lt;td>egovframework.com.uss.ion.yrc&lt;/td>
 &lt;td>egovframework-indvdlyrycmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.uss.ion.ans &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNANNVRSRYMANAGE &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>103 &lt;br> 104 &lt;br> 105&lt;/td>
 &lt;td>공통분류코드 &lt;br> 공통상세코드 &lt;br> 공통코드&lt;/td>
 &lt;td>egovframework.com.sym.ccm.ccc &lt;br> egovframework.com.sym.ccm.cde &lt;br> egovframework.com.sym.ccm.cde &lt;br> egovframework.com.sym.ccm.cda&lt;/td>
 &lt;td>egovframework-commoncode-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.ccm.cca &lt;br> egovframework.com.sym.ccm.ccc &lt;br> egovframework.com.sym.ccm.cde&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>106 &lt;br> 107&lt;/td>
 &lt;td>우편번호주소찾기 &lt;br> 우편번호관리&lt;/td>
 &lt;td>egovframework.com.sym.ccm.zip&lt;/td>
 &lt;td>egovframework-zipcodemanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.ccm.zip&lt;/td>
 &lt;td>COMTCZIP &lt;br> COMTRDNMADRZIP &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>108&lt;/td>
 &lt;td>행정코드관리&lt;/td>
 &lt;td>egovframework.com.sym.ccm.acr&lt;/td>
 &lt;td>egovframework-admcdmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.sym.ccm.acr &lt;br> egovframework.com.sym.ccm.adc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCADMINISTCODE &lt;br> COMTCADMINISTCODERECPTNLOG &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>109&lt;/td>
 &lt;td>기관코드수신&lt;/td>
 &lt;td>egovframework.com.sym.ccm.icr&lt;/td>
 &lt;td>egovframework-organcodereceive-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.ccm.icr&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNINSTTCODE &lt;br> COMTNINSTTCODERECPTNLOG&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>110&lt;/td>
 &lt;td>도로명 주소연계&lt;/td>
 &lt;td>egovframework.com.sym.adr&lt;/td>
 &lt;td>egovframework-adresscntc-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.ccm.icr&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNINSTTCODE &lt;br> COMTNINSTTCODERECPTNLOG&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>111&lt;/td>
 &lt;td>로그관리&lt;/td>
 &lt;td>egovframework.com.sym.log.lgm&lt;/td>
 &lt;td>egovframework-syslogmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.log.lgm&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTNSYSLOG &lt;br> COMTSSYSLOGSUMMARY &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>112&lt;/td>
 &lt;td>사용로그관리&lt;/td>
 &lt;td>egovframework.com.sym.log.ulg&lt;/td>
 &lt;td>egovframework-userlogmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.log.ulg&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTNSYSLOG &lt;br> COMTNUSERLOG &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>113&lt;/td>
 &lt;td>송/수신로그관리&lt;/td>
 &lt;td>egovframework.com.sym.log.tlg&lt;/td>
 &lt;td>egovframework-trsmrcvlogmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.sym.log.tlg &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim &lt;br> egovframework.com.utl.sys.trm&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNCNTCINSTT &lt;br> COMTNCNTCSERVICE &lt;br> COMTNCNTCSYSTEM &lt;br> COMTNSYSTEMCNTC &lt;br> COMTNTRSMRCVMNTRNG &lt;br> COMTNRESTDE &lt;br> COMTNTRSMRCVLOG &lt;br> COMTSTRSMRCVLOGSUMMARY &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHTRSMRCVMNTRNGLOGINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>114&lt;/td>
 &lt;td>시스템이력관리&lt;/td>
 &lt;td>egovframework.com.sym.log.slg&lt;/td>
 &lt;td>egovframework-syshistorymanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.sym.log.slg &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTHSYSHIST &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>115&lt;/td>
 &lt;td>웹로그관리&lt;/td>
 &lt;td>egovframework.com.sym.log.wlg&lt;/td>
 &lt;td>egovframework-weblogmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.log.wlg&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTNWEBLOG &lt;br> COMTSWEBLOGSUMMARY &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>116&lt;/td>
 &lt;td>접속로그관리&lt;/td>
 &lt;td>egovframework.com.sym.log.clg&lt;/td>
 &lt;td>egovframework-loginlogmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.log.clg&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTNLOGINLOG &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHEMAILDSPTCHMANAGE&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>117&lt;/td>
 &lt;td>개인정보 조회 로그&lt;/td>
 &lt;td>egovframework.com.sym.log.plg&lt;/td>
 &lt;td>egovframework-privacylogmanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.log.clg&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTNLOGINLOG &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHEMAILDSPTCHMANAGE&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>118 &lt;br> 119 &lt;br> 73 &lt;br> 120 &lt;br> 121 &lt;br> 152 &lt;br> 153&lt;/td>
 &lt;td>메뉴관리 &lt;br> 메뉴생성관리 &lt;br> 사이트맵 &lt;br> 바로가기메뉴관리 &lt;br> 프로그램관리 &lt;br> 메인메뉴 &lt;br> 트리메뉴&lt;/td>
 &lt;td>egovframework.com.sym.mnu.mpm &lt;br> egovframework.com.sym.mnu.mcm &lt;br> egovframework.com.sym.mmu.stm &lt;br> egovframework.com.sym.mnu.bmm&lt;/td>
 &lt;td>egovframework-menumanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.sym.ccm.zip &lt;br> egovframework.com.sym.mnu &lt;br> egovframework.com.sym.mnu.bmm &lt;br> egovframework.com.sym.mnu.mcm &lt;br> egovframework.com.sym.mnu.mpm &lt;br> egovframework.com.sym.mnu.stm &lt;br> egovframework.com.sym.prm &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTNRESTDE &lt;br> COMTCZIP &lt;br> COMTRDNMADRZIP &lt;br> COMTNBKMKMENUMANAGERESULT &lt;br> COMTNEMPLYRSCRTYESTBS &lt;br> COMTNSITEMAP &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNAUTHORINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNPROGRMLIST &lt;br> COMTHPROGRMCHANGEDTLS &lt;br> COMTNMENUINFO &lt;br> COMTNSITEMAP &lt;br> COMTNMENUCREATDTLS &lt;br> COMTHEMAILDSPTCHMANAGE&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>122 &lt;br> 123 &lt;br> 124&lt;/td>
 &lt;td>배치작업관리 &lt;br> 배치결과관리 &lt;br> 스케줄처리&lt;/td>
 &lt;td>egovframework.com.sym.bat&lt;/td>
 &lt;td>egovframework-batchmanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.bat &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNBATCHOPERT &lt;br> COMTNBATCHRESULT &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNBATCHSCHDUL &lt;br> COMTNBATCHSCHDULDFK&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>125&lt;/td>
 &lt;td>백업관리&lt;/td>
 &lt;td>egovframework.com.sym.sym.bak&lt;/td>
 &lt;td>egovframework-backupmanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.sym.sym.bak &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sim&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNBACKUPRESULT &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNBACKUPOPERT &lt;br> COMTNBACKUPSCHDULDFK&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>126&lt;/td>
 &lt;td>네트워크관리&lt;/td>
 &lt;td>egovframework.com.sym.sym.nwk&lt;/td>
 &lt;td>egovframework-ntwrk-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.sym.sym.nwk &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNNTWRKINFO &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>127&lt;/td>
 &lt;td>서버정보관리&lt;/td>
 &lt;td>egovframework.com.sym.sym.srv&lt;/td>
 &lt;td>egovframework-server-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.sym.sym.srv &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNSERVEREQPMNINFO &lt;br> COMTNSYNCHRNSERVERINFO &lt;br> COMTNSERVERINFO &lt;br> COMTNSERVEREQPMNRELATE&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>128&lt;/td>
 &lt;td>장애신청관리&lt;/td>
 &lt;td>egovframework.com.sym.tbm.tbr&lt;/td>
 &lt;td>egovframework-troblreqst-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.sym.tbm.tbr &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNTROBLINFO &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>129&lt;/td>
 &lt;td>장애처리결과관리&lt;/td>
 &lt;td>egovframework.com.sym.tbm.tbp&lt;/td>
 &lt;td>egovframework-troblprocess-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.sym.tbm.tbp &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNTROBLINFO &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>130 &lt;br> 131 &lt;br> 132 &lt;br> 133&lt;/td>
 &lt;td>시스템연계관리 &lt;br> 연계현황관리 &lt;br> 연계메시지관리 &lt;br> 연계기관관리&lt;/td>
 &lt;td>egovframework.com.ssi.syi.sim &lt;br> egovframework.com.ssi.syi.ist &lt;br> egovframework.com.ssi.syi.ims &lt;br> egovframework.com.ssi.syi.iis&lt;/td>
 &lt;td>egovframework-interfacemanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.ssi.syi &lt;br> egovframework.com.ssi.syi.iis &lt;br> egovframework.com.ssi.syi.ims &lt;br> egovframework.com.ssi.syi.ist &lt;br> egovframework.com.ssi.syi.sim &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNCNTCINSTT &lt;br> COMTNCNTCSERVICE &lt;br> COMTNCNTCSYSTEM &lt;br> COMTNSYSTEMCNTC &lt;br> COMTNTRSMRCVLOG &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNCNTCMESSAGE &lt;br> COMTNCNTCMESSAGEITEM&lt;/td>
 &lt;td>* 생성/소멸 관계임 &lt;br> * 업무프로세스 완결성&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>131 &lt;br> 132 &lt;br> 133&lt;/td>
 &lt;td>연계현황관리 &lt;br> 연계메시지관리 &lt;br> 연계기관관리&lt;/td>
 &lt;td>egovframework.com.ssi.syi.ist &lt;br> egovframework.com.ssi.syi.ims &lt;br> egovframework.com.ssi.syi.iis&lt;/td>
 &lt;td>egovframework-interfacemanagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.ssi.syi &lt;br> egovframework.com.ssi.syi.iis &lt;br> egovframework.com.ssi.syi.ims &lt;br> egovframework.com.ssi.syi.ist &lt;br> egovframework.com.ssi.syi.sim &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNCNTCINSTT &lt;br> COMTNCNTCSERVICE &lt;br> COMTNCNTCSYSTEM &lt;br> COMTNSYSTEMCNTC &lt;br> COMTNTRSMRCVLOG &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNCNTCMESSAGE &lt;br> COMTNCNTCMESSAGEITEM&lt;/td>
 &lt;td>* 생성/소멸 관계임 &lt;br> * 업무프로세스 완결성&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>135&lt;/td>
 &lt;td>개인지식관리&lt;/td>
 &lt;td>egovframework.com.dam.per&lt;/td>
 &lt;td>egovframework-knoPersonal-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.dam.per &lt;br> egovframework.com.dam.map.mat &lt;br> egovframework.com.dam.map.tea &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNDAMMAPTEAM &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNDAMKNOIFM &lt;br> COMTNDAMMAPKNO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>136&lt;/td>
 &lt;td>지식맵관리&lt;/td>
 &lt;td>egovframework.com.dam.map&lt;/td>
 &lt;td>egovframework-knomap-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.dam.map.mat &lt;br> egovframework.com.dam.map.tea &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNDAMMAPTEAM &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNDAMMAPKNO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>137&lt;/td>
 &lt;td>지식전문가관리&lt;/td>
 &lt;td>egovframework.com.dam.spe.spe&lt;/td>
 &lt;td>egovframework-knoSpecialist-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.dam.spe.spe &lt;br> egovframework.com.dam.map.mat &lt;br> egovframework.com.dam.map.tea &lt;br> egovframework.com.sym.cal &lt;br> egovframework.com.cop.com&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNDAMMAPTEAM &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNGNRLMBER &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNDAMMAPKNO &lt;br> COMTNDAMPRO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>138&lt;/td>
 &lt;td>지식정보관리&lt;/td>
 &lt;td>egovframework.com.dam.mgm&lt;/td>
 &lt;td>egovframework-knoManagement-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.dam.mgm &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNEMPLYRSCRTYESTBS &lt;br> COMTNDAMMAPTEAM &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNDAMKNOIFM &lt;br> COMTNDAMMAPKNO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>139&lt;/td>
 &lt;td>지식평가관리&lt;/td>
 &lt;td>egovframework.com.dam.app&lt;/td>
 &lt;td>egovframework-knoAppraisal-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.dam.app &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNDAMMAPTEAM &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNDAMKNOIFM &lt;br> COMTNDAMMAPKNO &lt;br> COMTNDAMPRO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>지식정보요청제공관리&lt;/td>
 &lt;td>egovframework.com.dam.spe.req&lt;/td>
 &lt;td>egovframework-requestOffer-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.dam.spe.req &lt;br> egovframework.com.dam.map.mat &lt;br> egovframework.com.dam.map.tea &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNDAMMAPTEAM &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNDAMKNOIFM &lt;br> COMTNDAMCALRES &lt;br> COMTNDAMMAPKNO &lt;br> COMTNDAMPRO&lt;/td>
 &lt;td>지식맵관리, 지식정보제공 통합&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>140 &lt;br> 141 &lt;br> 142&lt;/td>
 &lt;td>일반달력 &lt;br> 행정달력 &lt;br> 휴일관리&lt;/td>
 &lt;td>egovframework.com.sym.cal&lt;/td>
 &lt;td>egovframework-calrestdemanage-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>143 &lt;br> 144 &lt;br> 145 &lt;br> 146 &lt;br> 150 &lt;br> 151&lt;/td>
 &lt;td>경고메시지 &lt;br> 에러메시지 &lt;br> 정보메시지 &lt;br> 확인메시지 &lt;br> 세션관리 &lt;br> 쿠키관리&lt;/td>
 &lt;td>egovframework.com.utl.cas&lt;/td>
 &lt;td>egovframework-msgsetcok-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.cas&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>147 &lt;br> 148 &lt;br> 149&lt;/td>
 &lt;td>화면인쇄 &lt;br> 프린터상태확인 &lt;br> 전자관인출력&lt;/td>
 &lt;td>egovframework.com.utl.pao&lt;/td>
 &lt;td>egovframework-prntngoutpt-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.utl.pao&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>154&lt;/td>
 &lt;td>웹에디터&lt;/td>
 &lt;td>egovframework.com.utl.wed&lt;/td>
 &lt;td>egovframework-webeditor-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.utl.wed &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>155 &lt;br> 156 &lt;br> 157 &lt;br> 158 &lt;br> 159 &lt;br> 160 &lt;br> 161 &lt;br> 162 &lt;br> 163 &lt;br> 164 &lt;br> 165 &lt;br> 166 &lt;br> 167 &lt;br> 168 &lt;br> 169 &lt;br> 170 &lt;br> 171 &lt;br> 172 &lt;br> 173 &lt;br> 174 &lt;br> 175 &lt;br> 176 &lt;br> 177 &lt;br> 229&lt;/td>
 &lt;td>날짜/시간/요일계산 &lt;br> 날짜/시간/요일변환 &lt;br> 날짜/시간/요일유효성체크 &lt;br> 날짜/시간/요일포맷변경 &lt;br> 랜덤날짜구하기 &lt;br> 랜덤문자열구하기 &lt;br> 랜덤숫자구하기 &lt;br> 문자열검색 &lt;br> 문자열변환 &lt;br> 문자열유효성체크 &lt;br> 번호유효성체크 &lt;br> 문자열치환 &lt;br> 숫자검색 &lt;br> 숫자변환 &lt;br> 숫자유효성체크 &lt;br> 숫자치환 &lt;br> 포맷유효성체크 &lt;br> 실수/정수/음수체크 &lt;br> 양력/음력변환 &lt;br> 인코딩/디코딩 &lt;br> 특수문자열처리 &lt;br> 환율계산 &lt;br> TIMESTAMP값구하기 &lt;br> 로그패턴분석&lt;/td>
 &lt;td>egovframework.com.utl.fcc&lt;/td>
 &lt;td>egovframework-utility-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.utl.fcc&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>178&lt;/td>
 &lt;td>단위계산&lt;/td>
 &lt;td>egovframe.com.utl.fda.ucc&lt;/td>
 &lt;td>egovframework-unitcalc-4.3.0.zip&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>179 &lt;br> 180 &lt;br> 181 &lt;br> 182 &lt;br> 183 &lt;br> 184 &lt;br> 185 &lt;br> 186 &lt;br> 187 &lt;br> 188 &lt;br> 189 &lt;br> 190 &lt;br> 191 &lt;br> 192 &lt;br> 193 &lt;br> 194 &lt;br> 195 &lt;br> 196 &lt;br> 197 &lt;br> 198 &lt;br> 199 &lt;br> 200 &lt;br> 201 &lt;br> 202 &lt;br> 203 &lt;br> 204 &lt;br> 205 &lt;br> 206 &lt;br> 207 &lt;br> 208 &lt;br> 209 &lt;br> 210 &lt;br> 211 &lt;br> 212 &lt;br> 213 &lt;br> 214 &lt;br> 216 &lt;br> 217&lt;/td>
 &lt;td>네트워크상태체크 &lt;br> 네트워크정보확인 &lt;br> 디렉토리감시 &lt;br> 디레토리권한체크 &lt;br> 디렉토리복사 &lt;br> 디렉토리삭제 &lt;br> 디렉토리생성 &lt;br> 디렉토리속성정보체크 &lt;br> 디렉토리압축/해제 &lt;br> 디렉토리이동 &lt;br> 디렉토리일자체크 &lt;br> 디렉토리존재체크 &lt;br> 디스크속성정보체크 &lt;br> 디스크유효용량체크 &lt;br> 디스크존재체크 &lt;br> 서버정보확인 &lt;br> 시스템정보확인 &lt;br> 유효메모리체크 &lt;br> 클라이언트정보확인 &lt;br> 파일권한체크 &lt;br> 파일다운로드 &lt;br> 파일변환 &lt;br> 파일보안 &lt;br> 파일복사 &lt;br> 파일비교 &lt;br> 파일삭제 &lt;br> 파일생성 &lt;br> 파일속성정보체크 &lt;br> 파일송/수신 &lt;br> 파일압축/해제 &lt;br> 파일업로드 &lt;br> 파일이동 &lt;br> 파일일자체크 &lt;br> 파일존재체크 &lt;br> 파일파싱 &lt;br> 프로세스ID확인 &lt;br> XML데이터조립 &lt;br> XML데이터파싱&lt;/td>
 &lt;td>egovframework.com.utl.sim&lt;/td>
 &lt;td>egovframework-system-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.utl.sim &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>215&lt;/td>
 &lt;td>프로퍼티&lt;/td>
 &lt;td>egovframework.com.cmm&lt;/td>
 &lt;td>egovframework-common-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>218&lt;/td>
 &lt;td>송수신모니터링&lt;/td>
 &lt;td>egovframework.com.utl.sys.trm&lt;/td>
 &lt;td>egovframework-trvrcvmonitoring-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sys.trm &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNCNTCINSTT &lt;br> COMTNCNTCSERVICE &lt;br> COMTNCNTCSYSTEM &lt;br> COMTNSYSTEMCNTC &lt;br> COMTNTRSMRCVMNTRNG &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHTRSMRCVMNTRNGLOGINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>219&lt;/td>
 &lt;td>DB서비스모니터링&lt;/td>
 &lt;td>egovframework.com.utl.sys.dbm&lt;/td>
 &lt;td>egovframework-dbmonitoring-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sys.dbm &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNDBMNTRNG &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHTRSMRCVMNTRNGLOGINFO &lt;br> COMTHDBMNTRNGLOGINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>220&lt;/td>
 &lt;td>HTTP서비스모니터링&lt;/td>
 &lt;td>egovframework.com.utl.sys.htm&lt;/td>
 &lt;td>egovframework-httpMon-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sys.htm &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNHTTPMON &lt;br> COMTHTRSMRCVMNTRNGLOGINFO &lt;br> COMTHDBMNTRNGLOGINFO &lt;br> COMTHHTTPMONLOGINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>221&lt;/td>
 &lt;td>프로세스모니터링&lt;/td>
 &lt;td>egovframework.com.utl.sys.prm&lt;/td>
 &lt;td>egovframework-processMon-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sys.prm &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHTRSMRCVMNTRNGLOGINFO &lt;br> COMTHDBMNTRNGLOGINFO &lt;br> COMTNPROCESSMON &lt;br> COMTNPROCESSMONLOGINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>222&lt;/td>
 &lt;td>네트워크서비스모니터링&lt;/td>
 &lt;td>egovframework.com.utl.sys.nsm&lt;/td>
 &lt;td>egovframework-ntwrksvcmonitoring-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sys.nsm &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHTRSMRCVMNTRNGLOGINFO &lt;br> COMTHDBMNTRNGLOGINFO &lt;br> COMTNNTWRKSVCMNTRNG &lt;br> COMTNNTWRKSVCMNTRNGLOGINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>223&lt;/td>
 &lt;td>파일시스템모니터링&lt;/td>
 &lt;td>egovframework.com.utl.sys.fsm&lt;/td>
 &lt;td>egovframework-filesysmonitoring-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sys.fsm &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHTRSMRCVMNTRNGLOGINFO &lt;br> COMTHDBMNTRNGLOGINFO &lt;br> COMTNFILESYSMNTRNG &lt;br> COMTNFILESYSMNTRNGLOGINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>224&lt;/td>
 &lt;td>프록시서비스&lt;/td>
 &lt;td>egovframework.com.utl.sys.pxy&lt;/td>
 &lt;td>egovframework-proxysvc-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sys.pxy &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHTRSMRCVMNTRNGLOGINFO &lt;br> COMTHDBMNTRNGLOGINFO &lt;br> COMTNPROXYINFO &lt;br> COMTNPROXYLOGINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>225&lt;/td>
 &lt;td>파일동기화&lt;/td>
 &lt;td>egovframework.com.utl.sys.ssy&lt;/td>
 &lt;td>egovframework-synchrnserver-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.sys.ssy&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNSYNCHRNSERVERINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>226&lt;/td>
 &lt;td>로그인세션정보체크&lt;/td>
 &lt;td>egovframework.com.utl.sys.rsc&lt;/td>
 &lt;td>egovframework-checkloginsession-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.sys.rsc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>227&lt;/td>
 &lt;td>서버자원모니터링&lt;/td>
 &lt;td>egovframework.com.utl.sys.srm&lt;/td>
 &lt;td>egovframework-serverresrcemntrng-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.fcc &lt;br> egovframework.com.utl.sys.srm &lt;br> egovframework.com.cop.sms &lt;br> egovframework.com.sym.cal&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTNRESTDE &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNGNRLMBER &lt;br> COMTNORGNZTINFO &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMVNUSERMASTER &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTNSMS &lt;br> COMTNSMSRECPTN &lt;br> COMTHTRSMRCVMNTRNGLOGINFO &lt;br> COMTHDBMNTRNGLOGINFO &lt;br> COMTNSERVEREQPMNINFO &lt;br> COMTNSYNCHRNSERVERINFO &lt;br> COMTNSERVERINFO &lt;br> COMTNSERVEREQPMNRELATE &lt;br> COMTNSERVERRESRCELOGINFO&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>228&lt;/td>
 &lt;td>웹표준검사&lt;/td>
 &lt;td>egovframework.com.utl.sys.wsi&lt;/td>
 &lt;td>egovframework-webStandard-4.3.0.zip&lt;/td>
 &lt;td>egovframework.utl.sys.wsi&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>jsp 파일만으로 구성됨&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>231&lt;/td>
 &lt;td>중복로그인 방지&lt;/td>
 &lt;td>egovframework.com.utl.slm&lt;/td>
 &lt;td>egovframework-multiLoginpreventor-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.utl.slm&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>240&lt;/td>
 &lt;td>OAuth&lt;/td>
 &lt;td>egovframework.com.ext.oauth&lt;/td>
 &lt;td>egovframework-oauth-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.ext.oauth &lt;br> egovframework.com.utl.sim &lt;br> egovframework.com.sec.rnc &lt;br> egovframework.com.sym.ccm.zip &lt;br> egovframework.com.uss.ion.fbk &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHEMAILDSPTCHMANAGE &lt;br> COMTNGNRLMBER &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMTNAUTHORINFO &lt;br> COMTNROLES_HIERARCHY &lt;br> COMTNROLEINFO &lt;br> COMTNAUTHORROLERELATE &lt;br> COMVNUSERMASTER &lt;br> COMTECOPSEQ &lt;br> COMTNSTPLATINFO &lt;br> COMTHEMPLYRINFOCHANGEDTLS &lt;br> COMTCZIP &lt;br> COMTRDNMADRZIP&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>241&lt;/td>
 &lt;td>LdAP&lt;/td>
 &lt;td>egovframework.com.ext.ldap&lt;/td>
 &lt;td>egovframework-ldap-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.ext.ldap&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>242&lt;/td>
 &lt;td>EasyBatch&lt;/td>
 &lt;td>egovframework.com.ext.batch&lt;/td>
 &lt;td>egovframework-easybatch-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.ext.batch&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>243&lt;/td>
 &lt;td>WebMessenger&lt;/td>
 &lt;td>egovframework.com.ext.msg&lt;/td>
 &lt;td>egovframework-webmessenger-4.3.0.zip&lt;/td>
 &lt;td>egovframework.com.cmm &lt;br> egovframework.com.ext.msg &lt;br> egovframework.com.utl.sim &lt;br> egovframework.com.utl.fcc&lt;/td>
 &lt;td>COMTECOPSEQ &lt;br> COMTCCMMNCLCODE &lt;br> COMTCCMMNCODE &lt;br> COMTCCMMNDETAILCODE &lt;br> COMTNAUTHORGROUPINFO &lt;br> COMTNORGNZTINFO &lt;br> COMTNFILE &lt;br> COMTNFILEDETAIL &lt;br> COMTHEMAILDSPTCHMANAGE &lt;br> COMTNGNRLMBER &lt;br> COMTNEMPLYRINFO &lt;br> COMTNENTRPRSMBER &lt;br> COMTNAUTHORINFO &lt;br> COMTNROLES_HIERARCHY &lt;br> COMTNROLEINFO &lt;br> COMTNAUTHORROLERELATE &lt;br> COMVNUSERMASTER&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="공통환경-설정파일">공통환경 설정파일&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>구분&lt;/th>
 &lt;th>경로 및 파일명&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>maven config&lt;/td>
 &lt;td>/pom.xml&lt;/td>
 &lt;td>maven project config&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Web Application config&lt;/td>
 &lt;td>/WEB-INF/web.xml&lt;/td>
 &lt;td>Web Application 단위 config 설정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>servlet context config&lt;/td>
 &lt;td>/WEB-INF/config/egovframework/springmvc/com/egov-com-servlet.xml&lt;/td>
 &lt;td>DispatcherServlet application context 설정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>login Log Aspect config&lt;/td>
 &lt;td>/WEB-INF/config/egovframework/springmvc/com/egov-com-loginaop.xml&lt;/td>
 &lt;td>Login Log Aspect (로그인 메소드, 로그아웃 메소드) 설정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>login check config&lt;/td>
 &lt;td>/WEB-INF/config/egovframework/springmvc/com/egov-com-interceptor.xml&lt;/td>
 &lt;td>IP 정보 기록 및 Login 체크가 필요한 URL과 로그인 여부를 체크해줄 인터셉터 설정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>session 권한 config&lt;/td>
 &lt;td>/WEB-INF/config/egovframework/springmvc/com/egov-com-access.xml&lt;/td>
 &lt;td>Globals.Auth = session 인 경우의 세션방식 사용자 권한 설정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>context bean 정의&lt;/td>
 &lt;td>/resources/egovframework/spring/com/context-*.xml&lt;/td>
 &lt;td>bean 정의&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>범용 properties 정의&lt;/td>
 &lt;td>/resources/egovframework/egovProp/globals.properties&lt;/td>
 &lt;td>global 상수 정의&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>추가 properties 정의&lt;/td>
 &lt;td>/WEB-INF/conf/*.properties&lt;/td>
 &lt;td>추가적인 상수 정의&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>message properties 정의&lt;/td>
 &lt;td>/resources/egovframework/message/com/*.properties&lt;/td>
 &lt;td>message 정의&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>요소기술 환경설정&lt;/td>
 &lt;td>/resources/egovframework/egovProp/conf/*.properties&lt;/td>
 &lt;td>요소기술에 필요한 환경설정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>요소기술 프로그램 설정&lt;/td>
 &lt;td>/resources/egovframework/egovProp/prg/&lt;em>.sh(&lt;/em>.bat)&lt;/td>
 &lt;td>요소기술에 필요한 실행 스크립트&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>sql config 파일&lt;/td>
 &lt;td>/resources/egovframework/sqlmap/com/*.xml&lt;/td>
 &lt;td>sql map config 정의&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>validator rule 파일&lt;/td>
 &lt;td>/resources/egovframework/validator/validator-rules.xml&lt;/td>
 &lt;td>validator를 이용할 시 rule을 정의&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>validator rule 파일&lt;/td>
 &lt;td>/resources/egovframework/validator/com-rules.xml&lt;/td>
 &lt;td>validator를 이용할 시 공통컴포넌트 rule을 정의&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>log 설정&lt;/td>
 &lt;td>/resources/log4j.xml&lt;/td>
 &lt;td>log 관련 설정&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>병행처리</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-parallel_process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/batch-layer/batch-core-parallel_process/</guid><description>&lt;h1 id="병행처리">병행처리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>대용량 데이터를 처리하는 배치수행에서 병렬처리를 이용하면, Job의 구성요소들이 여러 쓰레드 분산수행되어 빠른 시간 내에 효율적으로 작업을 완료할 수 있다.
스프링 배치에서 병렬처리 방식은 실행 유형별로 멀티쓰레드 방식, Parallel 방식, 파티셔닝 방식 등이 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="멀티쓰레드multi-threaded-step">멀티쓰레드(Multi-threaded Step)&lt;/h3>
&lt;p>병렬처리를 시작하는 간단한 방법은 Step 구성요소중 &amp;lt;tasklet&amp;gt; 속성에 TaskExecutor를 추가하는 것이다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;step&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;loading&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;tasklet&lt;/span> &lt;span style="color:#a6e22e">task-executor=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskExecutor&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>...&lt;span style="color:#f92672">&amp;lt;/tasklet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/step&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>TaskExecutor 예제에서 TaskExecutor 인터페이스를 구현하기 위해 빈을 정의한다. TaskExecutor 는 스프링 인터페이스 표준이므로 상세한 내용은 스프링 가이드를 참고한다. 가장 간단한 멀티쓰레드 TaskExecutor 는 SimpleAsyncTaskExecutor 이다. 위 Step 구성으로 수행한 결과 각 청크단위의 reading, processing, writing 과정이 분리된 쓰레드에서 수행된다. 즉, 처리시 순서를 보장하지 않으며 Chunk는 단일 쓰레드 수행과 비교해 item 들이 연속적이지 않다.(commit-Interval의 영향으로 Chunk 내의 순서는 같을 수 있다.)&lt;/p></description></item><item><title>부서권한관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/security/department-role-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/security/department-role-management/</guid><description>&lt;h1 id="부서-권한관리">부서 권한관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>&lt;strong>부서권한관리&lt;/strong>는 시스템 사용을 위해 사용자에게 권한을 부여할 경우 사용자가 업무담당자에 한해서 부서별로 사용자에게 일괄 권한을 부여하는 기능을 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>&lt;strong>부서권한관리&lt;/strong>는 부서별 업무담당자의 권한을 관리하기 위한 목적으로 &lt;strong>등록, 수정, 삭제, 목록조회&lt;/strong>의 기능을 수반한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> ① 부서별 권한 등록 : 부서별 업무담당자를 조회하여 권한정보를 일괄 및 개별 등록한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ② 부서별 권한 수정 : 부서별 업무담당자에게 할당된 권한정보를 일괄 및 개별 수정한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ③ 부서별 권한 삭제 : 부서별 업무담당자에게 할당된 권한정보를 일괄 및 개별 삭제한다.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ④ 부서별 권한 목록 : 부서별 업무담당자에게 할당된 권한정보를 조회한다.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="설명-1">설명&lt;/h2>
&lt;h3 id="패키지-참조-관계">패키지 참조 관계&lt;/h3>
&lt;p>부서권한관리 패키지는 권한관리 패키지와 요소기술의 공통 패키지(cmm)에 대해서만 직접적인 함수적 참조 관계를 가진다. 하지만, 컴포넌트 배포 시 오류 없이 실행되기 위하여 패키지 간의 참조관계에 따라 그룹관리 , 권한그룹관리, 롤관리, 스프링시큐리티, 사용자통합인증, 요소기술(유틸리티) 시스템, 웹에디터, 메일연동 인터페이스 패키지와 함께 배포 파일을 구성한다.&lt;/p></description></item><item><title>Asynchronous request processing</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/asynchronous-request-processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/presentation-layer/asynchronous-request-processing/</guid><description>&lt;h1 id="asynchronous-request-processing">Asynchronous request processing&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>기존의 요청 처리는 하나의 요청에 대해 한 개의 쓰레드를 사용하였다. 하나의 쓰레드에서 요청-응답 과정을 모두 처리하기 때문에 요청처리 이후 응답이 오기까지 쓰레드를 대기상태로 유지하였다. 그러나 서버와의 연결을 유지한채 대기상태로 있는 것이 아니라 서버와의 처리를 계속 이어가게 해주기 위해서는 이러한 기존의 처리에 한계가 있었다.&lt;/p>
&lt;p>Servlet 3.0에서 제공하는 비동기 요청 처리는 쓰레드가 대기상태로 있는 것이 아니라 요청을 처리하는 Servlet 쓰레드가 요청후 바로 반환되고 내부의 다른 쓰레드가 이를 처리했다가 처리완료 후 응답처리 리소스가 가용할 때 Servlet쓰레드가 응답처리를 계속 이어가게 해 주는 것이다.&lt;/p></description></item><item><title>빌드 Lifecycle</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/maven/build-lifecycle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/maven/build-lifecycle/</guid><description>&lt;h1 id="빌드-lifecycle">빌드 Lifecycle&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>메이븐 빌드는 소프트웨어 프로젝트의 핵심적인 빌드 라이프 사이클 개념을 따르고 있으며 빌드 초기화 단계부터
artifact의 배포까지의 생명 주기를 정의하고 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>Maven 생명 주기 단계는 각각의 플러그인과 바인딩 되어 플러그인이 명령을 실행 하며 생명주기 단계 순서에 따라 순차적으로 빌드가 실행되어
개발자가 실행한 명령을 수행한다.&lt;/p>
&lt;blockquote>
&lt;p>예) &lt;code>mvn install&lt;/code> 명령을 실행하면 generate-sources 단계부터 compile, test 명령 등을 거쳐 install 명령을 실행한다.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/build-lifecycle-1.gif" alt="" >
&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/build-lifecycle-2.gif" alt="" >
&lt;/p>
&lt;blockquote>
&lt;p>예) 자바 컴파일: &lt;code>$mvn complile&lt;/code> 명령을 실행한다.&lt;/p></description></item><item><title>빌드 레퍼지토리</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/maven/build-repository/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/maven/build-repository/</guid><description>&lt;h1 id="빌드-레퍼지토리">빌드 레퍼지토리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Maven Repository는 artifact들의 저장소로 로컬 및 리모트 repository로 구성되며 프로젝트의 pom.xml에서 선언한 dependency들을 저장소로부터 불러와서 사용한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Maven 설치 시 로컬에 Maven artifact들을 저장하고 관리하는 repository가 자동으로 구성된다.&lt;br>
기본 설정은 C:\Documents and Settings\Administrator.m2\repository 디렉토리에 구성된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Maven 리모트 repository
Maven에서 제공하는 central respositoty와 각 기업 또는 organization에서 제공하고 있는 리모트 repository들이 있으며&lt;br>
개발자는 환경 설정을 통해 하나 이상의 외부 repository에서 필요로 하는 artifact들을 다운로드 받아 사용할 수 있다.&lt;/p></description></item><item><title>사용자 통계</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/statistics-reporting/user_statistics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/statistics-reporting/user_statistics/</guid><description>&lt;h1 id="사용자-통계">사용자 통계&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>사용자통계 기능은 각종 사용자 현황에 대한 통계자료를 회원유형, 회원상태, 성별에 따라 기간별(연도별, 월별, 일별)로 그래프와 텍스트 형태 두가지 방식으로 제공한다.&lt;/p>
&lt;ul>
&lt;li>기능흐름&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>기능명&lt;/th>
 &lt;th>기능 흐름&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>사용자통계 집계&lt;/td>
 &lt;td>&lt;em>&lt;strong>&lt;strong>사용자정보 요약 배치수행&lt;/strong>&lt;/strong>&lt;/em> → &lt;em>&lt;strong>&lt;strong>사용자요약정보 집계&lt;/strong>&lt;/strong>&lt;/em>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>사용자통계 검색&lt;/td>
 &lt;td>검색조건 입력 → 조건별 사용자 통계 검색&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>사용자 통계 수치를 특정 검색 조건에 따라 정보를 조회하는 기능이다.&lt;/p>
&lt;h3 id="패키지-참조-관계">패키지 참조 관계&lt;/h3>
&lt;p>사용자통계 패키지는 요소기술의 공통(cmm) 패키지와 리포팅 공통(sts.com) 패키지에 대해서 직접적인 함수적 참조 관계를 가진다. 하지만, 컴포넌트 배포 시 오류 없이 실행되기 위하여 패키지 간의 참조관계에 따라 달력 패키지와 함께 배포 파일을 구성한다.&lt;/p></description></item><item><title>사용자관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/member-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/member-management/</guid><description/></item><item><title>사용자관리</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-user-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-user-management/</guid><description>&lt;h1 id="사용자관리">사용자관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>사용자 정보를 등록, 수정, 삭제 관리하는 기능이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="사용자-등록">사용자 등록&lt;/h3>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/configuration-management-tool/images/create-user.jpg" alt="사용자 등록" >
&lt;/p>
&lt;ol>
&lt;li>사용자이름, 아이디, E-Mail, 핸드폰 번호등 사용자정보를 입력한 후 &amp;lsquo;등록&amp;rsquo; 버튼을 클릭하여 사용자 정보를 등록한다.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>사용자 이름 : 사용자 이름&lt;/li>
&lt;li>사용자 아이디 : 사용자 아이디&lt;/li>
&lt;li>E-Mail : E-Mail 주소&lt;/li>
&lt;li>핸드폰 : 핸드폰 번호&lt;/li>
&lt;li>비밀번호 : 비밀번호 입력&lt;/li>
&lt;li>비밀번호 확인 : 비밀번호 확인 입력&lt;/li>
&lt;li>비밀번호 E-Mail 전송 : 비밀번호를 입력하지 않고 &amp;lsquo;비밀번호 E-Mail 전송&amp;rsquo;을 체크하면 비밀번호가 자동으로 생성되어 사용자에게 E-Mail로 전송&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>&amp;lsquo;초기화&amp;rsquo; 버튼을 클릭하여 작성한 내용을 초기화한다.&lt;/li>
&lt;li>&amp;lsquo;목록&amp;rsquo; 버튼을 클릭하여 사용자 목록 화면으로 이동한다.&lt;/li>
&lt;/ol>
&lt;h3 id="사용자-목록">사용자 목록&lt;/h3>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/configuration-management-tool/images/user-list.jpg" alt="사용자 목록록" >
&lt;/p></description></item><item><title>서버 이관</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/server-migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/server-migration/</guid><description>&lt;h1 id="서버이관">서버이관&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>개발완료된 war 파일에 대해 WAS서버로의 &lt;strong>ftp 이관&lt;/strong> , &lt;strong>WAS Deploy&lt;/strong> 및 해당 &lt;strong>WAS 서버의 기동/중지&lt;/strong>에 대해 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>완성된 모듈(WAR)에 대한 서버로의 FTP, Deploy 및 WAS 기동/중지를 수행하기 위해서는 다음의 절차를 따라야 한다.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>관리자 로그인&lt;/strong>&lt;br>
WAS에 해당 모듈의 Deploy 및 WAS 기동/중지를 수행하여야 하므로 관리자 로그인이 선행되어야 한다.&lt;br>
시스템 초기 배포시 admin/admin123으로 셋팅되어 있으며 로그인 후 비밀번호 변경으로 변경하여야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>서버 정보 등록&lt;br>
프로젝트에서 관리할 서버 정보(IP)를 등록한다.&lt;/p></description></item><item><title>서버 개발환경 4.3.0 설치가이드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/install-guide/server-environment-install-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/install-guide/server-environment-install-guide/</guid><description>&lt;h1 id="서버-개발환경-430-설치가이드">서버 개발환경 4.3.0 설치가이드&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크에서 제공하는 서버 환경 4.3.0 구성 가이드를 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>전자정부 표준프레임워크에서 제공하는 서버환경을 설치하기 위한 서버 환경 구성 가이드를 제공한다.&lt;/p>
&lt;ul>
&lt;li>**서버환경 구성(Windows)**윈도우 환경에서 전자정부 표준프레임워크에서 제공하는 설치파일을 이용하여 서버 환경을 구성한다.&lt;/li>
&lt;li>**서버환경 구성(Unix 계열)**Unix 계열(Aix, Linux, Solaris) 환경에서 eGovFrame에서 제공하는 설치파일을 이용하여 서버 환경을 구성한다.&lt;/li>
&lt;li>&lt;strong>설치가이드&lt;/strong>윈도우 환경 및 Unix 계열 설치가이드는 동일하며, Unix계열의 SVN 설치가이드를 별도로 제공한다.
&lt;ul>
&lt;li>



 









 



&lt;a href="https://www.egovframe.go.kr/wiki/lib/exe/fetch.php?media=egovframework:dev4.3:egovci-4.3.0-installation-guide.pdf">[표준프레임워크] CI 및 Nexus 환경구축 가이드 v4.3&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://www.egovframe.go.kr/wiki/lib/exe/fetch.php?media=egovframework:dev4.0:svn-installation-guide.pdf">SVN 설치 가이드(리눅스용)&lt;/a>


&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="설치가이드">설치가이드&lt;/h2>
&lt;h3 id="서버-개발환경-다운로드">서버 개발환경 다운로드&lt;/h3>
&lt;ol>
&lt;li>인터넷 웹브라우저를 통해 



 









 



&lt;a href="https://www.egovframe.go.kr/">eGovFrame 홈페이지&lt;/a>


에 접속하여 사이트 상위메뉴를 통해 &amp;ldquo;다운로드 &amp;gt; 개발환경&amp;gt; 4.x 다운로드&amp;quot;으로 이동한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/install-guide/images/server-environment-download-1.png" alt="서버 개발환경 다운로드1" >
&lt;/p></description></item><item><title>서버 개발환경 소개</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/development-intro/server-environment-introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/development-intro/server-environment-introduction/</guid><description>&lt;h1 id="서버-개발환경">서버 개발환경&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크에서는 경량화된 서버용 개발환경을 설치 할 수 있는 서버 개발환경 설치 파일을 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>전자정부 표준프레임워크에서는 경량화된 서버용 개발환경을 구성 및 설치 할 수 있는 서버 개발환경 설치 파일 및 가이드를 제공한다.&lt;/p>
&lt;p>서버 개발환경은 전자정부 표준프레임워크 서버 개발환경 설치 시 기본으로 설치되는 항목과 선택적으로 설치되는 항목으로 구분할 수 있다. 기본 설치 항목은 Tomcat, Jenkins, Maven으로 구성되어 있고, 선택 항목은 Nexus와 Subversion으로 구성되어 있다. 개발자는 프로젝트의 상황에 맞게 기본 설치 항목과 선택 설치 항목을 적절하게 사용할 수 있다.&lt;/p></description></item><item><title>소스관리도구 서버환경 운영</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/configuration-management/server-environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/configuration-management/server-environment/</guid><description>&lt;h1 id="소스관리도구-서버환경-운영">소스관리도구 서버환경 운영&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크에서는 개발환경의 소스관리도구로 오픈소스인 Subversion을 사용한다. Subversion(SVN, 버전관리 시스템)은 프로젝트 전반적으로 사용하는 파일들을 관리하기 위한 시스템이다.
Subversion은 다수의 개발자가 프로그램을 개발할 때 개발된 버전 관리는 통해 History 를 관리할 수 있도록 하며 전체 팀의 공통 모듈을 일관성 있게 관리할 수 있도록 한다.
현재(2009년 5월) 기준으로, 본 온라인 메뉴얼의 설명이 되는 대상과 전자정부 표준프레임워크의 개발환경에 포함되어 제공되는 Subversion의 설치 버전은 다음과 같다.&lt;/p>
&lt;ul>
&lt;li>서버 환경: Subversion 1.4.6&lt;/li>
&lt;/ul>
&lt;p>명시된 Subversion의 버전은 지속적인 전자정부 표준프레임워크 개발환경의 개선작업으로 인하여 향후 변경되어 배포될 수 있다&lt;/p></description></item><item><title>설정 간소화</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/server-security-simplifying-settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/server-security-simplifying-settings/</guid><description>&lt;h1 id="설정-간소화">설정 간소화&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>표준프레임워크 3.0부터 Server security에 대하여 설정을 간소화 할 수 있는 방법을 제공한다.
내부적으로 필요한 설정을 가지고 있고, XML Schema를 통해 필요한 설정만을 추가할 수 있도록 제공한다.&lt;/p>
&lt;h2 id="xml-namespace-및-schema-설정">XML namespace 및 schema 설정&lt;/h2>
&lt;p>설정 간소화 기능을 사용하기 위해서는 다음과 같은 xml 선언이 필요하다.
&lt;strong>4.1 &amp;gt; 4.2 업그레이드 시 xsd 변경(egov-security-4.1.0.xsd &amp;gt; egov-security-4.2.0.xsd)&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">xmlns:egov-security=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.egovframe.go.kr/schema/egov-security&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">xmlns:security=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/security&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">		http://maven.egovframe.go.kr/schema/egov-security http://maven.egovframe.go.kr/schema/egov-security/egov-security-4.2.0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="security-config-설정">Security Config 설정&lt;/h2>
&lt;p>Security에 대한 기본 설정 정보를 제공한다.&lt;/p></description></item><item><title>설정관리</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-settings/</guid><description>&lt;h1 id="설정관리">설정관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Change Management에 필요한 메일환경설정, 파일업로드 경로, 인덱스 생성경로 등 환경을 설정 한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="메일-설정">메일 설정&lt;/h3>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/configuration-management-tool/images/mail-setting.jpg" alt="메일 설정" >
&lt;/p>
&lt;ol>
&lt;li>메일 설정 목록을 조회한다.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>mail.server.host : 메일 서버의 호스트 서버 정보&lt;/li>
&lt;li>mail.server.port : 메일 서버 이용 포트&lt;/li>
&lt;li>mail.server.username : 메일 서버 아이디&lt;/li>
&lt;li>mail.server.password : 메일 서버 비밀번호&lt;/li>
&lt;li>mail.charset.type : 메일 캐릭터 타입&lt;/li>
&lt;li>mail.encoding.type : 메일 인코딩 타입&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>설정값을 입력 후 &amp;lsquo;수정&amp;rsquo; 버튼을 클릭하여 수정한다.&lt;/li>
&lt;/ol>
&lt;p>✔ 수정은 같은 라인의 변경정보만 수정한다.&lt;/p>
&lt;h3 id="sms-설정">SMS 설정&lt;/h3>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/configuration-management-tool/images/sms-setting.jpg" alt="SMS 설정정" >
&lt;/p></description></item><item><title>Implementation Tool 수동 설치가이드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/install-guide/implementation-tool-manual-install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/install-guide/implementation-tool-manual-install/</guid><description>&lt;h1 id="implementation-tool-수동-설치가이드">Implementation Tool 수동 설치가이드&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>본 가이드는 Eclipse에서 전자정부 프레임워크 플러그인을 설치하는 방법을 제공한다.
개발환경 4.3.0 기준으로 작성되었다.&lt;/p>
&lt;h2 id="step-1-설치파일-다운로드">Step 1. 설치파일 다운로드&lt;/h2>
&lt;h3 id="eclipse-다운로드">Eclipse 다운로드&lt;/h3>
&lt;ol>
&lt;li>인터넷 웹브라우저를 통해 (



 









 



&lt;a href="https://www.eclipse.org/downloads/packages/">eclipse 홈페이지&lt;/a>


)에 접속하여 이클립스를 다운로드한다.&lt;/li>
&lt;li>이클립스 버전은 &lt;strong>4.31.0&lt;/strong>(2024-03) 버전을 다운로드 받도록 한다.&lt;/li>
&lt;li>첨부된 파일을 다운로드받아 압축을 해제한다.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>✔ C: 에 설치할 것을 권장한다.&lt;/p>
&lt;/blockquote>
&lt;h3 id="플러그인-다운로드">플러그인 다운로드&lt;/h3>
&lt;ol>
&lt;li>인터넷 웹브라우저를 통해 (



 









 



&lt;a href="https://www.egovframe.go.kr/">eGovFrame 홈페이지&lt;/a>


)에 접속하여 사이트 상위메뉴를 통해 &amp;ldquo;다운로드 &amp;gt; 개발환경&amp;gt; 4.x 다운로드&amp;quot;으로 이동한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/install-guide/images/plugin-download-1.png" alt="플러그인 다운로드1" >
&lt;/p></description></item><item><title>스페이스관리</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-space-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-space-management/</guid><description>&lt;h1 id="스페이스관리">스페이스관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>스페이스 관리는 이슈가 등록될 수 있도록 스페이스 및 롤, 상태, 필드 등 이슈가 관리될 수 있는 범위를 관리하는 기능으로 관리자만 접근할 수 있다.
스페이스 관리는 프로젝트 구분을 의미하는 스페이스, 사용자 권한을 의미하는 롤, 이슈 처리상태를 의미하는 상태, 이슈관리항목을 의미하는 필드로 구성된다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="스페이스-관리">스페이스 관리&lt;/h3>
&lt;h4 id="스페이스-등록">스페이스 등록&lt;/h4>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/configuration-management-tool/images/create-space.jpg" alt="스페이스 등록" >
&lt;/p>
&lt;ol>
&lt;li>스페이스키, 스페이스명, 설명을 입력한 후 &amp;lsquo;등록&amp;rsquo; 버튼을 클릭하여 스페이스를 등록한 후 스페이스 목록 화면으로 이동한다.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>스페이스키 : 스페이스 고유키&lt;/li>
&lt;li>스페이스명 : 스페이스 이름&lt;/li>
&lt;li>설명 : 스페이스 설명&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>스페이스가 등록된 후 스페이스목록 화면으로 이동한다.&lt;/li>
&lt;li>&amp;lsquo;초기화&amp;rsquo; 버튼을 클릭하여 작성한 내용을 초기화한다.&lt;/li>
&lt;li>&amp;lsquo;목록&amp;rsquo; 버튼을 클릭하여 스페이스목록 화면으로 이동한다.&lt;/li>
&lt;/ol>
&lt;h4 id="스페이스-목록">스페이스 목록&lt;/h4>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/configuration-management-tool/images/space-list.jpg" alt="스페이스 목록" >
&lt;/p></description></item><item><title>시스템</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/system/</guid><description/></item><item><title>Spring Web Flow 환경 설정</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-configuration-setting-system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/business-logic-layer/spring-web-flow/swf-configuration-setting-system/</guid><description>&lt;h1 id="spring-web-flow-환경-구성하기">Spring Web Flow 환경 구성하기&lt;/h1>
&lt;p>Spring Web Flow를 사용하기 위한 Web 개발 환경에 대한 세팅을 설명한다.&lt;/p>
&lt;h2 id="설정">설정&lt;/h2>
&lt;p>Spring Web Flow의 Flow 정의를 위한 XML 문서는 아래와 같은 Schema를 갖는다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:webflow=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/webflow-config&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">http://www.springframework.org/schema/beans
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">http://www.springframework.org/schema/webflow-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">&amp;lt;!-- Setup Web Flow here --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/beans&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="기본적인-설정">기본적인 설정&lt;/h3>
&lt;p>Spring Web Flow를 사용하려면 FlowRegistry FlowExecutor를 설정해야 한다.&lt;/p>
&lt;p>FlowRegistry는 등록될 시나리오에 따라 작성된 flow xml 을 가져오는 역할[1]을 수행한다.
FlowExecutor는 등록된 flow 설정 xml을 실행[2]한다. 차후 Spring MVC 와 결합하여 Web Flow 시스템이 실행되는 부분에 대해 다루겠다.&lt;/p></description></item><item><title>시스템관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/system-manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/system-manage/</guid><description/></item><item><title>공통컴포넌트 시작하기</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/common-intro/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/common-intro/getting-started/</guid><description>&lt;h1 id="공통컴포넌트-시작하기">공통컴포넌트 시작하기&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>개발자의 편의성을 위하여 eGovFrame 기반의 웹 공통컴포넌트 254종의 설치를 돕는 생성 마법사를 제공한다.&lt;/p>
&lt;h2 id="주요-개념">주요 개념&lt;/h2>
&lt;h3 id="공통컴포넌트-생성-마법사">공통컴포넌트 생성 마법사&lt;/h3>
&lt;p>eGovFrame 기반으로 생성한 프로젝트에 공통컴포넌트 관련 파일 복사 기능을 담고 있는 공통컴포넌트 생성 마법사를 제공한다.&lt;/p>
&lt;h2 id="사용-방법">사용 방법&lt;/h2>
&lt;h3 id="공통컴포넌트-생성">공통컴포넌트 생성&lt;/h3>
&lt;h4 id="공통컴포넌트-생성-마법사-사용-단계">공통컴포넌트 생성 마법사 사용 단계&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>메뉴표시줄에서 우클릭 &amp;gt; New &amp;gt; eGovFrame Web Project를 선택한다. (단, eGovFrame 퍼스펙티브 내에서)
&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/common-component/common-intro/images/egovframe-web-project.jpg" alt="eGovFrame Web Project 생성" >
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Project name을 입력하고, Target Runtime으로 &lt;strong>Apache Tomcat v9.0&lt;/strong>을 선택한다.&lt;/p></description></item><item><title>MyBatis 시작하기</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-getting_started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-getting_started/</guid><description>&lt;h2 id="시작하기">시작하기&lt;/h2>
&lt;p>모든 MyBatis 애플리케이션은 SqlSessionFactory 인스턴스를 사용한다. SqlSessionFactory 인스턴스는 SqlSessionFactoryBuilder 를 사용하여 만들 수 있다. SqlSessionFactoryBuilder 는 XML 설정파일에서 SqlSessionFactory 인스턴스를 빌드할 수 있다;&lt;/p>
&lt;h3 id="xml에서-sqlsessionfactory-빌드하기">XML에서 SqlSessionFactory 빌드하기&lt;/h3>
&lt;p>XML 파일에서 SqlSessionFactory 인스턴스를 빌드하는 것은 매우 간단하다. 설정을 위해 클래스패스 자원을 사용하는 것을 추천하나, 파일 경로나 file URL 로부터 만들어진 InputStream 인스턴스를 사용할 수도 있다. MyBatis 는 클래스패스와 다른 위치에서 자원을 로드하는 것으로 좀더 쉽게 해주는 Resources 라는 유틸성 클래스를 가지고 있다.&lt;/p></description></item><item><title>신규 컴포넌트(v3.2)</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/new-components-v3.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/new-components-v3.2/</guid><description/></item><item><title>Encryption/Decryption Service</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto/crypto-encryption-decryption/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/crypto/crypto-encryption-decryption/</guid><description>&lt;h1 id="encryptiondecryption-service">Encryption/Decryption Service&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>암호화는 시큐리티에 대처하는 가장 강력한 수단이다. 이때 본래의 메시지를 평문(Plan Text,Clear Text)이라고 부르고, 암호화된 메시지는 암호문(Cipher Text,Cryptogram)이라고 부른다.
암호화(Encryption,Ciphering)는 메시지의 내용이 불명확하도록 평문을 재구성하여 암호문을 만드는 것인데, 이 때 사용되는 메시지의 재구성 방법을 암호화 알고리즘(Encryption Algorithm)이라고 부른다. 암호화 알고리즘에서는 암호화의 비밀성을 높이기 위해 키(Key)를 사용하기도 한다.
복호화(Decyption,decipheing)란 암호화의 역과정으로, 불명확한 메시지로부터 본래의 메시지를 환원하는 과정이다. 일반적으로 복호화에도 암호화에 사용된 것과 동일한 알고리즘이 사용된다.
그리고 암호화 기법을 적용하는 암호화 및 복호화 과정으로 구성된 시스템을 암호계(Crypto System)라고 부른다. 암호계에는 키나 알고리즘이 포함되는데 하나의 비밀키(Private Key,Secret Key)를 암호화와 복호화에 모두 사용하는 관용암호계(Conventional Crypto System) 와 비밀키와 공개키를 사용하는 공개키(Public Key System)시스템으로 구분된다.&lt;/p></description></item><item><title>암호화 복호화</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/security/encrypt_decrypt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/security/encrypt_decrypt/</guid><description>&lt;h1 id="암호화복호화">암호화/복호화&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>암호화/복호화는 보안을 위하여 데이터를 암호화하거나 암호화된 데이터를 복호화하기 위해, ARIA 방식을 통한 데이터의 암호화 및 복호화 기능을 제공한다.&lt;/p>
&lt;h2 id="전제조건">전제조건&lt;/h2>
&lt;p>암복호화 기능을 사용하기 위해서는 전자정부 표준프레임워크 실행환경중 egovframework.rte.fdl.crypto-x.x.x.jar 라이브러리를 필요로 한다.&lt;/p>
&lt;p>보다 자세한 사항은 실행환경의 



 









 



&lt;a href="https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:rte:fdl:encryption_decryption">암호화/복호화&lt;/a>


 서비스를 참조한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>암복호화는 서비스를 통해 데이터 암호화 및 복호화를 제공하는 기능으로 별도의 화면에서 평문을 입력하고 암호화 문자열을 암호화하여 BASE64형태로 전달받으며, 이를 다시 원문으로 복호화 하는 참고 화면을 제공한다.&lt;/p>
&lt;h3 id="패키지-참조-관계">패키지 참조 관계&lt;/h3>
&lt;p>암호화/복호화 패키지는 요소기술의 공통 패키지(cmm)에 대해서만 직접적인 함수적 참조 관계를 가진다.&lt;/p></description></item><item><title>압축 파일의 종류</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/compression-file-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/compression-file-types/</guid><description>&lt;h1 id="압축-파일의-종류">압축 파일의 종류&lt;/h1>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>압축 파일&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>.alz&lt;/td>
 &lt;td>이스트소프트에서 개발한 압축 형식입니다. 분할 압축을 할 경우 확장자는 (ALZip 으로 생성) alz, a00, a01…형식으로 생성됨.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.ace&lt;/td>
 &lt;td>ACE, WinAce에서 이용하는 압축 형식입니다. 분할 압축을 할 경우 확장자는 ace, c00, c01, … 형식으로 생성됨.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.arc&lt;/td>
 &lt;td>DOS용 프로그램 pkarc.com, pkxarc.com에서 사용되는 압축 형식.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.arj&lt;/td>
 &lt;td>DOS용 프로그램 arj.exe, 윈도우용 프로그램 WinArj에서 이용하는 압축 형식. 분할 압축을 할 경우 확장자는 arj, a01, a02,… 형식으로 생기게 됨.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.b64&lt;/td>
 &lt;td>인터넷에서 문서를 주고 받을 때 사용하는 형식으로 BASE64MIME 형식으로 인코딩된 파일임.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.bh&lt;/td>
 &lt;td>BinHex Format. E-Mail로 이진(binary) 형태의 파일을 보내기 위해 사용하는 형식임.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.bhx&lt;/td>
 &lt;td>인터넷에서 문서를 주고 받을 때 사용하는 형식으로 BASE64MIME 형식으로 인코딩된 파일임.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.bin&lt;/td>
 &lt;td>Macintosh용이며, MacBinary Format. Aladdin StuffIt Expander에서 지원함.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.bz2&lt;/td>
 &lt;td>UNIX용의 bzip2에서 사용하는 압축 형식입니다. 파일 하나만 압축할 수 있으므로 주로 .tar와 함께 사용되며 이 경우 .tar.bz2의 확장자를 갖음. (bzip2로 생성)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.cab&lt;/td>
 &lt;td>Microsoft Cabinet 파일. 마이크로소프트에서 사용하는 압축 형식임.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.ear&lt;/td>
 &lt;td>내부적으로 zip 압축 알고리즘을 사용하는 파일 형식임.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.enc&lt;/td>
 &lt;td>E-Mail로 이진(binary) 형태의 파일을 보내기 위해 사용하는 형식임.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.gz&lt;/td>
 &lt;td>UNIX용의 gzip에서 사용하는 압축 형식. 파일 하나만 압축할 수 있으므로 주로 .tar와 함께 사용되며 이 경우 .tar.gz의 확장자를 갖고 줄여서 .tgz 확장자를 사용하기도 함.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.ha&lt;/td>
 &lt;td>PPMC를 개선한 압축 파일 형식.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.hqx&lt;/td>
 &lt;td>맥에서 제작된 파일을 인터넷에서 문서를 주고 받을 때 사용하는 형식임. (BinHex로 생성)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.ice&lt;/td>
 &lt;td>DOS용 프로그램 ice.exe에서 사용하는 압축 형식임. 실제 파일 내용은 lha와 동일함.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.img&lt;/td>
 &lt;td>Disk image를 저장해둔 파일로, Falk Huth에 의해 만들어진 img.exe라는 프로그램을 이용하여 파일들을 추출해 낼 수 있음.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.jar&lt;/td>
 &lt;td>자바의 jar.exe에서 사용하는 압축 형식. 내부적으로 zip 압축 알고리즘을 사용함.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.lha, .lzh&lt;/td>
 &lt;td>DOS용 프로그램 lha.exe, lharc.exe에서 사용하던 압축 형식. Lempel-Ziv 알고리즘을 사용함.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.mim&lt;/td>
 &lt;td>인터넷에서 문서를 주고 받을 때 사용하는 형식.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.pak&lt;/td>
 &lt;td>DOS용 프로그램 pak.exe에서 사용하던 압축 형식.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.rar&lt;/td>
 &lt;td>DOS용 프로그램 rar.exe와 윈도우용 프로그램 winrar.exe에서 사용하는 압축 형식. 분할 압축을 할 경우 확장자는 rar, r00, r01,… 형식으로 생기게 됨.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.sit&lt;/td>
 &lt;td>Macintosh에서 이용되는 압축 Format. WinArj, Aladdin StuffIt Expander, WinPack 등의 윈도우용 압축 프로그램에서 이를 지원함.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.tar&lt;/td>
 &lt;td>UNIX 명령 tar를 이용해 생성되는 파일 형식으로 실제로는 압축은 되지 않고 여러 파일을 하나로 묶어주기만 함. 보통 tar로 묶은 후 gz으로 압축하며 이 경우 .tar.gz의 확장자를 갖고 줄여서 .tgz 확장자를 사용하기도 함.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.tgz&lt;/td>
 &lt;td>UNIX에서 tar로 묶은 파일을 gzip으로 압축한 파일 형식.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.uue&lt;/td>
 &lt;td>UU Encoded Format. E-Mail로 이진(binary) 형태의 파일을 보내기 위해 사용하는 형식.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.war&lt;/td>
 &lt;td>내부적으로 zip 압축 알고리즘을 사용하는 파일 형식.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.xxe&lt;/td>
 &lt;td>XXEncode Format. E-Mail로 이진(binary) 형태의 파일을 보내기 위해 사용하는 형식.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.z&lt;/td>
 &lt;td>UNIX용의 compress, uncompress에서 사용하는 파일 형식.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.zip&lt;/td>
 &lt;td>도스용 프로그램 pkzip.exe, pkunzip.exe에서 사용하는 파일 형식.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.zoo&lt;/td>
 &lt;td>DOS용 프로그램 zoo.exe에서 사용되는 파일 형식.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>.001&lt;/td>
 &lt;td>rzjoin으로 분할된 파일 형식. 압축이 아닌 단순히 001, 002…… 순서로만 분할된 파일.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>압축/압축해제 예제(Compress/Decompress Example)</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/compress-decompress-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/compress-decompress-example/</guid><description>&lt;h1 id="압축압축해제-예제compressdecompress-example">압축/압축해제 예제(Compress/Decompress Example)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크 상에서 서버상에 존재하는 특정 파일을 압축하거나 압축 해제하는 기능에 대한 예제를 제공한다. 서버상에서 지정된 파일을 zip 파일로 압축하고, 이를 다시 압축 해제하는 기능을 controller 상에서 수행하는 기능을 제공한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;ol>
&lt;li>해당 예제를 실행하고 성공메세지를 확인한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/compress-1.png" alt="compress-1.png" >
&lt;/p>
&lt;ol start="2">
&lt;li>실행에 성공하면 테스트파일을 압축해 C:\egovCompressSample.zip 형태로 압축된다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/compress-2.png" alt="compress-2.png" >
&lt;/p>
&lt;ol start="3">
&lt;li>[압축해제]를 누르고 성공메세지를 확인한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/compress-3.png" alt="compress-3.png" >
&lt;/p>
&lt;ol start="4">
&lt;li>압축해제가 성공하면 C:\egovCompressSample폴더에 압축해제된 파일이 생성되어 있다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/compress-4.png" alt="compress-4.png" >
&lt;/p>
&lt;h2 id="참고자료">참고자료&lt;/h2>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer/compress-decompress/">Compress/Decompress 서비스&lt;/a>


&lt;/li>
&lt;/ul></description></item><item><title>약관관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/terms-manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/terms-manage/</guid><description/></item><item><title>Server Security 업그레이드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/server-security-upgrade/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/server-security/server-security-upgrade/</guid><description>&lt;h1 id="server-security-업그레이드">Server Security 업그레이드&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>표준프레임워크 2.7(Spring Security 2.0.4)에서 3.0(Spring Security 3.2.3)로 업그레이드 Server security의 경우 설정 변경뿐만 아니라 소스 상의 변경 작업이 필요하다.&lt;/p>
&lt;h2 id="주요-변경내용-spring-security-부분">주요 변경내용 (Spring Security 부분)&lt;/h2>
&lt;h3 id="dependencies-및-패키지-변경">dependencies 및 패키지 변경&lt;/h3>
&lt;ul>
&lt;li>spring-security-core (org.springframework.security.core, org.springframework.security.access, etc.)&lt;/li>
&lt;li>spring-security-web (org.springframework.security.web)&lt;/li>
&lt;li>spring-security-config (org.springframework.security.config)&lt;/li>
&lt;/ul>
&lt;h3 id="api-변경">API 변경&lt;/h3>
&lt;ul>
&lt;li>SpringSecurityException 삭제&lt;/li>
&lt;li>ConfigAttributeDefinition ⇒ Collection&lt;ConfigAttribute>&lt;/li>
&lt;li>SavedRequest : class ⇒ interface (DefaultSavedRequest 대체)&lt;/li>
&lt;/ul>
&lt;h3 id="기타">기타&lt;/h3>
&lt;ul>
&lt;li>다중 http elements 지원&lt;/li>
&lt;li>stateless 인증 지원&lt;/li>
&lt;li>DebugFilter 추가 (debugging용)&lt;/li>
&lt;li>hasPermission 표현식 지원 (authorize JSP tag)&lt;/li>
&lt;li>등등&lt;/li>
&lt;/ul>
&lt;h2 id="실행환경-부분-업그레이드-절차">실행환경 부분 업그레이드 절차&lt;/h2>
&lt;h3 id="1-dependency-수정">1. dependency 수정&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>egovframework.rte&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>egovframework.rte.fdl.security&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>3.0.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>적용 버전은 최신 버전 확인 후 적용(patch 버전 등)&lt;/li>
&lt;/ul>
&lt;h3 id="2-webxml-수정">2. web.xml 수정&lt;/h3>
&lt;p>접속 제한을 사용하는 경우 web.xml 상에 HttpSessionEventPublisher listener의 패키지 변경 필요&lt;/p></description></item><item><title>엑셀 리포팅 사용을 위한 setting.xml 설정</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/setting-for-excel-reporting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/setting-for-excel-reporting/</guid><description>&lt;h2 id="엑셀-리포팅-사용을-위한-settingxml-설정">엑셀 리포팅 사용을 위한 setting.xml 설정&lt;/h2>
&lt;p>오픈소스가 아닌 전자정부 개발프레임워크에서 개발한 테스트 엑셀 리포팅을 사용하기 위해서는 setting.xml에 다음과 같이 설정해야 한다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;settings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> . . . 중략 . . .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;pluginGroups&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;pluginGroup&amp;gt;&lt;/span>egovframework.dev&lt;span style="color:#f92672">&amp;lt;/pluginGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/pluginGroups&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/settings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="maven에서-기능-호출하는-방법">Maven에서 기능 호출하는 방법&lt;/h3>
&lt;p>Maven에서 해당 기능을 사용하기 위해 호출하는 방법은 두 가지가 있다.&lt;/p>
&lt;ol>
&lt;li>Full Name 방식 : goal에 &lt;strong>groupID:artifactID:version:goal&lt;/strong> 식으로 지정하는 것이다.&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> Maven clean 기능을 사용하고자 할 때, 다음과 같이 사용한다.
&amp;gt;mvn org.apache.maven.plugins:maven-clean-plugin:2.3:clean
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>간단한 방식 : 몇 가지 조건을 만족하는 경우 &lt;strong>artifactID&lt;/strong>의 &lt;strong>prefix:version:goal&lt;/strong>와 같이 간단하게 기능을 호출할 수 있다.&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code> Maven clean 기능을 사용하고자 할 때, 다음과 같이 사용한다.
&amp;gt;mvn clean:clean
&lt;/code>&lt;/pre>&lt;p>기본적으로 Maven에서 빌드 Lifecycle을 호출하여 기능을 수행하고자 할 때, Full Name으로 호출을 해야 한다. 그러나, 그것이 너무 번거로운 관계로 몇 가지 조건을 만족하는 경우 간단한 방식으로 호출할 수 있다. 그 조건은 다음과 같다.&lt;/p></description></item><item><title>엑셀 예제(Excel Example)</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/excel-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/excel-example/</guid><description>&lt;h1 id="엑셀-예제excel-example">엑셀 예제(Excel Example)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>데이터베이스에 저장된 내용을 화면에 출력하고, 해당 내용을 엑셀 파일로 내보내는 기능에 대한 예제이다. 사용자는 주어진 목록을 엑셀파일 형태로 다운로드 받을 수 있으며, 개발자는 엑셀 템플릿 형태로 양식을 정의하고 이에 맞추어서 데이터를 추가할 수 있다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;ol>
&lt;li>해당 예제를 설치하고 실행하면 상품목록 페이지가 호출된다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/excel-1.png" alt="excel-1" >
&lt;/p>
&lt;ol start="2">
&lt;li>[excel] 버튼을 누르면 상품목록을 excel파일로 다운받을 수 있다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/excel-2.png" alt="excel-2" >
&lt;/p>
&lt;h2 id="참고자료">참고자료&lt;/h2>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer/excel/">Excel 서비스&lt;/a>


&lt;/li>
&lt;/ul></description></item><item><title>온라인참여</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/online-participate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/online-participate/</guid><description/></item><item><title>온라인헬프</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/online-help/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/online-help/</guid><description/></item><item><title>외부 추가 컴포넌트</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/external-components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/external-components/</guid><description/></item><item><title>웹에디터</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/webeditor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/webeditor/</guid><description/></item><item><title>이슈검색</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-search/</guid><description>&lt;h1 id="이슈검색">이슈검색&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>등록된 이슈 및 삭제된 이슈를 검색하는 기능이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="이슈-검색">이슈 검색&lt;/h3>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/configuration-management-tool/images/issue-search.jpg" alt="이슈 검색" >
&lt;/p>
&lt;ol>
&lt;li>검색조건을 입력한 후 &amp;lsquo;검색&amp;rsquo; 버튼을 클릭하여 검색조건에 해당하는 이슈 목록을 조회한다.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>스페이스 : 본인이 할당되지 않은 스페이스를 포함하여 Change Management에 등록되어 있는 모든 스페이스에 등록된 이슈를 검색&lt;/li>
&lt;li>담당자 : Change Management에 등록되어 있는 모든 사용자에서 담당자를 검색&lt;/li>
&lt;li>아이디 : 다른 검색조건과 무관하게 일치되는 아이디를 검색&lt;/li>
&lt;li>이슈제목 : 이슈제목 like 검색&lt;/li>
&lt;li>삭제된 이슈조회 : 삭제된 이슈를 포함하여 검색&lt;/li>
&lt;li>변경일시 : 변경일시가 검색기간에 포함된 날짜에 해당하는 것을 검색&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>&amp;lsquo;초기화&amp;rsquo; 버튼을 클릭하여 작성한 검색조건을 초기화한다.&lt;/li>
&lt;li>아이디 및 이슈제목을 클릭하여 이슈 상세조회 팝업창을 연다.&lt;/li>
&lt;/ol></description></item><item><title>이슈관리</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-management/</guid><description>&lt;h1 id="이슈관리">이슈관리&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>이슈관리는 사용자가 이슈를 등록하고, 담당자가 해당 이슈 처리결과를 업데이트 하여 이슈를 관리하는 기능이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="이슈-등록">이슈 등록&lt;/h3>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/configuration-management-tool/images/create-issue.jpg" alt="이슈 등록" >
&lt;/p>
&lt;ol>
&lt;li>이슈제목, 상세내용, 담당자 할당 등을 입력한 후 &amp;lsquo;등록&amp;rsquo; 버튼을 클릭하면 이슈 등록 후 목록 화면으로 이동한다.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>이슈제목 : 이슈 제목 입력&lt;/li>
&lt;li>상세내용 : 상세내용 입력&lt;/li>
&lt;li>담당자 할당 : 이슈를 처리해야 할 담당자를 선택 (담당자 선택박스에는 해당 스페이스에 할당된 사용자만 조회됨)&lt;/li>
&lt;li>메일 수신자 : 메일 수신자를 선택할 경우 선택된 사용자에게 메일이 발송&lt;/li>
&lt;li>SMS 수신자 : SMS 수신자를 선택할 경우 선택된 사용자에게 메일이 발송&lt;/li>
&lt;li>첨부파일 : 첨부파일 등록&lt;/li>
&lt;/ul>
&lt;p>✔ 이슈제목, 상세내용, 담당자 할당, 메일 수신자 선택, SMS 수신자 선택, 첨부파일은 default 항목이고, 나머지 항목은 [스페이스관리 &amp;gt; 필드관리] 메뉴에서 관리자가 추가한 항목으로 구성된다.&lt;/p></description></item><item><title>이클립스에서 Ant 실행하기</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/run-ant-on-eclipse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/run-ant-on-eclipse/</guid><description>&lt;h2 id="이클립스에서-ant-실행하기">이클립스에서 Ant 실행하기&lt;/h2>
&lt;p>다음은 이클립스에서 Ant View를 사용하여 Ant task를 수행하는 방법이다.&lt;/p>
&lt;ol>
&lt;li>Ant View를 띄우고, 실행할 build file을 선택한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/images/run-ant-on-eclipse-1.png" alt="Ant 실행 1" >
&lt;/p>
&lt;ol start="2">
&lt;li>실행할 task를 더블클릭한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/images/run-ant-on-eclipse-2.png" alt="Ant 실행 2" >
&lt;/p>
&lt;ol start="3">
&lt;li>Console View에서 실행 결과를 확인한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/images/run-ant-on-eclipse-3.png" alt="Ant 실행 3" >
&lt;/p></description></item><item><title>이클립스에서 Maven 실행하기</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/run-maven-on-eclipse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/run-maven-on-eclipse/</guid><description>&lt;h2 id="이클립스에서-maven-실행하기">이클립스에서 Maven 실행하기&lt;/h2>
&lt;p>이클립스에서 Maven을 실행하기 위해서는 



 









 



&lt;a href="http://m2eclipse.sonatype.org/index.html">m2eclipse&lt;/a>


가 설치되어 있어야 하고, m2eclipse를 사용하여 실행하는 방법에 대해 설명하도록 한다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>기본적인 Maven goal 실행&lt;/strong> : Context Menu에서 Run As 에서 실행 - &lt;strong>clean, install, package, test&lt;/strong> 등 수행 가능&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/images/run-maven-on-eclipse-1.jpg" alt="이클립스에서 Maven 실행하기 1" >
&lt;/p>
&lt;ul>
&lt;li>&lt;strong>별도의 goal 실행&lt;/strong>
&lt;ol>
&lt;li>Context Menu에서 &lt;strong>Run As &amp;gt; Maven build…&lt;/strong> 선택&lt;/li>
&lt;li>Goals에 원하는 goal 입력&lt;/li>
&lt;li>Run 클릭&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/images/run-maven-on-eclipse-2.gif" alt="이클립스에서 Maven 실행하기 2" >
&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Name&lt;/th>
 &lt;th>Run As Maven 이름&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Base directory&lt;/td>
 &lt;td>적용될 프로젝트 디렉토리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Goals&lt;/td>
 &lt;td>실행할 goal. 여러 개를 수행할 경우, space를 이용하여 구분한다.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>인쇄/출력</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/print/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/print/</guid><description/></item><item><title>인증서로그인</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/user-authentication/certificate-login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/user-authentication/certificate-login/</guid><description>&lt;h1 id="인증서로그인">인증서로그인&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>인증서로그인은 기존 **



 









 



&lt;a href="https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:gpki_%EC%9D%B8%EC%A6%9D%EC%84%9C_%EB%A1%9C%EA%B7%B8%EC%9D%B8">GPKI 인증서 로그인&lt;/a>


**과 동일한 기능을 제공한다. 다만, GPKI 인증서 로그인의 경우 행정전자서명 인증관리센터에서 배포하는 표준보안 API를 사용한다. 해당 API와 관련한 구체적인 사항은 GPKI 인증서 로그인 서비스의 



 


 








 



&lt;a href="https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:gpki_%EC%9D%B8%EC%A6%9D%EC%84%9C_%EB%A1%9C%EA%B7%B8%EC%9D%B8#%ea%b0%9c%ec%9a%94">개요&lt;/a>


 또는 



 


 








 



&lt;a href="https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:gpki_%EC%9D%B8%EC%A6%9D%EC%84%9C_%EB%A1%9C%EA%B7%B8%EC%9D%B8#%ec%a0%84%ec%a0%9c%ec%a1%b0%ea%b1%b4">전제조건&lt;/a>


 등을 참조한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>인증서로그인를 행정전자서명 인증관리센터(



 









 



&lt;a href="http://www.gpki.go.kr">www.gpki.go.kr&lt;/a>


)에서 제공하는 GPKISecureWeb 모듈을 통해 인증서로그인 기능을 제공한다. (NPKI 및 GPKI 지원)&lt;/p>
&lt;h3 id="패키지-참조-관계">패키지 참조 관계&lt;/h3>
&lt;p>로그인 패키지는 요소기술의 공통(cmm) 패키지에 대해서만 직접적인 함수적 참조 관계를 가진다. 하지만, 컴포넌트 배포 시 오류 없이 실행되기 위하여 패키지 간의 참조관계에 따라 패키지와 포맷/날짜/계산, 메일연동 인터페이스, 시스템 패키지와 함께 배포 파일을 구성한다.&lt;/p></description></item><item><title>인터페이스/화면</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/interface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/interface/</guid><description/></item><item><title>일반 로그인</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/user-authentication/login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/user-authentication/login/</guid><description>&lt;h1 id="일반-로그인-서비스">일반 로그인 서비스&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>로그인 방식은 가입시 작성한 아이디와 비밀번호를 통한 로그인(이하 일반로그인)이다. 일반로그인은 사용자의 분류(일반 회원, 기업 회원, 업무 사용자)에 따라 접속하는 화면이 다르게 구성되어 있다.&lt;/p>
&lt;ul>
&lt;li>기능흐름&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>기능명&lt;/th>
 &lt;th>기능 흐름&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>일반 로그인&lt;/td>
 &lt;td>아이디/비밀번호 입력 → 로그인 요청 →&lt;em>&lt;strong>&lt;strong>권한조회&lt;/strong>&lt;/strong>&lt;/em> → &lt;em>&lt;strong>&lt;strong>세션설정&lt;/strong>&lt;/strong>&lt;/em> → &lt;em>&lt;strong>&lt;strong>로그인로그 생성&lt;/strong>&lt;/strong>&lt;/em> → &lt;em>&lt;strong>&lt;strong>권한별 메뉴설정&lt;/strong>&lt;/strong>&lt;/em> → 권한별 화면로딩&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>로그인 컴포넌트 사용시 보안 고려사항&lt;/li>
&lt;/ul>
&lt;p>제공되는 로그인 컴포넌트는 구간 암호화(Browser와 서버 사이의 암호화)를 제공하지 않는다.(이는 서버 측 컴포넌트이므로 구간 암호화를 제공할 수 없다.) 이를 위해서는 공통 컴포넌트를 이용하여 구현할 때 별도의 구간 암호화 솔루션을 도입하거나 로그인 요청에 대하여 SSL을 적용하는 방식으로 로그인 정보의 보안을 유지할 것을 권장한다.&lt;/p></description></item><item><title>일정관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/schedule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/schedule/</guid><description/></item><item><title>장애관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/error-manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/error-manage/</guid><description/></item><item><title>전자결재</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/edsm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/edsm/</guid><description/></item><item><title>정보제공/알림</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/information-provided/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/user-support/information-provided/</guid><description/></item><item><title>주소록/명함록</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/address/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/address/</guid><description/></item><item><title>MyBatis 주요 변경점</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-ibatis_vs_maybatis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/persistence-layer/dataaccess-mybatis/dataaccess-ibatis_vs_maybatis/</guid><description>&lt;h1 id="mybatis-주요-변경점">MyBatis 주요 변경점&lt;/h1>
&lt;p>본 가이드는 MyBatis와 iBatis의 차이점을 설명한다.&lt;/p>
&lt;h2 id="변경된-용어종합">변경된 용어(종합)&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>iBatis&lt;/th>
 &lt;th>MyBatis&lt;/th>
 &lt;th>비고&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>com.ibatis.*&lt;/td>
 &lt;td>org.apache.ibatis.*&lt;/td>
 &lt;td>패키지 구조 변경&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>SqlMapConfig&lt;/td>
 &lt;td>Configration&lt;/td>
 &lt;td>용어변경&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>sqlMap&lt;/td>
 &lt;td>mapper&lt;/td>
 &lt;td>용어변경&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>sqlMapClient&lt;/td>
 &lt;td>sqlSession&lt;/td>
 &lt;td>구문대체&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>rowHandler&lt;/td>
 &lt;td>resultHandler&lt;/td>
 &lt;td>구문대체&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>resultHandler&lt;/td>
 &lt;td>SqlSessionFactory&lt;/td>
 &lt;td>구문대체&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>parameterMap, parameterClass&lt;/td>
 &lt;td>parameterType&lt;/td>
 &lt;td>속성 통합&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>resultClass&lt;/td>
 &lt;td>resultType&lt;/td>
 &lt;td>용어변경&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>#var#&lt;/td>
 &lt;td>#{var}&lt;/td>
 &lt;td>구문대체&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>$var$&lt;/td>
 &lt;td>${var}&lt;/td>
 &lt;td>구문대체&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;isEqual> , &lt;isNull>&lt;/td>
 &lt;td>&lt;if>&lt;/td>
 &lt;td>구문대체&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="변경사항">변경사항&lt;/h2>
&lt;h3 id="패키지-구조-변경">패키지 구조 변경&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>iBatis&lt;/th>
 &lt;th>MyBatis&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>com.ibatis.*&lt;/td>
 &lt;td>org.apache.ibatis.*&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>패키지 구조는 변경되었으나 기존에 iBatis 패키지명은 그대로 사용한다.&lt;/p>
&lt;h3 id="mybatis-library-별도-제공">MyBatis library 별도 제공&lt;/h3>
&lt;p>Maven Dependency Information 예시&lt;/p></description></item><item><title>지식맵</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/digital-asset-management/knowledge-map/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/digital-asset-management/knowledge-map/</guid><description/></item><item><title>참조 문서 목록</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/</guid><description>&lt;h1 id="참조-문서-목록">참조 문서 목록&lt;/h1>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>No.&lt;/th>
 &lt;th>제목&lt;/th>
 &lt;th>링크&lt;/th>
 &lt;th>설명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>1&lt;/td>
 &lt;td>egovframework-dev-tst-ant 프로젝트 소스 코드&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/egovframework-dev-tst-ant-source/">바로가기&lt;/a>


&lt;/td>
 &lt;td>egovframework-dev-tst-ant 프로젝트 소스 코드이다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>2&lt;/td>
 &lt;td>egovframework-dev-tst 프로젝트 소스 코드&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/egovframework-dev-tst-source/">바로가기&lt;/a>


&lt;/td>
 &lt;td>egovframework-dev-tst 프로젝트 소스 코드이다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3&lt;/td>
 &lt;td>테스트 결과 Excel 리포트&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/excel-test-report/">바로가기&lt;/a>


&lt;/td>
 &lt;td>테스트 결과를 엑셀 형식으로 리포트하는 기능에 대해 설명한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>4&lt;/td>
 &lt;td>테스트 결과 Excel 리포트 상세&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/excel-test-report-detail/">바로가기&lt;/a>


&lt;/td>
 &lt;td>테스트 결과 Excel Report 상세 결과이다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>5&lt;/td>
 &lt;td>Maven에서 생성한 테스트 결과 HTML 리포트&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/maven-test-report/">바로가기&lt;/a>


&lt;/td>
 &lt;td>Maven에서 생성한 테스트 결과 HTML 리포트다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>6&lt;/td>
 &lt;td>Unit Test 작성을 위한 pom.xml dependency 설정&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/pom-dependency-for-write-unittest/">바로가기&lt;/a>


&lt;/td>
 &lt;td>Unit Test 작성을 위한 pom.xml dependency 설정 방법을 코드로 보여준다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>7&lt;/td>
 &lt;td>이클립스에서 Ant 실행하기&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/run-ant-on-eclipse/">바로가기&lt;/a>


&lt;/td>
 &lt;td>이클립스에서 Ant 실행하는 방법을을 설명한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>8&lt;/td>
 &lt;td>이클립스에서 Maven 실행하기&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/run-maven-on-eclipse/">바로가기&lt;/a>


&lt;/td>
 &lt;td>이클립스에서 Maven 실행하는 방법을을 설명한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>9&lt;/td>
 &lt;td>엑셀 리포팅 사용을 위한 setting.xml 설정&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/setting-for-excel-reporting/">바로가기&lt;/a>


&lt;/td>
 &lt;td>엑셀 리포팅 사용을 위한 setting.xml 설정 방법에 대해 설명한다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>10&lt;/td>
 &lt;td>Ant에서 생성한 테스트 결과 HTML 리포트&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/ant-test-report/">바로가기&lt;/a>


&lt;/td>
 &lt;td>Ant에서 생성한 테스트 결과 HTML 리포트다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>11&lt;/td>
 &lt;td>EMMA 실행을 위한 pom.xml 설정 샘플&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/pom-example-for-run-emma/">바로가기&lt;/a>


&lt;/td>
 &lt;td>EMMA 실행을 위한 pom.xml 설정 샘플을 코드로 보여준다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>12&lt;/td>
 &lt;td>EMMA 실행을 위한 build.xml 설정 샘플&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/build-example-for-run-emma/">바로가기&lt;/a>


&lt;/td>
 &lt;td>EMMA 실행을 위한 build.xml 설정 샘플을 코드로 보여준다.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>13&lt;/td>
 &lt;td>EMMA에서 생성한 HTML 리포트 샘플&lt;/td>
 &lt;td>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/emma-test-report/">바로가기&lt;/a>


&lt;/td>
 &lt;td>EMMA에서 생성한 HTML 리포트 샘플이다.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>커뮤니티</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/community/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/collaboration/community/</guid><description/></item><item><title>Log4j 2 환경설정 (코드 내에서 직접 설정 시)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/logging-log4j2/logging-log4j2-configuration_code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/logging-log4j2/logging-log4j2-configuration_code/</guid><description>&lt;h1 id="log4j-2-환경설정-코드-내에서-직접-설정-시">Log4j 2 환경설정 (코드 내에서 직접 설정 시)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Log4j 2 환경 설정(Appender, Layout, Log Level 등)을 코드 내에서 직접 제어할 수 있다.&lt;br>
아래는 별도의 외부 설정파일 없이도 로깅할 수 있는 방법을 설명한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h4 id="사용-방법">사용 방법&lt;/h4>
&lt;p>별도의 Log4j 2 설정파일 없이도 코드 내에서 Logger 객체를 획득하여 로깅이 가능하다.&lt;br>
LogManager.getLogger() 메서드를 통해 Logger 객체를 생성하며, Log4j 2는 디폴트로 설정된 Logger 객체를 반환한다.&lt;br>
디폴트 Logger 객체의 기본적인 디폴트 설정은 다음과 같다.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-properties" data-lang="properties">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Log&lt;/span> &lt;span style="color:#e6db74">Level : ERROR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Appender&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">ConsoleAppender&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Layout&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">PatternLayout&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pattern&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>위 Logger 객체를 org.apache.logging.log4j.core.Logger로 캐스팅하면, Log Level, Appender, Layout 등 설정을 변경할 수 있다.&lt;br>
예시에서 사용된 설정 관련 메서드는 다음과 같다. 더 자세한 정보는 Log4j 2 API를 참조하도록 한다.&lt;/p></description></item><item><title>쿠키/세션</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/cookie-session/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/cookie-session/</guid><description/></item><item><title>소스관리도구 클라이언트환경 사용</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/configuration-management/client-environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/configuration-management/client-environment/</guid><description>&lt;h1 id="소스관리도구-클라이언트환경-사용">소스관리도구 클라이언트환경 사용&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>전자정부 표준프레임워크에서는 개발환경의 소스관리도구로 오픈소스인 Subversion(SVN)을 사용하며, 다른 소스관리도구와 마찬가지로, 시스템의 콘솔을 통한 직접적인 사용 이외에 사용자의 PC에서 편리하게 사용할 수 있도록 GUI를 가진 다양한 클라언트가 존재한다.&lt;/p>
&lt;p>전자정부 표준프레임워크 구축 사업을 통하여 여러 Subversion 클라이언트들을 검토하고 테스트하였으며, 이를 통해 타 SVN 클라이언트에 비하여 기능적으로 우수하고 상대적으로 안정적인 동작을 보인 Subversive Eclipse IDE 플러그인을 전자정부 표준프레임워크의 개발환경에 포함시켜 제공한다.
현재(2009년 5월) 기준으로, 전자정부 표준프레임워크 개발환경으로 제공되는 Subversive 플러그인의 설치버전은 다음과 같다.&lt;/p></description></item><item><title>테스트 결과 Excel 리포트</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/excel-test-report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/excel-test-report/</guid><description>&lt;h1 id="테스트-결과-excel-리포트">테스트 결과 Excel 리포트&lt;/h1>
&lt;p>테스트 결과를 엑셀 형식으로 리포트하는 기능은 오픈소스가 아닌 전자정부 개발프레임워크 개발환경에서 추가 개발한 내용이다.
기본적으로 Ant나 Maven을 사용할 경우 스타일이 달라지지는 않으며, 별도로 커스터마이즈된 템플릿 엑셀 파일을 사용할 경우 그 스타일에 따른 엑셀 리포트를 만들게 된다. 기본적인 내용은 



 


 








 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-automation/test-reporting/#%ec%97%91%ec%85%80-%eb%a6%ac%ed%8f%ac%ed%8a%b8-%ec%83%9d%ec%84%b1-%eb%b0%a9%eb%b2%95">엑셀 리포트 생성 방법&lt;/a>


을 참조하도록 한다.
테스트 결과 Excel Reporting 유지보수 관련해서는 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-tool-ref/excel-test-report-detail/">테스트 결과 Excel Report 상세&lt;/a>


를 참조하기 바란다.&lt;/p>
&lt;h2 id="테스트-결과-엑셀-리포트-생성-설정값">테스트 결과 엑셀 리포트 생성 설정값&lt;/h2>
&lt;p>Excel 형식의 리포트에서는 디폴트 템플릿을 사용하게 되며, 앞에서 보여준 모습의 Excel 리포트를 생성하게 된다.
그 외에도 다양한 설정이 가능한데, 설정하지 않을 경우 디폴트 값을 사용하게 된다.
엑셀 리포트는 원하는 스타일의 템플릿을 만들고 설정 정보를 지정하면 엑셀 스타일을 커스터마이즈할 수 있어, 프로젝트마다 원하는 모양으로 리포트를 생성할 수 있다. 그 사용법은 다음과 같다.&lt;/p></description></item><item><title>테스트 결과 Excel 리포트 상세</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/excel-test-report-detail/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/test-tool/test-tool-ref/excel-test-report-detail/</guid><description>&lt;h1 id="테스트-결과-excel-report-상세">테스트 결과 Excel Report 상세&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>JUnit 테스트 결과를 Excel Report로 생성하는 것은 오픈소스를 사용한 것이 아니라 전자정부 개발 프레임워크 개발환경의 테스트 도구에서 자체 개발한 기능이다. 여기에서는 Excel Report 기능에 대한 상세 내용에 대해 설명하도록 한다.&lt;/p>
&lt;h2 id="기능">기능&lt;/h2>
&lt;p>JUnit TestCase를 자동화하게 되면 결과를 남기게 되는데, 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/test-tool/test-automation/test-reporting/">Test Reporting&lt;/a>


에서 관련 내용을 확인할 수 있다. 국내에서는 엑셀 문서를 통한 보고나 관리 작업이 다양하게 일어나므로, 기본적으로 제공하는 Text, XML, HTML 외에 엑셀 형식을 작성할 수 있는 기능을 Ant Task와 Maven Plug-in으로 제공한다.&lt;/p></description></item><item><title>공통컴포넌트 테이블 구성 정보</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/common-intro/table-structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/common-intro/table-structure/</guid><description>&lt;h1 id="공통컴포넌트-테이블-구성-정보">공통컴포넌트 테이블 구성 정보&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>공통컴포넌트를 적용 시 공통컴포넌트의 종류별 특징을 고려하여 현장 상황에 맞게 적용할 수 있도록 관련 정보를 제공한다.&lt;/p>
&lt;ul>
&lt;li>공통기술의 데이터 엔터티 및 어트리뷰트는 공통기술 웹 어플리케이션이 구동되기 위한 최소한의 필수 항목들로 구성되어 있으며, 공통컴포넌트를 이용하여 개발하는 각 기관에서 기관의 업무환경 및 시스템 구성에 맞도록 구체화하여 사용하여야 한다.(관련ERD 참조)&lt;/li>
&lt;li>요소기술은 Util과 같이 타 어플리케이션 개발 시 참조하여 기능이 재구현되어야 하는 패키지이고, 공통기술은 각 배포단위별로 웹 어플리케이션을 실행 가능한 패키지로 구성되어 있다.&lt;/li>
&lt;li>요소기술은 관련 데이터 엔터티가 존재하지 않으며, 공통기술은 관련 데이터 엔터티가 존재한다.&lt;/li>
&lt;/ul>
&lt;h2 id="테이블-목록">테이블 목록&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>NO&lt;/th>
 &lt;th>구분&lt;/th>
 &lt;th>테이블ID&lt;/th>
 &lt;th>테이블명&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>1&lt;/td>
 &lt;td>-&lt;/td>
 &lt;td>COMTECOPSEQ&lt;/td>
 &lt;td>Sequence 저장테이블&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>2&lt;/td>
 &lt;td>-&lt;/td>
 &lt;td>IDS&lt;/td>
 &lt;td>테이블별 아이디생성&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3&lt;/td>
 &lt;td>사용자디렉토리/통합인증&lt;/td>
 &lt;td>COMTNGNRLMBER&lt;/td>
 &lt;td>일반회원&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>4&lt;/td>
 &lt;td>사용자디렉토리/통합인증&lt;/td>
 &lt;td>COMTNORGNZTINFO&lt;/td>
 &lt;td>조직정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>5&lt;/td>
 &lt;td>사용자디렉토리/통합인증&lt;/td>
 &lt;td>COMTNEMPLYRINFO&lt;/td>
 &lt;td>업무사용자정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>6&lt;/td>
 &lt;td>사용자디렉토리/통합인증&lt;/td>
 &lt;td>COMTNENTRPRSMBER&lt;/td>
 &lt;td>기업회원&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>7&lt;/td>
 &lt;td>사용자디렉토리/통합인증&lt;/td>
 &lt;td>COMVNUSERMASTER&lt;/td>
 &lt;td>사용자정보뷰&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>8&lt;/td>
 &lt;td>사용자디렉토리/통합인증&lt;/td>
 &lt;td>COMTNLOGINPOLICY&lt;/td>
 &lt;td>로그인정책&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>9&lt;/td>
 &lt;td>사용자디렉토리/통합인증&lt;/td>
 &lt;td>COMTNEMPLYRSCRTYESTBS&lt;/td>
 &lt;td>사용자보안설정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>10&lt;/td>
 &lt;td>사용자디렉토리/통합인증&lt;/td>
 &lt;td>COMTNMENUINFO&lt;/td>
 &lt;td>메뉴정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>11&lt;/td>
 &lt;td>사용자디렉토리/통합인증&lt;/td>
 &lt;td>COMTHEMPLYRINFOCHANGEDTLS&lt;/td>
 &lt;td>업무사용자정보변경내역&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>12&lt;/td>
 &lt;td>보안관리&lt;/td>
 &lt;td>COMTNAUTHORGROUPINFO&lt;/td>
 &lt;td>권한그룹정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>13&lt;/td>
 &lt;td>보안관리&lt;/td>
 &lt;td>COMTNAUTHORINFO&lt;/td>
 &lt;td>권한정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>14&lt;/td>
 &lt;td>보안관리&lt;/td>
 &lt;td>COMTNROLES_HIERARCHY&lt;/td>
 &lt;td>롤 계층구조&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>15&lt;/td>
 &lt;td>보안관리&lt;/td>
 &lt;td>COMTNROLEINFO&lt;/td>
 &lt;td>롤정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>16&lt;/td>
 &lt;td>보안관리&lt;/td>
 &lt;td>COMTNAUTHORROLERELATE&lt;/td>
 &lt;td>권한롤관계&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>17&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNBLOG&lt;/td>
 &lt;td>블로그게시판&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>18&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNBLOGUSER&lt;/td>
 &lt;td>블로그사용자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>19&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTHEMAILDSPTCHMANAGE&lt;/td>
 &lt;td>메일발신관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>20&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNTMPLATINFO&lt;/td>
 &lt;td>템플릿&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>21&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNBBSMASTER&lt;/td>
 &lt;td>게시판마스터&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>22&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNBBS&lt;/td>
 &lt;td>게시판&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>23&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNBBSUSE&lt;/td>
 &lt;td>게시판활용&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>24&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNCMMNTY&lt;/td>
 &lt;td>커뮤니티 속성&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>25&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNCLUB&lt;/td>
 &lt;td>동호회속성&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>26&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNBBSMASTEROPTN&lt;/td>
 &lt;td>게시판마스터옵션&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>27&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNCOMMENT&lt;/td>
 &lt;td>댓글&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>28&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNSCRAP&lt;/td>
 &lt;td>스크랩&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>29&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNSTSFDG&lt;/td>
 &lt;td>만족도&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>30&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTHCONFMHISTORY&lt;/td>
 &lt;td>승인이력&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>31&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNCMMNTYUSER&lt;/td>
 &lt;td>커뮤니티사용자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>32&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNCLUBUSER&lt;/td>
 &lt;td>동호회사용자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>33&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNSMS&lt;/td>
 &lt;td>문자메시지&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>34&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNSMSRECPTN&lt;/td>
 &lt;td>문자메시지수신&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>35&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNMTGINFO&lt;/td>
 &lt;td>회의정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>36&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNSCHDULINFO&lt;/td>
 &lt;td>일정정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>37&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNDIARYINFO&lt;/td>
 &lt;td>일지정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>38&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNLEADERSTTUS&lt;/td>
 &lt;td>간부상태&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>39&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNLEADERSCHDUL&lt;/td>
 &lt;td>간부일정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>40&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNLEADERSCHDULDE&lt;/td>
 &lt;td>간부일정일자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>41&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNDEPTJOB&lt;/td>
 &lt;td>부서업무&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>42&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNDEPTJOBBX&lt;/td>
 &lt;td>부서업무함&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>43&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNWIKMNTHNGREPRT&lt;/td>
 &lt;td>주간/월간보고&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>44&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNMEMOTODO&lt;/td>
 &lt;td>메모할일&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>45&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNMEMOREPRT&lt;/td>
 &lt;td>메모보고&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>46&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNNCRD&lt;/td>
 &lt;td>명함정보속성&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>47&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNNCRDUSER&lt;/td>
 &lt;td>명함사용자속성&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>48&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNADBKMANAGE&lt;/td>
 &lt;td>주소록관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>49&lt;/td>
 &lt;td>협업&lt;/td>
 &lt;td>COMTNADBK&lt;/td>
 &lt;td>주소록&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>50&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNFILE&lt;/td>
 &lt;td>파일속성&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>51&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNFILEDETAIL&lt;/td>
 &lt;td>파일상세정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>52&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNSITEMAP&lt;/td>
 &lt;td>사이트맵&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>53&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNINFRMLSANCTN&lt;/td>
 &lt;td>약식결재&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>54&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNSTPLATINFO&lt;/td>
 &lt;td>약관정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>55&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNINDVDLPGECNTNTS&lt;/td>
 &lt;td>마이페이지 컨텐츠&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>56&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNINDVDLPGEESTBS&lt;/td>
 &lt;td>마이페이지 설정&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>57&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNCNTNTSLIST&lt;/td>
 &lt;td>컨텐츠목록&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>58&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNCPYRHTINFO&lt;/td>
 &lt;td>저작권정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>59&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNINDVDLINFOPOLICY&lt;/td>
 &lt;td>개인정보정책확인&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>60&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNHPCMINFO&lt;/td>
 &lt;td>도움말정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>61&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNWORDDICARYINFO&lt;/td>
 &lt;td>용어사전정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>62&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNFAQINFO&lt;/td>
 &lt;td>FAQ정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>63&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNQAINFO&lt;/td>
 &lt;td>QA정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>64&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNADMINISTRATIONWORD&lt;/td>
 &lt;td>행정용어사전관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>65&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNONLINEMANUAL&lt;/td>
 &lt;td>온라인메뉴얼&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>66&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNCNSLTLIST&lt;/td>
 &lt;td>상담내역&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>67&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNQUSTNRTMPLAT&lt;/td>
 &lt;td>설문템플릿&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>68&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNQESTNRINFO&lt;/td>
 &lt;td>설문지정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>69&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNQUSTNRRESPONDINFO&lt;/td>
 &lt;td>설문응답자정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>70&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNQUSTNRQESITM&lt;/td>
 &lt;td>설문문항&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>71&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNQUSTNRRSPNSRESULT&lt;/td>
 &lt;td>설문응답결과&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>72&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNQUSTNRIEM&lt;/td>
 &lt;td>설문항목&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>73&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNONLINEPOLLMANAGE&lt;/td>
 &lt;td>온라인POLL관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>74&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNONLINEPOLLIEM&lt;/td>
 &lt;td>온라인POLL항목&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>75&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNONLINEPOLLRESULT&lt;/td>
 &lt;td>온라인POLL결과&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>76&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNNEWSINFO&lt;/td>
 &lt;td>뉴스정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>77&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNSITELIST&lt;/td>
 &lt;td>사이트목록&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>78&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNRECOMENDSITEINFO&lt;/td>
 &lt;td>추천사이트정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>79&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNEVENTINFO&lt;/td>
 &lt;td>행사/이벤트정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>80&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNEXTRLHRINFO&lt;/td>
 &lt;td>외부인사정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>81&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNPOPUPMANAGE&lt;/td>
 &lt;td>팝업 정보 관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>82&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNNTFCINFO&lt;/td>
 &lt;td>정보알림&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>83&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNBANNER&lt;/td>
 &lt;td>배너&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>84&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNLOGINSCRINIMAGE&lt;/td>
 &lt;td>로그인화면이미지&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>85&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNRECENTSRCHWRDMANAGE&lt;/td>
 &lt;td>최근검색어관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>86&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNRECENTSRCHWRD&lt;/td>
 &lt;td>최근검색어&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>87&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNMAINIMAGE&lt;/td>
 &lt;td>메인이미지&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>88&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNUNITYLINK&lt;/td>
 &lt;td>통합링크&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>89&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNUSERABSNCE&lt;/td>
 &lt;td>사용자부재&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>90&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNINTNETSVC&lt;/td>
 &lt;td>인터넷서비스&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>91&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNTWITTER&lt;/td>
 &lt;td>트위터인증키관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>92&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNWIKIBKMK&lt;/td>
 &lt;td>Wiki북마크&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>93&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNRSS&lt;/td>
 &lt;td>RSS태그관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>94&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNNOTE&lt;/td>
 &lt;td>쪽지관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>95&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNNOTETRNSMIT&lt;/td>
 &lt;td>쪽지송신&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>96&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNNOTERECPTN&lt;/td>
 &lt;td>쪽지수신&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>97&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNMTGPLACEMANAGE&lt;/td>
 &lt;td>회의실관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>98&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNFXTRSMANAGE&lt;/td>
 &lt;td>비품관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>99&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNMTGPLACEFXTRS&lt;/td>
 &lt;td>회의실비품&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>100&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNMTGPLACERESVE&lt;/td>
 &lt;td>회의실예약&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>101&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNCTSNNMANAGE&lt;/td>
 &lt;td>경조관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>102&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNVCATNMANAGE&lt;/td>
 &lt;td>휴가관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>103&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNBNDTDIARY&lt;/td>
 &lt;td>당직관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>104&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNBNDTMANAGE&lt;/td>
 &lt;td>당직관리정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>105&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNBNDTCECKMANAGE&lt;/td>
 &lt;td>당직체크관리정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>106&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNINDVDLYRYCMANAGE&lt;/td>
 &lt;td>개인별연차관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>107&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNRWARDMANAGE&lt;/td>
 &lt;td>포상관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>108&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNANNVRSRYMANAGE&lt;/td>
 &lt;td>기념일관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>109&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNEVENTMANAGE&lt;/td>
 &lt;td>행사관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>110&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNEVENTATDRN&lt;/td>
 &lt;td>행사참석자&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>111&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNCOMMUTE&lt;/td>
 &lt;td>출퇴근관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>112&lt;/td>
 &lt;td>사용자지원&lt;/td>
 &lt;td>COMTNROUGHMAP&lt;/td>
 &lt;td>약도관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>113&lt;/td>
 &lt;td>통계/리포팅&lt;/td>
 &lt;td>COMTSBBSSUMMARY&lt;/td>
 &lt;td>게시물통계요약&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>114&lt;/td>
 &lt;td>통계/리포팅&lt;/td>
 &lt;td>COMTSUSERSUMMARY&lt;/td>
 &lt;td>사용자통계요약&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>115&lt;/td>
 &lt;td>통계/리포팅&lt;/td>
 &lt;td>COMTNREPRTSTATS&lt;/td>
 &lt;td>보고서통계&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>116&lt;/td>
 &lt;td>통계/리포팅&lt;/td>
 &lt;td>COMTNDTAUSESTATS&lt;/td>
 &lt;td>자료이용현황통계&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>117&lt;/td>
 &lt;td>통계/리포팅&lt;/td>
 &lt;td>COMTNNTTSTATS&lt;/td>
 &lt;td>게시물통계&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>118&lt;/td>
 &lt;td>디지털자산관리&lt;/td>
 &lt;td>COMTNDAMMAPTEAM&lt;/td>
 &lt;td>지식맵(조직유형)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>119&lt;/td>
 &lt;td>디지털자산관리&lt;/td>
 &lt;td>COMTNDAMKNOIFM&lt;/td>
 &lt;td>지식정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>120&lt;/td>
 &lt;td>디지털자산관리&lt;/td>
 &lt;td>COMTNDAMMAPKNO&lt;/td>
 &lt;td>지식맵(지식유형)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>121&lt;/td>
 &lt;td>디지털자산관리&lt;/td>
 &lt;td>COMTNDAMPRO&lt;/td>
 &lt;td>지식전문가&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>122&lt;/td>
 &lt;td>디지털자산관리&lt;/td>
 &lt;td>COMTNDAMCALRES&lt;/td>
 &lt;td>지식정보제공/지식정보요청&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>123&lt;/td>
 &lt;td>시스템/서비스연계&lt;/td>
 &lt;td>COMTNCNTCINSTT&lt;/td>
 &lt;td>연계기관&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>124&lt;/td>
 &lt;td>시스템/서비스연계&lt;/td>
 &lt;td>COMTNCNTCSERVICE&lt;/td>
 &lt;td>연계서비스&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>125&lt;/td>
 &lt;td>시스템/서비스연계&lt;/td>
 &lt;td>COMTNCNTCSYSTEM&lt;/td>
 &lt;td>연계시스템&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>126&lt;/td>
 &lt;td>시스템/서비스연계&lt;/td>
 &lt;td>COMTNSYSTEMCNTC&lt;/td>
 &lt;td>시스템연계&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>127&lt;/td>
 &lt;td>시스템/서비스연계&lt;/td>
 &lt;td>COMTNCNTCMESSAGE&lt;/td>
 &lt;td>연계메시지&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>128&lt;/td>
 &lt;td>시스템/서비스연계&lt;/td>
 &lt;td>COMTNCNTCMESSAGEITEM&lt;/td>
 &lt;td>연계메시지항목&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>129&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTCCMMNCLCODE&lt;/td>
 &lt;td>공통분류코드&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>130&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTCCMMNCODE&lt;/td>
 &lt;td>공통코드&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>131&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTCCMMNDETAILCODE&lt;/td>
 &lt;td>공통상세코드&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>132&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNLOGINLOG&lt;/td>
 &lt;td>접속로그&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>133&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTSSYSLOGSUMMARY&lt;/td>
 &lt;td>시스템로그요약&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>134&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTSWEBLOGSUMMARY&lt;/td>
 &lt;td>웹로그 요약&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>135&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNPROGRMLIST&lt;/td>
 &lt;td>프로그램목록&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>136&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTHPROGRMCHANGEDTLS&lt;/td>
 &lt;td>프로그램변경내역&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>137&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNMENUCREATDTLS&lt;/td>
 &lt;td>메뉴생성내역&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>138&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTCZIP&lt;/td>
 &lt;td>우편번호&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>139&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTRDNMADRZIP&lt;/td>
 &lt;td>도로명주소&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>140&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTCADMINISTCODE&lt;/td>
 &lt;td>행정코드&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>141&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTCADMINISTCODERECPTNLOG&lt;/td>
 &lt;td>행정코드수신로그&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>142&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNINSTTCODE&lt;/td>
 &lt;td>기관코드&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>143&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNINSTTCODERECPTNLOG&lt;/td>
 &lt;td>기관코드수신로그&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>144&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNSYSLOG&lt;/td>
 &lt;td>시스템로그&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>145&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNUSERLOG&lt;/td>
 &lt;td>사용자로그&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>146&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNTRSMRCVLOG&lt;/td>
 &lt;td>송수신로그&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>147&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTSTRSMRCVLOGSUMMARY&lt;/td>
 &lt;td>송수신로그요약&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>148&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTHSYSHIST&lt;/td>
 &lt;td>시스템이력&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>149&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNWEBLOG&lt;/td>
 &lt;td>웹로그&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>150&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNBKMKMENUMANAGERESULT&lt;/td>
 &lt;td>바로가기 메뉴 등록&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>151&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNBATCHOPERT&lt;/td>
 &lt;td>배치작업&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>152&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNBATCHRESULT&lt;/td>
 &lt;td>배치결과&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>153&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNBATCHSCHDUL&lt;/td>
 &lt;td>배치스케줄&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>154&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNBATCHSCHDULDFK&lt;/td>
 &lt;td>배치스케줄요일&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>155&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNBACKUPRESULT&lt;/td>
 &lt;td>백업결과&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>156&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNBACKUPOPERT&lt;/td>
 &lt;td>백업작업&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>157&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNBACKUPSCHDULDFK&lt;/td>
 &lt;td>백업스케줄요일&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>158&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNNTWRKINFO&lt;/td>
 &lt;td>네트워크정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>159&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNSERVEREQPMNINFO&lt;/td>
 &lt;td>서버장비정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>160&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNSERVERINFO&lt;/td>
 &lt;td>서버정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>161&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNSERVEREQPMNRELATE&lt;/td>
 &lt;td>서버장비관계&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>162&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNTROBLINFO&lt;/td>
 &lt;td>장애 정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>163&lt;/td>
 &lt;td>시스템관리&lt;/td>
 &lt;td>COMTNPRIVACYLOG&lt;/td>
 &lt;td>개인정보조회 로그&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>164&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNRESTDE&lt;/td>
 &lt;td>휴일관리&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>165&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNTRSMRCVMNTRNG&lt;/td>
 &lt;td>송수신모니터링&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>166&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTHTRSMRCVMNTRNGLOGINFO&lt;/td>
 &lt;td>송수신모니터링로그정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>167&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNSYNCHRNSERVERINFO&lt;/td>
 &lt;td>동기화 서버 정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>168&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNDBMNTRNG&lt;/td>
 &lt;td>DB서비스모니터링&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>169&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTHDBMNTRNGLOGINFO&lt;/td>
 &lt;td>DB서비스모니터링로그정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>170&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNHTTPMON&lt;/td>
 &lt;td>HTTP모니터링&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>171&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTHHTTPMONLOGINFO&lt;/td>
 &lt;td>HTTP서비스모니터링로그정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>172&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNPROCESSMON&lt;/td>
 &lt;td>프로세스모니터링&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>173&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNPROCESSMONLOGINFO&lt;/td>
 &lt;td>프로세스모니터링로그정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>174&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNNTWRKSVCMNTRNG&lt;/td>
 &lt;td>네트워크서비스 모니터링&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>175&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNNTWRKSVCMNTRNGLOGINFO&lt;/td>
 &lt;td>네트워크서비스모니터링로그정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>176&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNFILESYSMNTRNG&lt;/td>
 &lt;td>파일시스템 모니터링&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>177&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNFILESYSMNTRNGLOGINFO&lt;/td>
 &lt;td>파일시스템모니터링로그정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>178&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNPROXYINFO&lt;/td>
 &lt;td>프록시정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>179&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNPROXYLOGINFO&lt;/td>
 &lt;td>프록시 로그 정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>180&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>COMTNSERVERRESRCELOGINFO&lt;/td>
 &lt;td>서버 자원 로그 정보&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>181&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>J_ATTACHFILE&lt;/td>
 &lt;td>Jfile업로드&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>182&lt;/td>
 &lt;td>요소기술&lt;/td>
 &lt;td>IMGTEMP&lt;/td>
 &lt;td>전자관인 이미지&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="테이블초기데이터-생성-스크립트">테이블/초기데이터 생성 스크립트&lt;/h2>
&lt;p>공통컴포넌트는 배포파일을 통해 테이블/초기데이터 생성 스크립트를 제공하므로 전체 테이블/초기데이터 생성 스크립트는 공통컴포넌트의 all-in-one 파일을 통해 얻을 수 있다.&lt;/p></description></item><item><title>통계</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-statistics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/configuration-management-tool/change-management/issue-statistics/</guid><description>&lt;h1 id="통계">통계&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>스페이스별 통계, 사용자별 통계를 조회한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="스페이스별-통계">스페이스별 통계&lt;/h3>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/configuration-management-tool/images/space-statistics.jpg" alt="스펲이스별 통계" >
&lt;/p>
&lt;ol>
&lt;li>스페이스별로 할당된 사용자, 할당된 이슈, 해결된 이슈 등을 조회한다.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>스페이스 명 : 전체 스페이스&lt;/li>
&lt;li>할당된 사용자 : 각 스페이스에 할당된 사용자 명수&lt;/li>
&lt;li>할당된 이슈 : 스페이스에서 사용자에게 할당된 이슈 건수&lt;/li>
&lt;li>미할당된 이슈 : 스페이스에서 사용자에게 할당되지 않은 이슈 건수&lt;/li>
&lt;li>해결된 이슈 : 상태가 &amp;lsquo;CLOSE&amp;rsquo; 된 이슈 건수&lt;/li>
&lt;li>미해결된 이슈 : 상태가 &amp;lsquo;CLOSE&amp;rsquo; 아닌 이슈 건수&lt;/li>
&lt;li>전체이슈 : 총 이슈 건수&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>할당된 사용자, 할당된 이슈, 미할당된 이슈, 해결된 이슈, 미해결된 이슈, 전체이슈별로 그래프가 조회된다.&lt;/li>
&lt;/ol>
&lt;h3 id="사용자별-통계">사용자별 통계&lt;/h3>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/configuration-management-tool/images/user-statistics.jpg" alt="사용자별 통계" >
&lt;/p></description></item><item><title>통합빌드</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/integration-build/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/integration-build/</guid><description>&lt;h1 id="통합빌드">통합빌드&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>각 개발자들이 개인 빌드 과정을 거쳐 작성한 코드들을 통합하여 실행 가능한 산출물로 만들어 내는 일련의 과정을 통합 빌드라 하며 지속적이고 자동화된 통합을 위하여 &lt;br>
CI를 사용하며 Continous Integration이란 여러 명으로 구성된 팀이 작업한 것을 자주 각 팀원이 하루에 한 번 이상, 매일 여러 번-통합하는 것을 가리키는 소프트웨어 개발 Practice를 말한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;p>CI 효과와 특징&lt;/p>
&lt;ul>
&lt;li>
&lt;p>효과&lt;/p>
&lt;ol>
&lt;li>흔히 발생하는 일반적인 위험을 줄여준다.&lt;/li>
&lt;li>에러를 초기에 발견할 수 있다. 자주 통합할수록 에러가 발생하는 범위가 좁아 에러를 잡는 것이 수월해진다.&lt;/li>
&lt;li>잘 동작하고 에러가 거의 없는 S/W를 유지할 수 있다.&lt;/li>
&lt;li>언제 어느 때라도 배포할 수 있는 S/W를 생성해낸다.&lt;/li>
&lt;li>반복적인 수작업을 줄여준다.&lt;/li>
&lt;li>프로젝트 가시성을 좋게 해준다.&lt;/li>
&lt;li>개발 팀이 S/W 제품에 대해 보다 큰 자신감을 갖게 해준다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>특징&lt;/p></description></item><item><title>Log4j 2 환경설정 (설정 파일 사용 시)</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/logging-log4j2/logging-log4j2-configuration_file/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-runtime/foundation-layer/logging/logging-log4j2/logging-log4j2-configuration_file/</guid><description>&lt;h1 id="log4j-2-환경설정-설정-파일-사용-시">Log4j 2 환경설정 (설정 파일 사용 시)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Log4j 2는 기존 Properties 파일 형식의 환경 설정을 지원하지 않으며,&lt;br>
XML (log4j2.xml) 혹은 JSON (log4j2.json or log4j2.jsn) 파일 형식의 환경 설정만 가능하다.&lt;/p>
&lt;p>아래는 XML 파일을 이용한 환경 설정에 대해서만 다루며, JOSN 방식은 Log4j 2 매뉴얼을 참고하도록 한다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;h3 id="log4j-2-xml-configuration">Log4j 2 XML Configuration&lt;/h3>
&lt;h4 id="xml-파일-위치">XML 파일 위치&lt;/h4>
&lt;p>XML 파일(log4j2.xml)을 작성하고, WEB-INF/classes 하위에 포함될 수 있도록 위치시킨다.&lt;br>
Log4j 2가 초기화될 때 자동으로 위 설정 파일을 읽어들인다.&lt;/p></description></item><item><title>파일업로드 예제(File upload example)</title><link>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/file-upload-example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/runtime-example/individual-example/foundation-layer/file-upload-example/</guid><description>&lt;h1 id="파일업로드-예제file-upload-example">파일업로드 예제(File upload example)&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>Apache Commens FileUpload에서 제공하는 CommonsMultipartResolver를 사용한 예제이다.&lt;/p>
&lt;h2 id="설명">설명&lt;/h2>
&lt;ol>
&lt;li>해당 예제를 실행하면 간단한 파일업로드 페이지가 호출된다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/fileupload-1.png" alt="fileupload-1" >
&lt;/p>
&lt;ol start="2">
&lt;li>선택버튼을 눌러 업로드할 이미지파일을 선택한다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/fileupload-2.png" alt="fileupload-2" >
&lt;/p>
&lt;ol start="3">
&lt;li>업로드버튼을 누르면 예제의 루트디렉토리에 있는 image폴더에 파일이 업로드되고 화면에 표시된다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/runtime-example/individual-example/foundation-layer/images/fileupload-3.png" alt="fileupload-3" >
&lt;/p>
&lt;h2 id="참고자료">참고자료&lt;/h2>
&lt;ul>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/">File Upload/Downlowd 서비스&lt;/a>


&lt;/li>
&lt;li>



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-runtime/foundation-layer/file-upload-download-service/file-upload-service/">File Upload 서비스&lt;/a>


&lt;/li>
&lt;/ul></description></item><item><title>패키지 간 참조 관계</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/common-intro/package-reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/common-intro/package-reference/</guid><description>&lt;h1 id="패키지-간-참조-관계">패키지 간 참조 관계&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>컴포넌트를 구성하는 패키지 간의 참조관계를 아래 그림과 같이 도식화하였다. 경량화를 통해 상호 참조관계 및 이행 참조를 통한 순환 참조 관계를 모두 제거하였음을 도식적으로 확인할 수 있다. 함수적 참조관계와 UI 또는 업무적 참조관계를 구분하여 참조관계의 종류를 파악할 수 있도록 하였다. 전체 패키지를 함께 표현하는 것은 판독성이 떨어지므로 컴포넌트 분류 단위별로 표현하였다. 패키지에 부여된 색을 통해 서로 다른 분류에 속하는 패키지들을 구분하도록 구성하였다.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>참고&lt;/strong>: 아래 그림의 유효 공통컴포넌트는 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/common-component/common-intro/deployment-structure/">공통컴포넌트 배포 파일의 구성&lt;/a>


 내역의 공통컴포넌트 및 패키지를 참조하시기 바랍니다.&lt;/p></description></item><item><title>포맷/계산/변환</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/formatter-util/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/elementary-technology/formatter-util/</guid><description/></item><item><title>표준프레임워크 Boot Sample 프로젝트를 Gradle로 빌드환경 전환</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/gradle/boot-to-gradle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/gradle/boot-to-gradle/</guid><description>&lt;h2 id="표준프레임워크-boot-sample-프로젝트를-gradle로-빌드환경-전환">표준프레임워크 Boot Sample 프로젝트를 Gradle로 빌드환경 전환&lt;/h2>
&lt;h3 id="빌드-환경-전환">빌드 환경 전환&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Eclipse Gradle Plugin 설치&lt;/p>
&lt;ul>
&lt;li>Buildship : 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/build-tool/gradle/gradle-buildship/">설치가이드&lt;/a>


&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Sample 프로젝트 생성&lt;/p>
&lt;ul>
&lt;li>
&lt;p>개발환경 &amp;gt; eGovFrame &amp;gt; New Boot Web Project &amp;gt; [프로젝트 정보 입력-Next] &amp;gt; Generate Example 체크 [Finish] (또는)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>개발환경 &amp;gt; file &amp;gt; New &amp;gt; eGovframe Boot Web Project &amp;gt; [프로젝트 정보 입력-Next] &amp;gt; Generate Example 체크 [Finish]&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/boot-gradle-sample-1.png" alt="생성 프로젝트 선택" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/boot-gradle-sample-2.png" alt="프로젝트 정보 입력" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/boot-gradle-sample-3.png" alt="게시판 컨텐츠 자동생성 체크" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/boot-gradle-sample-4.png" alt="메이븐 프로젝트 속성 확인" >
&lt;/p></description></item><item><title>표준프레임워크 Sample 프로젝트를 Gradle로 빌드환경 전환</title><link>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/gradle/to-gradle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/egovframe-development/deployment-tool/build-tool/gradle/to-gradle/</guid><description>&lt;h2 id="표준프레임워크-sample-프로젝트를-gradle로-빌드환경-전환">표준프레임워크 Sample 프로젝트를 Gradle로 빌드환경 전환&lt;/h2>
&lt;h3 id="빌드-환경-전환">빌드 환경 전환&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Eclipse Gradle Plugin 설치&lt;/p>
&lt;ul>
&lt;li>Buildship : 



 









 



&lt;a href="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/build-tool/gradle/gradle-buildship/">설치가이드&lt;/a>


&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Sample 프로젝트 생성&lt;/p>
&lt;ul>
&lt;li>
&lt;p>개발환경 &amp;gt; eGovFrame &amp;gt; New Web Project &amp;gt; [프로젝트 정보 입력-Next] &amp;gt; Generate Example 체크 [Finish] (또는)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>개발환경 &amp;gt; file &amp;gt; New &amp;gt; eGovfroame Web Project &amp;gt; [프로젝트 정보 입력-Next] &amp;gt; Generate Example 체크 [Finish]&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/gradle-sample-1.png" alt="생성 프로젝트 선택" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/gradle-sample-2.png" alt="프로젝트 정보 입력" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/gradle-sample-3.png" alt="게시판 컨텐츠 자동생성 체크" >
&lt;/p>
&lt;p>&lt;img src="https://eGovFramework.github.io/egovframe-docs/egovframe-docs/egovframe-development/deployment-tool/images/gradle-sample-4.png" alt="메이븐 프로젝트 속성 확인" >
&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>build.gradle 파일 추가&lt;/p></description></item><item><title>프로그램관리</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/program-manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/system-management/program-manage/</guid><description/></item><item><title>공통컴포넌트 환경설정</title><link>https://eGovFramework.github.io/egovframe-docs/common-component/common-intro/environment-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eGovFramework.github.io/egovframe-docs/common-component/common-intro/environment-setup/</guid><description>&lt;h1 id="공통컴포넌트-환경설정">공통컴포넌트 환경설정&lt;/h1>
&lt;h2 id="개요">개요&lt;/h2>
&lt;p>표준프레임워크 4.3에서는 다음과 같은 방법으로 환경설정을 할 수 있다.&lt;/p>
&lt;ul>
&lt;li>web.xml 및 context-egovuserdetailshelper.xml 파일을 통한 설정&lt;/li>
&lt;li>Servlet 3.1 기능을 활용한 globals.properties를 통한 설정 간소화&lt;/li>
&lt;/ul>
&lt;h2 id="주요-개념">주요 개념&lt;/h2>
&lt;h3 id="데이터베이스-설정">데이터베이스 설정&lt;/h3>
&lt;p>globals.properties 설정파일을 기준으로 spring profile 서비스를 이용하여 데이터베이스 환경을 설정한다.&lt;/p>
&lt;ul>
&lt;li>Globals.DbType 기준으로 context-datasource.xml 파일에 설정된 Spring Profile 기능에 의해 dataSource 빈이 활성화된다.&lt;/li>
&lt;li>이 기능을 통해 테스트DB, 검증DB, 운영DB로 분리가 가능하다.&lt;/li>
&lt;/ul>
&lt;h3 id="인증권한방식-설정">인증/권한방식 설정&lt;/h3>
&lt;p>표준프레임워크 3.5 이하 버전에서 개발자가 수동으로 관련 XML 설정하던 불편한 점을
표준프레임워크 3.6 이상 버전에서는 globals.properties 설정만으로 인증/권한방식을 설정할 수 있다.&lt;/p></description></item></channel></rss>